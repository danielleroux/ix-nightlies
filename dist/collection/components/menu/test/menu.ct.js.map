{"version":3,"file":"menu.ct.js","sourceRoot":"","sources":["../../../../src/components/menu/test/menu.ct.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect, Locator, Page } from '@playwright/test';\nimport { test } from '@utils/test';\n\ntest('renders', async ({ mount, page }) => {\n  await mount(`\n      <ix-menu>\n        <ix-menu-about>\n        </ix-menu-about>\n        <ix-menu-settings>\n        </ix-menu-settings>\n      </ix-menu>\n    `);\n  const element = page.locator('ix-menu');\n  await expect(element).toHaveClass(/hydrated/);\n  await expect(element).toHaveClass(/breakpoint-lg/);\n});\n\ntest('should stay close after menu click when NOT pinned', async ({\n  mount,\n  page,\n}) => {\n  await mount(`\n      <ix-basic-navigation>\n        <ix-menu>\n          <ix-menu-item>Item</ix-menu-item>\n        </ix-menu>\n      </ix-basic-navigation>\n    `);\n  const menu = page.locator('ix-menu');\n  await page\n    .locator('ix-basic-navigation')\n    .evaluate(\n      (menu: HTMLIxBasicNavigationElement) => (menu.breakpoints = ['md'])\n    );\n  const menuButton = menu.locator('ix-burger-menu');\n  await menuButton.click();\n\n  await expect(menu).toHaveClass(/expanded/);\n  await page.locator('ix-menu-item').click();\n  await expect(menu).not.toHaveClass(/expanded/);\n});\n\ntest('should stay open after menu click when pinned', async ({\n  mount,\n  page,\n}) => {\n  await mount(`\n      <ix-basic-navigation>\n        <ix-menu pinned>\n          <ix-menu-item>Item</ix-menu-item>\n        </ix-menu>\n      </ix-basic-navigation>\n    `);\n  const menu = page.locator('ix-menu');\n  const menuButton = menu.locator('ix-burger-menu');\n  await menuButton.click();\n\n  await expect(menu).not.toHaveClass(/expanded/);\n\n  await page.locator('ix-menu-item').click();\n\n  await expect(menu).not.toHaveClass(/expanded/);\n});\n\ntest('should open and close settings', async ({ mount, page }) => {\n  await mount(`\n      <ix-menu>\n        <ix-menu-about>\n        </ix-menu-about>\n        <ix-menu-settings>\n        </ix-menu-settings>\n      </ix-menu>\n    `);\n  const element = page.locator('ix-menu');\n\n  await clickSettingsButton(element, page);\n  let settings = page.locator('ix-menu-settings');\n  await expect(settings).toBeVisible();\n\n  const closeButton = settings.getByRole('button');\n  await closeButton.click();\n  await expect(settings).not.toBeVisible();\n\n  // Click same button twice\n  await clickSettingsButton(element, page);\n  await clickSettingsButton(element, page);\n  await expect(settings).not.toBeVisible();\n});\n\ntest('should close settings by about', async ({ mount, page }) => {\n  await mount(`\n      <ix-menu>\n        <ix-menu-about>\n        </ix-menu-about>\n        <ix-menu-settings>\n        </ix-menu-settings>\n      </ix-menu>\n    `);\n  const element = page.locator('ix-menu');\n\n  await clickSettingsButton(element, page);\n  let about = page.locator('ix-menu-about');\n  let settings = page.locator('ix-menu-settings');\n\n  await clickAboutButton(element, page);\n  await expect(about).toBeVisible();\n  await expect(settings).not.toBeVisible();\n});\n\ntest('should open and close about', async ({ mount, page }) => {\n  await mount(`\n      <ix-menu>\n        <ix-menu-about>\n        </ix-menu-about>\n        <ix-menu-settings>\n        </ix-menu-settings>\n      </ix-menu>\n    `);\n  const element = page.locator('ix-menu');\n\n  await clickAboutButton(element, page);\n  let about = page.locator('ix-menu-about');\n  await expect(about).toBeVisible();\n\n  const closeButton = about.getByRole('button');\n  await closeButton.click();\n  await expect(about).not.toBeVisible();\n\n  // Click same button twice\n  await clickAboutButton(element, page);\n  await clickAboutButton(element, page);\n  await expect(about).not.toBeVisible();\n});\n\ntest('should close about by settings', async ({ mount, page }) => {\n  await mount(`\n      <ix-menu>\n        <ix-menu-about>\n        </ix-menu-about>\n        <ix-menu-settings>\n        </ix-menu-settings>\n      </ix-menu>\n    `);\n  const element = page.locator('ix-menu');\n\n  await clickAboutButton(element, page);\n  let about = page.locator('ix-menu-about');\n  let settings = page.locator('ix-menu-settings');\n\n  await clickSettingsButton(element, page);\n  await expect(about).not.toBeVisible();\n  await expect(settings).toBeVisible();\n});\n\ntest('should close about by item click', async ({ mount, page }) => {\n  await mount(`\n      <ix-menu>\n        <ix-menu-item>Random</ix-menu-item>\n        <ix-menu-about>\n        </ix-menu-about>\n        <ix-menu-settings>\n        </ix-menu-settings>\n      </ix-menu>\n    `);\n  const element = page.locator('ix-menu');\n\n  await clickAboutButton(element, page);\n  let about = page.locator('ix-menu-about');\n  let settings = page.locator('ix-menu-settings');\n  const menuItem = page.locator('ix-menu-item').filter({ hasText: 'Random' });\n\n  await menuItem.click();\n  await expect(about).not.toBeVisible();\n  await expect(settings).not.toBeVisible();\n});\n\ntest('should close menu by bottom icon click', async ({ mount, page }) => {\n  await mount(`\n    <ix-menu>\n      <ix-menu-item>Random</ix-menu-item>\n      <ix-menu-item slot=\"bottom\">BottomMenuItem</ix-menu-item>\n      <ix-menu-about>\n      </ix-menu-about>\n      <ix-menu-settings>\n      </ix-menu-settings>\n    </ix-menu>\n  `);\n\n  const element = page.locator('ix-menu');\n  await element.getByRole('button', { name: 'Expand sidebar' }).click();\n  const innerMenu = element.locator('.menu');\n  await expect(innerMenu).toHaveClass(/expanded/);\n\n  const bottomMenu = element.locator('ix-menu-item[slot=\"bottom\"]');\n  await bottomMenu.click();\n\n  await expect(innerMenu).not.toHaveClass(/expanded/);\n  await expect(element).toBeVisible();\n});\n\ntest('should have correct aria label', async ({ mount, page }) => {\n  await mount(`\n    <ix-menu pinned>\n    </ix-menu>\n    `);\n\n  await page.locator('ix-menu');\n  const chevronButton = page.locator('ix-icon-button button');\n\n  await expect(chevronButton).toHaveAttribute(\n    'aria-label',\n    'Double Chevron Right'\n  );\n\n  chevronButton.click();\n\n  await expect(chevronButton).toHaveAttribute(\n    'aria-label',\n    'Double Chevron Left'\n  );\n});\n\nasync function clickAboutButton(element: Locator, page: Page) {\n  const aboutButton = element.locator('ix-menu-item#aboutAndLegal');\n  await aboutButton.click();\n  await page.waitForTimeout(1000);\n}\n\nasync function clickSettingsButton(element: Locator, page: Page) {\n  const settingsButton = element.locator('ix-menu-item#settings');\n  await settingsButton.click();\n  await page.waitForTimeout(1000);\n}\n"]}