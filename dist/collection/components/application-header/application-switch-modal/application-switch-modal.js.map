{"version":3,"file":"application-switch-modal.js","sourceRoot":"","sources":["../../../../src/components/application-header/application-switch-modal/application-switch-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop } from '@stencil/core';\nimport {\n  AppSwitchConfiguration,\n  AppSwitchConfigurationTarget,\n} from '../../utils/application-layout/context';\nimport { dismissModal } from '../../utils/modal';\n\nfunction ApplicationItem(props: {\n  host: HTMLIxApplicationSwitchModalElement;\n  name: string;\n  description: string;\n  iconSrc: string;\n  url: string;\n  target: AppSwitchConfigurationTarget;\n  selected: boolean;\n}) {\n  function isExternal(target: AppSwitchConfigurationTarget) {\n    if (\n      target !== '_blank' &&\n      target !== '_parent' &&\n      target !== '_self' &&\n      target !== '_top'\n    ) {\n      // Check if its one of the target keywords\n      // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a?retiredLocale=de#target\n      return true;\n    }\n\n    if (target === '_blank') {\n      return true;\n    }\n\n    return false;\n  }\n\n  return (\n    <button\n      class={{\n        AppEntry: true,\n        Selected: props.selected,\n      }}\n      onClick={() => {\n        dismissModal(props.host);\n        window.open(props.url, props.target);\n      }}\n    >\n      <div>\n        <img class=\"AppIcon\" src={props.iconSrc}></img>\n      </div>\n      <div class=\"AppName\">\n        <ix-typography format=\"h4\">\n          {props.name}\n          {isExternal(props.target) && (\n            <ix-icon\n              size=\"12\"\n              name=\"open-external\"\n              color=\"color-soft-text\"\n            ></ix-icon>\n          )}\n        </ix-typography>\n        <ix-typography format=\"label-sm\" color=\"soft\">\n          {props.description}\n        </ix-typography>\n      </div>\n    </button>\n  );\n}\n\n/** @internal */\n@Component({\n  tag: 'ix-application-switch-modal',\n  styleUrl: 'application-switch-modal.scss',\n  shadow: true,\n})\nexport class ApplicationSwitchModal {\n  @Element() hostElement!: HTMLIxApplicationSwitchModalElement;\n\n  /** @internal */\n  @Prop() config: AppSwitchConfiguration;\n\n  componentWillLoad() {\n    if (!this.config) {\n      throw Error('ApplicationConfig not provided');\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <ix-modal-header icon=\"apps\">\n          {this.config?.i18nAppSwitch || 'Switch to application'}\n        </ix-modal-header>\n        <ix-modal-content class=\"content\">\n          <div class=\"content-apps\">\n            {(!this.config || this.config?.apps.length === 0) && (\n              <div class=\"loading\">\n                <ix-spinner size=\"medium\" variant=\"primary\"></ix-spinner>\n                <span>\n                  {this.config?.i18nLoadingApps ||\n                    'Loading available applications...'}\n                </span>\n              </div>\n            )}\n            {this.config?.apps.map((appEntry) => (\n              <ApplicationItem\n                host={this.hostElement}\n                name={appEntry.name}\n                description={appEntry.description}\n                iconSrc={appEntry.iconSrc}\n                target={appEntry.target}\n                url={appEntry.url}\n                selected={appEntry.id === this.config?.currentAppId}\n              ></ApplicationItem>\n            ))}\n          </div>\n        </ix-modal-content>\n      </Host>\n    );\n  }\n}\n"]}