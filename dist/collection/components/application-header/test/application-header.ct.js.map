{"version":3,"file":"application-header.ct.js","sourceRoot":"","sources":["../../../../src/components/application-header/test/application-header.ct.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect } from '@playwright/test';\nimport { test, viewPorts } from '@utils/test';\nimport { ApplicationLayoutContext } from 'src/components/utils/application-layout/context';\nimport { ContextType } from 'src/components/utils/context';\n\ntest('renders', async ({ mount, page }) => {\n  page.setViewportSize({\n    height: 500,\n    width: 1400,\n  });\n  await mount(\n    `\n      <ix-basic-navigation application-name=\"test\">\n      </ix-basic-navigation>\n    `\n  );\n\n  const header = page.locator('ix-basic-navigation ix-application-header');\n\n  await expect(header).toBeVisible();\n  await expect(header).toHaveClass(/breakpoint-lg/);\n});\n\ntest('not response inside map navigation', async ({ mount, page }) => {\n  page.setViewportSize(viewPorts.sm);\n  await mount(\n    `\n    <ix-map-navigation applicationName=\"TEst\">\n      <div slot=\"logo\">Test</div>\n      <ix-menu>\n        <ix-menu-item>Test</ix-menu-item>\n      </ix-menu>\n    </ix-map-navigation>\n    `\n  );\n  const header = page.locator('ix-map-navigation ix-application-header');\n  const burger = header.locator('ix-burger-menu');\n\n  await expect(burger).not.toBeVisible();\n  await expect(header).toHaveClass(/breakpoint-md/);\n});\n\ntest.describe('cross app navigation', () => {\n  test(`should show app switch icon`, async ({ page, mount }) => {\n    await page.evaluate(() => {\n      window.addEventListener('context-request', (evt: any) => {\n        console.dir(evt.callback);\n        evt.callback({\n          hideHeader: false,\n          host: null,\n          sidebar: false,\n          appSwitchConfig: {\n            i18nAppSwitch: 'some other language',\n            apps: [\n              {\n                id: '1',\n                description: 'description 1',\n                iconSrc: '',\n                name: 'app name 1',\n                target: '_blank',\n                url: 'url-01',\n              },\n              {\n                id: '2',\n                description: 'description 2',\n                iconSrc: '',\n                name: 'app name 1',\n                target: '_blank',\n                url: 'url-02',\n              },\n            ],\n            currentAppId: '2',\n          },\n        } as ContextType<typeof ApplicationLayoutContext>);\n      });\n    });\n    const header = page.locator('ix-application-header');\n    const appSwitchButton = header.locator('ix-icon-button.app-switch');\n    await mount(\n      `\n        <ix-application-header name=\"test\">\n        </ix-application-header>\n      `\n    );\n    await expect(header).toHaveClass(/hydrated/);\n    await expect(appSwitchButton).toBeVisible();\n\n    await appSwitchButton.click();\n\n    const dialog = page.getByRole('dialog');\n    await expect(dialog).toBeVisible();\n\n    const modalHeader = page.locator('ix-modal-header');\n    await expect(modalHeader).toHaveText(/some other language/);\n\n    const modalContent = page.locator('ix-modal-content');\n    const appEntries = modalContent.locator('.AppEntry');\n\n    await expect(appEntries).toHaveCount(2);\n  });\n\n  test(`should close modal after interaction with app`, async ({\n    page,\n    mount,\n  }) => {\n    await page.evaluate(() => {\n      window.addEventListener('context-request', (evt: any) => {\n        console.dir(evt.callback);\n        evt.callback({\n          hideHeader: false,\n          host: null,\n          sidebar: false,\n          appSwitchConfig: {\n            apps: [\n              {\n                id: '1',\n                description: 'description 1',\n                iconSrc: '',\n                name: 'app name 1',\n                target: '_self',\n                url: '',\n              },\n              {\n                id: '2',\n                description: 'description 2',\n                iconSrc: '',\n                name: 'app name 1',\n                target: '_self',\n                url: '',\n              },\n            ],\n            currentAppId: '2',\n          },\n        } as ContextType<typeof ApplicationLayoutContext>);\n      });\n    });\n    const header = page.locator('ix-application-header');\n    const appSwitchButton = header.locator('ix-icon-button.app-switch');\n    await mount(\n      `\n        <ix-application-header name=\"test\">\n        </ix-application-header>\n      `\n    );\n    await expect(header).toHaveClass(/hydrated/);\n    await expect(appSwitchButton).toBeVisible();\n\n    await appSwitchButton.click();\n\n    const dialog = page.getByRole('dialog');\n    await expect(dialog).toBeVisible();\n\n    const modalContent = page.locator('ix-modal-content');\n    const appEntries = modalContent.locator('.AppEntry');\n\n    await expect(appEntries).toHaveCount(2);\n\n    const appEntry = appEntries.nth(0);\n    await appEntry.click();\n\n    await expect(dialog).not.toBeVisible();\n  });\n\n  test(`should show app switch apps (config async)`, async ({\n    page,\n    mount,\n  }) => {\n    await page.evaluate(() => {\n      window.addEventListener('context-request', (evt: any) => {\n        console.dir(evt.callback);\n        evt.callback({\n          hideHeader: false,\n          host: null,\n          sidebar: false,\n          appSwitchConfig: null,\n        } as ContextType<typeof ApplicationLayoutContext>);\n      });\n    });\n    await mount(\n      `\n      <ix-application>\n        <ix-application-header name=\"test\">\n        </ix-application-header>\n      </ix-application>\n      `\n    );\n\n    const application = page.locator('ix-application');\n    const header = page.locator('ix-application-header');\n    const appSwitchButton = header.locator('ix-icon-button.app-switch');\n\n    await expect(header).toHaveClass(/hydrated/);\n    await expect(appSwitchButton).not.toBeVisible();\n\n    await application.evaluate((app) => {\n      (app as any).appSwitchConfig = {\n        i18nAppSwitch: 'some other language',\n        apps: [\n          {\n            id: '1',\n            description: 'description 1',\n            iconSrc: '',\n            name: 'app name 1',\n            target: '_blank',\n            url: 'url-01',\n          },\n          {\n            id: '2',\n            description: 'description 2',\n            iconSrc: '',\n            name: 'app name 1',\n            target: '_blank',\n            url: 'url-02',\n          },\n        ],\n        currentAppId: '2',\n      };\n    });\n\n    await appSwitchButton.click();\n\n    const dialog = page.getByRole('dialog');\n    await expect(dialog).toBeVisible();\n\n    const modalHeader = page.locator('ix-modal-header');\n    await expect(modalHeader).toHaveText(/some other language/);\n\n    const modalContent = page.locator('ix-modal-content');\n    const appEntries = modalContent.locator('.AppEntry');\n\n    await expect(appEntries).toHaveCount(2);\n  });\n\n  test(`should show app switch apps (apps async)`, async ({ page, mount }) => {\n    await page.evaluate(() => {\n      window.addEventListener('context-request', (evt: any) => {\n        evt.callback({\n          hideHeader: false,\n          host: null,\n          sidebar: false,\n          appSwitchConfig: {\n            i18nAppSwitch: 'some other language',\n            i18nLoadingApps: 'LOADING APPS TEXT',\n            apps: [],\n            currentAppId: '2',\n          },\n        } as ContextType<typeof ApplicationLayoutContext>);\n      });\n    });\n    await mount(\n      `\n      <ix-application>\n        <ix-application-header name=\"test\">\n        </ix-application-header>\n      </ix-application>\n      `\n    );\n\n    const application = page.locator('ix-application');\n    await application.evaluate((app) => {\n      (app as any).appSwitchConfig = {\n        i18nAppSwitch: 'some other language',\n        i18nLoadingApps: 'LOADING APPS TEXT',\n        apps: [],\n        currentAppId: '2',\n      };\n    });\n\n    const header = page.locator('ix-application-header');\n    const appSwitchButton = header.locator('ix-icon-button.app-switch');\n\n    await expect(header).toHaveClass(/hydrated/);\n    await expect(appSwitchButton).toBeVisible();\n\n    await appSwitchButton.click();\n\n    const dialog = page.getByRole('dialog');\n    await expect(dialog).toBeVisible();\n\n    const modalHeader = page.locator('ix-modal-header');\n    await expect(modalHeader).toHaveText(/some other language/);\n\n    const appSwitchModal = page.locator('ix-application-switch-modal');\n    const appSwitchSpinner = appSwitchModal.getByText('LOADING APPS TEXT');\n\n    await expect(appSwitchSpinner).toBeVisible();\n\n    await application.evaluate((app) => {\n      (app as any).appSwitchConfig = {\n        i18nAppSwitch: 'some other language',\n        i18nLoadingApps: 'LOADING APPS TEXT',\n        apps: [\n          {\n            id: '1',\n            description: 'description 1',\n            iconSrc: '',\n            name: 'app name 1',\n            target: '_blank',\n            url: 'url-01',\n          },\n          {\n            id: '2',\n            description: 'description 2',\n            iconSrc: '',\n            name: 'app name 1',\n            target: '_blank',\n            url: 'url-02',\n          },\n        ],\n        currentAppId: '2',\n      };\n    });\n\n    const modalContent = page.locator('ix-modal-content');\n    const appEntries = modalContent.locator('.AppEntry');\n\n    await expect(appEntries).toHaveCount(2);\n  });\n\n  test(`should show slotted components`, async ({ page, mount }) => {\n    await mount(\n      `\n      <ix-application-header name=\"Test\">\n        <ix-button>before avatar</ix-button>\n        <ix-avatar></ix-avatar>\n        <ix-button>after avatar</ix-button>\n      </ix-application-header>\n      `\n    );\n\n    const avatar = page.locator('ix-avatar');\n    const beforeAvatarButton = page.locator('ix-button').nth(0);\n    const afterAvatarButton = page.locator('ix-button').nth(1);\n\n    await expect(beforeAvatarButton).toBeVisible();\n    await expect(afterAvatarButton).toBeVisible();\n    await expect(avatar).toBeVisible();\n  });\n\n  test(`should show slotted components inside overflow`, async ({\n    page,\n    mount,\n  }) => {\n    await mount(\n      `\n      <ix-application-header name=\"Test\">\n        <ix-button>before avatar</ix-button>\n        <ix-avatar></ix-avatar>\n        <ix-button>after avatar</ix-button>\n      </ix-application-header>\n      `\n    );\n\n    await page.setViewportSize(viewPorts.sm);\n\n    const avatar = page.locator('ix-avatar');\n\n    const moreMenuButton = page.locator('.context-menu');\n\n    const beforeAvatarButton = page\n      .getByRole('button')\n      .filter({ hasText: 'before avatar' });\n\n    const afterAvatarButton = page\n      .getByRole('button')\n      .filter({ hasText: 'after avatar' });\n\n    await expect(moreMenuButton).toBeVisible();\n    await expect(avatar).toBeVisible();\n\n    await expect(beforeAvatarButton).not.toBeVisible();\n    await expect(afterAvatarButton).not.toBeVisible();\n\n    await moreMenuButton.click();\n\n    const dropdown = page.locator(\n      'ix-application-header ix-dropdown[data-overflow-dropdown]'\n    );\n    await expect(dropdown).toBeVisible();\n\n    const dropdownBeforeAvatarButton = page\n      .locator('ix-application-header ix-button')\n      .nth(0);\n    const dropdownAfterAvatarButton = page\n      .locator('ix-application-header ix-button')\n      .nth(1);\n    await expect(dropdownBeforeAvatarButton).toHaveText('before avatar');\n    await expect(dropdownAfterAvatarButton).toHaveText('after avatar');\n    await expect(dropdownBeforeAvatarButton).toBeVisible();\n    await expect(dropdownAfterAvatarButton).toBeVisible();\n  });\n\n  Object.keys(viewPorts).forEach((key) => {\n    test(`should display avatar with viewport ${key}`, async ({\n      page,\n      mount,\n    }) => {\n      await page.setViewportSize(viewPorts.lg);\n      await mount(\n        `\n        <ix-application-header name=\"Test\">\n          <ix-avatar>\n          </ix-avatar>\n        </ix-application-header>\n      `\n      );\n      const avatar = page.locator('ix-avatar');\n      await expect(avatar).toBeVisible();\n\n      await page.setViewportSize(viewPorts[key]);\n      await expect(avatar).toBeVisible();\n    });\n  });\n});\n"]}