{"version":3,"file":"icon-button.spec.js","sourceRoot":"","sources":["../../../../src/components/icon-button/test/icon-button.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { newSpecPage } from '@stencil/core/testing';\nimport { IconButton } from '../icon-button';\n\ndescribe('icon-button', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [IconButton],\n      html: `<ix-icon-button icon=\"rocket\" disabled></ix-icon-button>`,\n    });\n\n    await page.waitForChanges();\n    const btn = page.doc.querySelector('ix-icon-button');\n    expect(btn.className).toContain('disabled');\n  });\n\n  it('should submit form if type is submit', async () => {\n    const page = await newSpecPage({\n      components: [IconButton],\n      html: `\n      <form>\n        <input type=\"text\" />\n        <ix-icon-button type=\"submit\">Submit</ix-icon-button>s\n      </form>\n      `,\n    });\n\n    await page.waitForChanges();\n\n    const btn = page.doc\n      .querySelector('ix-icon-button[type=\"submit\"]')\n      .shadowRoot.querySelector('button');\n    const shadowButton = page.doc.querySelector(\n      'ix-icon-button[type=\"submit\"] > button'\n    ) as HTMLButtonElement;\n\n    const onClick = jest.fn();\n\n    shadowButton.addEventListener('click', onClick);\n\n    expect(btn).toBeDefined();\n    expect(shadowButton).toBeDefined();\n    expect(shadowButton.style.display).toStrictEqual('none');\n    expect(shadowButton.type).toStrictEqual('submit');\n    expect(shadowButton.tabIndex).toStrictEqual(-1);\n\n    btn.click();\n    expect(onClick).toHaveBeenCalled();\n  });\n\n  it('should not render submit button if normal button is requirers', async () => {\n    const page = await newSpecPage({\n      components: [IconButton],\n      html: `\n      <form>\n        <input type=\"text\" />\n        <ix-icon-button>Submit</ix-icon-button>s\n      </form>\n      `,\n    });\n\n    await page.waitForChanges();\n\n    const btn = page.doc\n      .querySelector('ix-icon-button')\n      .shadowRoot.querySelector('button');\n    const shadowButton = page.doc.querySelector(\n      'ix-icon-button > button'\n    ) as HTMLButtonElement;\n\n    expect(btn).toBeDefined();\n    expect(shadowButton).toBeNull();\n  });\n\n  describe('a11y', () => {\n    it('should have a fallback icon aria name', async () => {\n      const page = await newSpecPage({\n        components: [IconButton],\n        html: `<ix-icon-button icon=\"rocket\"></ix-icon-button>`,\n      });\n\n      await page.waitForChanges();\n\n      const button = page.doc\n        .querySelector('ix-icon-button')\n        .shadowRoot.querySelector('button');\n\n      expect(button).toHaveAttribute('aria-label');\n      expect(button.getAttribute('aria-label')).toBe('Rocket');\n    });\n\n    it('should have a fallback icon aria name without fill postfix', async () => {\n      const page = await newSpecPage({\n        components: [IconButton],\n        html: `<ix-icon-button icon=\"about-filled\"></ix-icon-button>`,\n      });\n\n      await page.waitForChanges();\n\n      const button = page.doc\n        .querySelector('ix-icon-button')\n        .shadowRoot.querySelector('button');\n\n      expect(button).toHaveAttribute('aria-label');\n      expect(button.getAttribute('aria-label')).toBe('About');\n    });\n\n    it('should have a fallback icon aria name', async () => {\n      const page = await newSpecPage({\n        components: [IconButton],\n        html: `<ix-icon-button icon=\"about-battery-filled\"></ix-icon-button>`,\n      });\n\n      await page.waitForChanges();\n\n      const button = page.doc\n        .querySelector('ix-icon-button')\n        .shadowRoot.querySelector('button');\n\n      expect(button).toHaveAttribute('aria-label');\n      expect(button.getAttribute('aria-label')).toBe('About Battery');\n    });\n\n    it('should have a fallback icon aria name without numbers inside name', async () => {\n      const page = await newSpecPage({\n        components: [IconButton],\n        html: `<ix-icon-button icon=\"battery100-percentage\"></ix-icon-button>`,\n      });\n\n      await page.waitForChanges();\n\n      const button = page.doc\n        .querySelector('ix-icon-button')\n        .shadowRoot.querySelector('button');\n\n      expect(button).toHaveAttribute('aria-label');\n      expect(button.getAttribute('aria-label')).toBe('Battery Percentage');\n    });\n\n    it('should have a fallback icon aria name without numbers between', async () => {\n      const page = await newSpecPage({\n        components: [IconButton],\n        html: `<ix-icon-button icon=\"battery-100-percentage\"></ix-icon-button>`,\n      });\n\n      await page.waitForChanges();\n\n      const button = page.doc\n        .querySelector('ix-icon-button')\n        .shadowRoot.querySelector('button');\n\n      expect(button).toHaveAttribute('aria-label');\n      expect(button.getAttribute('aria-label')).toBe('Battery 100 Percentage');\n    });\n\n    it('should have a fallback icon with multiple dashes', async () => {\n      const page = await newSpecPage({\n        components: [IconButton],\n        html: `<ix-icon-button icon=\"text-circle-rectangle-filled\"></ix-icon-button>`,\n      });\n\n      await page.waitForChanges();\n\n      const button = page.doc\n        .querySelector('ix-icon-button')\n        .shadowRoot.querySelector('button');\n\n      expect(button).toHaveAttribute('aria-label');\n      expect(button.getAttribute('aria-label')).toBe('Text Circle Rectangle');\n    });\n\n    it('should have an aria label', async () => {\n      const page = await newSpecPage({\n        components: [IconButton],\n        html: `<ix-icon-button a11y-label=\"some label\"></ix-icon-button>`,\n      });\n\n      await page.waitForChanges();\n\n      const button = page.doc\n        .querySelector('ix-icon-button')\n        .shadowRoot.querySelector('button');\n\n      expect(button).toHaveAttribute('aria-label');\n      expect(button.getAttribute('aria-label')).toBe('some label');\n    });\n\n    it('should have an unknown aria label with an URL', async () => {\n      const page = await newSpecPage({\n        components: [IconButton],\n        html: `<ix-icon-button icon=\"https://someurl.com/test.svg\"></ix-icon-button>`,\n      });\n\n      await page.waitForChanges();\n\n      const button = page.doc\n        .querySelector('ix-icon-button')\n        .shadowRoot.querySelector('button');\n\n      expect(button).toHaveAttribute('aria-label');\n      expect(button.getAttribute('aria-label')).toBe('Unknown');\n    });\n\n    it('should have an unknown aria label with an base64 encoded SVG', async () => {\n      const page = await newSpecPage({\n        components: [IconButton],\n        html: `<ix-icon-button icon=\"data:image/svg+xml\"></ix-icon-button>`,\n      });\n\n      await page.waitForChanges();\n\n      const button = page.doc\n        .querySelector('ix-icon-button')\n        .shadowRoot.querySelector('button');\n\n      expect(button).toHaveAttribute('aria-label');\n      expect(button.getAttribute('aria-label')).toBe('Unknown');\n    });\n  });\n});\n"]}