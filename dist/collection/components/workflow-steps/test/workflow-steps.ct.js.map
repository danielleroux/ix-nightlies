{"version":3,"file":"workflow-steps.ct.js","sourceRoot":"","sources":["../../../../../src/components/workflow-steps/test/workflow-steps.ct.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH;;;;;;;GAOG;AACH,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AAEnC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;IACxC,MAAM,KAAK,CAAC;;;;;;GAMX,CAAC,CAAC;IACH,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACxD,aAAa,CAAC,QAAQ,CACpB,CAAC,IAAgC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAC/D,CAAC;IACF,MAAM,IAAI,GAAG,aAAa;SACvB,OAAO,CAAC,kBAAkB,CAAC;SAC3B,GAAG,CAAC,CAAC,CAAC;SACN,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAC9B,MAAM,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACpD,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;AACnC,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,qBAAqB,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;IACpD,MAAM,KAAK,CAAC;;;;;;GAMX,CAAC,CAAC;IACH,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACxD,MAAM,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClE,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC9C,MAAM,QAAQ,CAAC,KAAK,EAAE,CAAC;IAEvB,MAAM,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACpD,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,iCAAiC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;IAChE,MAAM,KAAK,CAAC;;;;;;GAMX,CAAC,CAAC;IACH,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAExD,MAAM,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAiC,EAAE,EAAE;QACjE,KAAK,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,EAAE;YAC/C,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,MAAM,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnE,MAAM,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClE,MAAM,YAAY,GAAG,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAChD,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAE9C,MAAM,QAAQ,CAAC,KAAK,EAAE,CAAC;IAEvB,MAAM,MAAM,CAAC,aAAa,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACpD,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACnD,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect } from '@playwright/test';\nimport { test } from '@utils/test';\n\ntest('renders', async ({ mount, page }) => {\n  await mount(`\n    <ix-workflow-steps>\n      <ix-workflow-step>Test 1</ix-workflow-step>\n      <ix-workflow-step>Test 2</ix-workflow-step>\n      <ix-workflow-step>Test 3</ix-workflow-step>\n    </ix-workflow-steps>\n  `);\n  const workflowSteps = page.locator('ix-workflow-steps');\n  workflowSteps.evaluate(\n    (step: HTMLIxWorkflowStepsElement) => (step.selectedIndex = 1)\n  );\n  const step = workflowSteps\n    .locator('ix-workflow-step')\n    .nth(1)\n    .locator('.step .selected');\n  await expect(workflowSteps).toHaveClass(/hydrated/);\n  await expect(step).toBeVisible();\n});\n\ntest('should be clickable', async ({ mount, page }) => {\n  await mount(`\n    <ix-workflow-steps clickable>\n      <ix-workflow-step>Test 1</ix-workflow-step>\n      <ix-workflow-step>Test 2</ix-workflow-step>\n      <ix-workflow-step>Test 3</ix-workflow-step>\n    </ix-workflow-steps>\n  `);\n  const workflowSteps = page.locator('ix-workflow-steps');\n  const lastStep = workflowSteps.locator('ix-workflow-step').nth(2);\n  const selectedDiv = lastStep.locator('.step');\n  await lastStep.click();\n\n  await expect(workflowSteps).toHaveClass(/hydrated/);\n  await expect(selectedDiv).toHaveClass(/selected/);\n});\n\ntest('should prevent click navigation', async ({ mount, page }) => {\n  await mount(`\n    <ix-workflow-steps clickable>\n      <ix-workflow-step>Test 1</ix-workflow-step>\n      <ix-workflow-step>Test 2</ix-workflow-step>\n      <ix-workflow-step>Test 3</ix-workflow-step>\n    </ix-workflow-steps>\n  `);\n  const workflowSteps = page.locator('ix-workflow-steps');\n\n  await workflowSteps.evaluate((steps: HTMLIxWorkflowStepsElement) => {\n    steps.addEventListener('stepSelected', (event) => {\n      event.preventDefault();\n    });\n  });\n\n  const firstStep = workflowSteps.locator('ix-workflow-step').nth(0);\n  const lastStep = workflowSteps.locator('ix-workflow-step').nth(2);\n  const firstStepDiv = firstStep.locator('.step');\n  const lastStepDiv = lastStep.locator('.step');\n\n  await lastStep.click();\n\n  await expect(workflowSteps).toHaveClass(/hydrated/);\n  await expect(firstStepDiv).toHaveClass(/selected/);\n  await expect(lastStepDiv).not.toHaveClass(/selected/);\n});\n"]}