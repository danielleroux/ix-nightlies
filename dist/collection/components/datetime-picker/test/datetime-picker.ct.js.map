{"version":3,"file":"datetime-picker.ct.js","sourceRoot":"","sources":["../../../../src/components/datetime-picker/test/datetime-picker.ct.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AAEnC,MAAM,yBAAyB,GAAG,oBAAoB,CAAC;AAEvD,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;IACxC,MAAM,KAAK,CAAC,2CAA2C,CAAC,CAAC;IACzD,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;IAC3D,MAAM,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;IACjD,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;QAClC,MAAM,KAAK,CACT;;;;;;;;;OASC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,sBAAsB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QAC9C,MAAM,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;QAEhD,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;YACzC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACvB,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,gBAAgB,GAAG,CACvB,MAAM,IAAI,CAAC,EAAE,CAAC,mCAAmC,CAAC,CACnD,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEd,KAAK,MAAM,MAAM,IAAI,gBAAgB,EAAE,CAAC;YACtC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;QAED,MAAM,CAAC,MAAM,eAAe,CAAC,CAAC,UAAU,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACrC,MAAM,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;QAEhD,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;YACzC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBACvB,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;QAErC,MAAM,CAAC,MAAM,eAAe,CAAC,CAAC,UAAU,CAAC;IAC3C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect } from '@playwright/test';\nimport { test } from '@utils/test';\n\nconst DATE_TIME_PICKER_SELECTOR = 'ix-datetime-picker';\n\ntest('renders', async ({ mount, page }) => {\n  await mount(`<ix-datetime-picker></ix-datetime-picker>`);\n  const datePicker = page.locator(DATE_TIME_PICKER_SELECTOR);\n  await expect(datePicker).toHaveClass(/hydrated/);\n});\n\ntest.describe('datetime picker tests single', () => {\n  test.beforeEach(async ({ mount }) => {\n    await mount(\n      `\n      <ix-datetime-picker\n        range=\"false\"\n        from=\"1990/03/29\"\n        date-format=\"yyyy/LL/dd\"\n        time=\"09:10:12\"\n        time-format=\"HH:mm:ss\"\n        week-start-index=\"1\"\n      ></ix-datetime-picker>\n      `\n    );\n  });\n\n  test('increment time units', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    const timeChangeEvent = page.evaluate(() => {\n      return new Promise((f) => {\n        document.addEventListener('timeChange', (data) => f(data));\n      });\n    });\n\n    const incrementButtons = (\n      await page.$$('ix-icon-button.arrows:first-child')\n    ).slice(0, 3);\n\n    for (const button of incrementButtons) {\n      await button.click();\n    }\n\n    expect(await timeChangeEvent).toBeTruthy;\n  });\n\n  test('change date', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    const dateChangeEvent = page.evaluate(() => {\n      return new Promise((f) => {\n        document.addEventListener('dateChange', (data) => f(data));\n      });\n    });\n\n    await page.getByText(/^17$/).click();\n\n    expect(await dateChangeEvent).toBeTruthy;\n  });\n});\n"]}