{"version":3,"file":"delegate.js","sourceRoot":"","sources":["../../../src/components/utils/delegate.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAWH,MAAM,wBAAwB;IAC5B,KAAK,CAAC,UAAU,CACd,IAAS,EACT,MAAuB;;QAEvB,MAAM,eAAe,GAAG,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,aAAa,mCAAI,QAAQ,CAAC,IAAI,CAAC;QAC/D,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAS;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;CACF;AAED,MAAM,YAAY,GAAG,IAAI,wBAAwB,EAAE,CAAC;AACpD,IAAI,eAAe,GAAsB,YAAY,CAAC;AAEtD,MAAM,UAAU,yBAAyB,CAAC,QAA2B;IACnE,eAAe,GAAG,QAAQ,CAAC;AAC7B,CAAC;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,GAAG,EAAE;IAClC,OAAO,eAAe,CAAC;AACzB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport type DelegateConfig = {\n  parentElement?: Element;\n};\n\nexport interface FrameworkDelegate {\n  attachView<R = HTMLElement>(view: any, config?: DelegateConfig): Promise<R>;\n  removeView(view: any): Promise<void>;\n}\n\nclass DefaultFrameworkDelegate implements FrameworkDelegate {\n  async attachView<R = HTMLElement>(\n    view: any,\n    config?: DelegateConfig\n  ): Promise<R> {\n    const attachToElement = config?.parentElement ?? document.body;\n    attachToElement.appendChild(view);\n    return view;\n  }\n\n  async removeView(view: any) {\n    view.remove();\n  }\n}\n\nconst coreDelegate = new DefaultFrameworkDelegate();\nlet currentDelegate: FrameworkDelegate = coreDelegate;\n\nexport function registerFrameworkDelegate(delegate: FrameworkDelegate) {\n  currentDelegate = delegate;\n}\n\nexport const resolveDelegate = () => {\n  return currentDelegate;\n};\n\nexport const getCoreDelegate = () => coreDelegate;\n"]}