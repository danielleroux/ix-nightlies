{"version":3,"file":"flip-tile.ct.js","sourceRoot":"","sources":["../../../../../src/components/flip-tile/test/flip-tile.ct.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AAEnC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;IACxC,MAAM,KAAK,CAAC;;;;;;;;;GASX,CAAC,CAAC;IACH,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAEjD,MAAM,qBAAqB,GAAG,WAAW;SACtC,OAAO,CAAC,sBAAsB,CAAC;SAC/B,GAAG,CAAC,CAAC,CAAC,CAAC;IACV,MAAM,qBAAqB,GAAG,WAAW;SACtC,OAAO,CAAC,sBAAsB,CAAC;SAC/B,GAAG,CAAC,CAAC,CAAC,CAAC;IACV,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAClD,MAAM,MAAM,CAAC,qBAAqB,CAAC,CAAC,WAAW,EAAE,CAAC;IAClD,MAAM,MAAM,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;AACxD,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;IACtD,MAAM,KAAK,CAAC;;;;;;;;;GASX,CAAC,CAAC;IACH,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAEjD,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;IAC3E,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;IAEzB,MAAM,qBAAqB,GAAG,WAAW;SACtC,OAAO,CAAC,sBAAsB,CAAC;SAC/B,GAAG,CAAC,CAAC,CAAC,CAAC;IACV,MAAM,qBAAqB,GAAG,WAAW;SACtC,OAAO,CAAC,sBAAsB,CAAC;SAC/B,GAAG,CAAC,CAAC,CAAC,CAAC;IACV,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAClD,MAAM,MAAM,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACtD,MAAM,MAAM,CAAC,qBAAqB,CAAC,CAAC,WAAW,EAAE,CAAC;AACpD,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect } from '@playwright/test';\nimport { test } from '@utils/test';\n\ntest('renders', async ({ mount, page }) => {\n  await mount(`\n    <ix-flip-tile state=\"none\">\n      <div slot=\"header\">Flip header</div>\n      <div slot=\"footer\">\n        Some footer content\n      </div>\n      <ix-flip-tile-content>Example 1</ix-flip-tile-content>\n      <ix-flip-tile-content>Example 2</ix-flip-tile-content>\n    </ix-flip-tile>\n  `);\n  const flipElement = page.locator('ix-flip-tile');\n\n  const flipContentOneElement = flipElement\n    .locator('ix-flip-tile-content')\n    .nth(0);\n  const flipContentTwoElement = flipElement\n    .locator('ix-flip-tile-content')\n    .nth(1);\n  await expect(flipElement).toHaveClass(/hydrated/);\n  await expect(flipContentOneElement).toBeVisible();\n  await expect(flipContentTwoElement).not.toBeVisible();\n});\n\ntest('should change content', async ({ mount, page }) => {\n  await mount(`\n    <ix-flip-tile state=\"none\">\n      <div slot=\"header\">Flip header</div>\n      <div slot=\"footer\">\n        Some footer content\n      </div>\n      <ix-flip-tile-content>Example 1</ix-flip-tile-content>\n      <ix-flip-tile-content>Example 2</ix-flip-tile-content>\n    </ix-flip-tile>\n  `);\n  const flipElement = page.locator('ix-flip-tile');\n\n  const flipButton = flipElement.locator('.flip-tile-header ix-icon-button');\n  await flipButton.click();\n\n  const flipContentOneElement = flipElement\n    .locator('ix-flip-tile-content')\n    .nth(0);\n  const flipContentTwoElement = flipElement\n    .locator('ix-flip-tile-content')\n    .nth(1);\n  await expect(flipElement).toHaveClass(/hydrated/);\n  await expect(flipContentOneElement).not.toBeVisible();\n  await expect(flipContentTwoElement).toBeVisible();\n});\n"]}