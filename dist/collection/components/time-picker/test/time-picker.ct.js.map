{"version":3,"file":"time-picker.ct.js","sourceRoot":"","sources":["../../../../../src/components/time-picker/test/time-picker.ct.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect, Page } from '@playwright/test';\nimport { test } from '@utils/test';\n\nconst TIME_PICKER_SELECTOR = 'ix-time-picker';\nconst getTimeObjs = async (page: Page) => {\n  return await page.$$eval(TIME_PICKER_SELECTOR, (elements) => {\n    return Promise.all(elements.map((elem) => elem.getCurrentTime()));\n  });\n};\n\ntest('renders', async ({ mount, page }) => {\n  await mount(`<ix-time-picker></ix-time-picker>`);\n  const datePicker = page.locator(TIME_PICKER_SELECTOR);\n  await expect(datePicker).toHaveClass(/hydrated/);\n});\n\ntest.describe('time picker tests', () => {\n  test.beforeEach(async ({ mount }) => {\n    await mount(\n      `<ix-time-picker\n      time=\"09:10:11\"\n      >\n      </ix-time-picker>\n      <ix-time-picker\n      time=\"10:11:12 AM\"\n      format=\"hh:mm:ss a\"\n      >\n      </ix-time-picker>`\n    );\n  });\n\n  test('get time', async ({ page }) => {\n    expect(await getTimeObjs(page)).toEqual(['09:10:11', '10:11:12 AM']);\n  });\n\n  test('increment time units', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    // Slice is necessary, because on element is on Shadow-DOM\n    const incrementButtons = (\n      await page.$$('ix-icon-button.arrows:first-child')\n    ).slice(0, 3);\n\n    for (const button of incrementButtons) {\n      await button.click();\n    }\n\n    expect(await getTimeObjs(page)).toEqual(['10:11:12', '10:11:12 AM']);\n  });\n\n  test('decrement time units', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    const decrementButtons = (\n      await page.$$('ix-icon-button.arrows:last-child')\n    ).slice(0, 3);\n\n    for (const button of decrementButtons) {\n      await button.click();\n    }\n\n    expect(await getTimeObjs(page)).toEqual(['08:09:10', '10:11:12 AM']);\n  });\n\n  test('maximum / minimum time units', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n    const inputFields = await page\n      .locator('ix-date-time-card')\n      .locator('input')\n      .all();\n\n    for (const field of inputFields) {\n      await field.type('100');\n      await field.press('Enter');\n    }\n\n    expect(await getTimeObjs(page)).toEqual(['23:59:59', '12:59:59 PM']);\n  });\n\n  test('change time reference', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n    const dateTimeCard = await page.$$('ix-date-time-card');\n\n    const decrementButtons = await dateTimeCard[1].$$(\n      'ix-icon-button.arrows:last-child'\n    );\n    await decrementButtons[3].click();\n\n    expect(await getTimeObjs(page)).toEqual(['09:10:11', '10:11:12 PM']);\n  });\n\n  test('select different time fires timeChange event', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    const timeChangeEvent = page.evaluate(() => {\n      return new Promise((f) => {\n        document.addEventListener('timeChange', (data) => f(data));\n      });\n    });\n\n    const incrementButtons = (\n      await page.$$('ix-icon-button.arrows:first-child')\n    ).slice(0, 3);\n    await incrementButtons[2].click();\n\n    expect(await timeChangeEvent).toBeTruthy();\n  });\n\n  test('change time from outside', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    await page.$eval(TIME_PICKER_SELECTOR, (el: HTMLIxTimePickerElement) => {\n      el.time = '10:11:15';\n    });\n\n    await page.$eval(TIME_PICKER_SELECTOR, (el: HTMLIxTimePickerElement) => {\n      el.time = '11:12:15';\n    });\n\n    expect(['11:12:15', '10:11:12 AM']).toEqual(await getTimeObjs(page));\n  });\n});\n"]}