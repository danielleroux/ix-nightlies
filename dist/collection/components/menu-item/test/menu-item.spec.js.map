{"version":3,"file":"menu-item.spec.js","sourceRoot":"","sources":["../../../../../src/components/menu-item/test/menu-item.spec.tsx"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,YAAY;AACZ,OAAO,EAAE,sBAAsB,EAAE,MAAM,+BAA+B,CAAC;AACvE,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;AAE3C,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,UAAU,CAAC,GAAG,EAAE;QACd,YAAY;QACZ,sBAAsB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;YACtC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;SACnB,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE,4CAA4C;SACnD,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAEpD,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAE9D,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE,yDAAyD;SAChE,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAEpD,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAE9D,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE,4CAA4C;SACnD,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;QACjC,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC9D,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { newSpecPage } from '@stencil/core/testing';\nimport { MenuItem } from '../menu-item';\n//@ts-ignore\nimport { createMutationObserver } from '../../utils/mutation-observer';\njest.mock('../../utils/mutation-observer');\n\ndescribe('ix-menu-item', () => {\n  beforeEach(() => {\n    //@ts-ignore\n    createMutationObserver = jest.fn(() => ({\n      observe: jest.fn(),\n    }));\n  });\n  it('should have a title', async () => {\n    const page = await newSpecPage({\n      components: [MenuItem],\n      html: `<ix-menu-item>Example Title</ix-menu-item>`,\n    });\n\n    await page.waitForChanges();\n\n    const item = page.doc.querySelector('ix-menu-item');\n\n    const avatarElement = item.shadowRoot.querySelector('button');\n\n    expect(avatarElement.title).toBe('Example Title');\n  });\n\n  it('should have a title from innerText', async () => {\n    const page = await newSpecPage({\n      components: [MenuItem],\n      html: `<ix-menu-item><span>Example Title</span></ix-menu-item>`,\n    });\n\n    await page.waitForChanges();\n\n    const item = page.doc.querySelector('ix-menu-item');\n\n    const avatarElement = item.shadowRoot.querySelector('button');\n\n    expect(avatarElement.title).toBe('Example Title');\n  });\n\n  it('should change title after content change', async () => {\n    const page = await newSpecPage({\n      components: [MenuItem],\n      html: `<ix-menu-item>Example Title</ix-menu-item>`,\n    });\n\n    await page.waitForChanges();\n    const item = page.doc.querySelector('ix-menu-item');\n    item.innerText = 'Updated Title';\n    const avatarElement = item.shadowRoot.querySelector('button');\n    expect(avatarElement.title).toStrictEqual('Example Title');\n  });\n});\n"]}