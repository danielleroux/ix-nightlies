/*
 * SPDX-FileCopyrightText: 2023 Siemens AG
 *
 * SPDX-License-Identifier: MIT
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 * SPDX-FileCopyrightText: 2023 Siemens AG
 *
 * SPDX-License-Identifier: MIT
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 * SPDX-FileCopyrightText: 2023 Siemens AG
 *
 * SPDX-License-Identifier: MIT
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
:host {
  /* width */
  /* Track */
  /* Handle */
  /* Handle on hover */
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  flex-direction: column;
}
:host *,
:host *::after,
:host *::before {
  box-sizing: border-box;
}
:host ::-webkit-scrollbar-button {
  display: none;
}
:host ::-webkit-scrollbar {
  width: 0.5rem;
  height: 0.5rem;
}
:host ::-webkit-scrollbar-track {
  border-radius: 5px;
  background: var(--theme-scrollbar-track--background);
}
:host ::-webkit-scrollbar-track:hover {
  background: var(--theme-scrollbar-track--background--hover);
}
:host ::-webkit-scrollbar-thumb {
  border-radius: 5px;
  background: var(--theme-scrollbar-thumb--background);
}
:host ::-webkit-scrollbar-thumb:hover {
  background: var(--theme-scrollbar-thumb--background--hover);
}
:host ::-webkit-scrollbar-corner {
  display: none;
}
:host ix-application-header {
  z-index: calc(var(--theme-z-index-sticky) + 1);
}
:host .logo-wrapper {
  display: contents;
}
:host .application {
  display: flex;
  position: relative;
  flex-direction: row;
  height: 100%;
  width: 100%;
  overflow: hidden;
}
:host main {
  display: block;
  position: relative;
  height: 100%;
  width: 100%;
  overflow: hidden;
}

:host(.breakpoint-md) {
  --ix-application-menu-margin-left: 3.25rem;
}
:host(.breakpoint-md) aside.slotted {
  margin-left: var(--ix-application-menu-margin-left);
}
:host(.breakpoint-md) aside.slotted + main {
  margin-left: 0;
}
:host(.breakpoint-md) aside:not(.slotted) + main {
  margin-left: var(--ix-application-menu-margin-left);
}

:host(.breakpoint-lg) {
  --ix-application-menu-margin-left: 0;
}

:host(.breakpoint-sm) {
  --ix-application-menu-margin-left: 0;
}