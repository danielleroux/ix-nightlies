{"version":3,"file":"event-list.spec.js","sourceRoot":"","sources":["../../../../../src/components/event-list/test/event-list.spec.tsx"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,YAAY;AACZ,OAAO,EAAE,sBAAsB,EAAE,MAAM,+BAA+B,CAAC;AACvE,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAE1C,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;AAE3C,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,UAAU,CAAC,GAAG,EAAE;QACd,YAAY;QACZ,sBAAsB,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;YACtC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;SACnB,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE;;;;OAIL;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE;;;;OAIL;SACF,CAAC,CAAC;QAEH,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CACtC,eAAe,CACU,CAAC;QAE5B,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;QAEzB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;QACxB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,aAAa;SACpB,CAAC,CAAC;QAEH,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAC1D,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;QAEnE,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAElC,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAEjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAEjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;QAC5B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,SAAS,CAAC;YACvB,IAAI,EAAE,aAAa;SACpB,CAAC,CAAC;QAEH,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAC1D,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;QAE3B,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;QAEnE,aAAa,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAElC,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAEjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAErD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { newSpecPage } from '@stencil/core/testing';\n//@ts-ignore\nimport { createMutationObserver } from '../../utils/mutation-observer';\nimport { EventList } from '../event-list';\n\njest.mock('../../utils/mutation-observer');\n\ndescribe('event-list', () => {\n  beforeEach(() => {\n    //@ts-ignore\n    createMutationObserver = jest.fn(() => ({\n      observe: jest.fn(),\n    }));\n  });\n\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [EventList],\n      html: `\n        <ix-event-list>\n          <ix-event-list-item  />\n        </ix-event-list>\n      `,\n    });\n    expect(page.root).toEqualHtml(`\n      <ix-event-list class=\"item-size-s\">\n        <mock:shadow-root>\n          <ul>\n            <slot></slot>\n          </ul>\n        </mock:shadow-root>\n        <ix-event-list-item></ix-event-list-item>\n      </ix-event-list>\n    `);\n  });\n\n  it('compact', async () => {\n    const page = await newSpecPage({\n      components: [EventList],\n      html: `\n        <ix-event-list>\n          <ix-event-list-item  />\n        </ix-event-list>\n      `,\n    });\n\n    const eventList = page.doc.querySelector(\n      'ix-event-list'\n    ) as HTMLIxEventListElement;\n\n    eventList.compact = true;\n\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <ix-event-list class=\"compact item-size-s\">\n        <mock:shadow-root>\n          <ul>\n            <slot></slot>\n          </ul>\n        </mock:shadow-root>\n        <ix-event-list-item></ix-event-list-item>\n      </ix-event-list>\n    `);\n  });\n\n  it('animated', async () => {\n    const page = await newSpecPage({\n      components: [EventList],\n      html: '<div></div>',\n    });\n\n    const eventList = page.doc.createElement('ix-event-list');\n    const eventListItem = page.doc.createElement('ix-event-list-item');\n\n    eventListItem.animate = jest.fn();\n\n    eventList.appendChild(eventListItem);\n    page.root.appendChild(eventList);\n\n    await page.waitForChanges();\n\n    expect(eventListItem.animate).toHaveBeenCalled();\n\n    expect(page.root).toEqualHtml(`\n      <ix-event-list class=\"item-size-s\">\n        <mock:shadow-root>\n          <ul>\n            <slot></slot>\n          </ul>\n        </mock:shadow-root>\n        <ix-event-list-item></ix-event-list-item>\n      </ix-event-list>\n    `);\n  });\n\n  it('not animated', async () => {\n    const page = await newSpecPage({\n      components: [EventList],\n      html: '<div></div>',\n    });\n\n    const eventList = page.doc.createElement('ix-event-list');\n    eventList.animated = false;\n\n    const eventListItem = page.doc.createElement('ix-event-list-item');\n\n    eventListItem.animate = jest.fn();\n\n    eventList.appendChild(eventListItem);\n    page.root.appendChild(eventList);\n\n    await page.waitForChanges();\n\n    expect(eventListItem.animate).not.toHaveBeenCalled();\n\n    expect(page.root).toEqualHtml(`\n      <ix-event-list class=\"item-size-s\">\n        <mock:shadow-root>\n          <ul>\n            <slot></slot>\n          </ul>\n        </mock:shadow-root>\n        <ix-event-list-item></ix-event-list-item>\n      </ix-event-list>\n    `);\n  });\n});\n"]}