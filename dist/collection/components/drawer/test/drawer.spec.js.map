{"version":3,"file":"drawer.spec.js","sourceRoot":"","sources":["../../../../src/components/drawer/test/drawer.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { newSpecPage } from '@stencil/core/testing';\nimport { fireEvent } from '@testing-library/dom';\nimport { Drawer } from '../drawer';\n\ndescribe('ix-drawer', () => {\n  let page: any;\n  let drawer: HTMLIxDrawerElement;\n  let container: HTMLDivElement;\n\n  beforeEach(async () => {\n    page = await newSpecPage({\n      components: [Drawer],\n      html: '<ix-drawer>Example Content</ix-drawer>',\n    });\n\n    drawer = document.querySelector('ix-drawer');\n    container = document.querySelector('[data-testid=\"container\"]');\n  });\n\n  it('opens the drawer', async () => {\n    drawer.show = true;\n    await page.waitForChanges();\n\n    expect(drawer.show).toBeTruthy();\n\n    await page.waitForChanges();\n    expect(drawer.innerText).toContain('Example Content');\n  });\n\n  it('closes the drawer', async () => {\n    drawer.show = true;\n    await page.waitForChanges();\n\n    const closeButton = drawer.shadowRoot.querySelector(\n      '[data-testid=\"close-button\"]'\n    );\n    fireEvent.click(closeButton);\n    await page.waitForChanges();\n    expect(drawer.show).toBeFalsy();\n    expect(drawer.innerHTML).not.toContain('toggle');\n  });\n\n  it('drawer is displayed at full height, if fullHeight is set to true', async () => {\n    drawer.toggleDrawer();\n    await page.waitForChanges();\n\n    drawer.fullHeight = true;\n    await page.waitForChanges();\n\n    expect(container.classList.contains('full-height')).toBeTruthy();\n  });\n\n  it('drawer is NOT displayed at full height, if fullHeight is set to false', async () => {\n    drawer.toggleDrawer();\n    await page.waitForChanges();\n\n    drawer.fullHeight = false;\n    await page.waitForChanges();\n\n    expect(container.classList.contains('full-height')).toBeFalsy();\n  });\n\n  it('emits an event, when show changed', async () => {\n    const mockCallback = jest.fn();\n    window.addEventListener('open', mockCallback);\n\n    drawer.toggleDrawer();\n    await page.waitForChanges();\n\n    const closeButton = drawer.shadowRoot.querySelector(\n      '[data-testid=\"close-button\"]'\n    );\n    fireEvent.click(closeButton);\n\n    window.removeEventListener('open', mockCallback);\n    expect(mockCallback).toHaveBeenCalled();\n  });\n});\n"]}