{"version":3,"file":"message-bar.spec.js","sourceRoot":"","sources":["../../../../../src/components/message-bar/test/message-bar.spec.tsx"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AACjD,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAE5C,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,IAAI,IAAS,CAAC;IACd,IAAI,UAAmC,CAAC;IACxC,IAAI,WAAoC,CAAC;IAEzC,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,IAAI,GAAG,MAAM,WAAW,CAAC;YACvB,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,iDAAiD;SACxD,CAAC,CAAC;QAEH,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QACtD,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC,aAAa,CAC/C,2BAA2B,CAC5B,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,CAAC,IAAI,EAAE,EAAE;QAC1C,UAAU,CAAC,gBAAgB,CAAC,cAAc,EAAE,GAAG,EAAE;YAC/C,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;QACH,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,CAAC,IAAI,EAAE,EAAE;QAC1D,MAAM,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE;YAChC,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAEtD,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC7B,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YAC9B,MAAM,CAAC,mBAAmB,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { newSpecPage } from '@stencil/core/testing';\nimport { fireEvent } from '@testing-library/dom';\nimport { MessageBar } from '../message-bar';\n\ndescribe('ix-message-bar', () => {\n  let page: any;\n  let messageBar: HTMLIxMessageBarElement;\n  let closeButton: HTMLIxIconButtonElement;\n\n  beforeEach(async () => {\n    page = await newSpecPage({\n      components: [MessageBar],\n      html: '<ix-message-bar type=\"danger\"></ix-message-bar>',\n    });\n\n    messageBar = document.querySelector('ix-message-bar');\n    closeButton = messageBar.shadowRoot.querySelector(\n      '[data-testid=\"close-btn\"]'\n    );\n  });\n\n  it('closes the alert message bar', (done) => {\n    messageBar.addEventListener('closedChange', () => {\n      done();\n    });\n    fireEvent.click(closeButton);\n  });\n\n  it('emits an event when the message is dismissed', (done) => {\n    const mockCallback = jest.fn(() => {\n      done();\n    });\n    window.addEventListener('closedChange', mockCallback);\n\n    fireEvent.click(closeButton);\n    page.waitForChanges().then(() => {\n      window.removeEventListener('closedChange', mockCallback);\n    });\n  });\n});\n"]}