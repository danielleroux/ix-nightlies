{"version":3,"file":"select-item.spec.js","sourceRoot":"","sources":["../../../../src/components/select-item/test/select-item.spec.tsx"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAE5C,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,EAAE,CAAC,4CAA4C,EAAE,CAAC,IAAI,EAAE,EAAE;QACxD,WAAW,CAAC;YACV,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,mCAAmC;SAC1C,CAAC,CAAC,KAAK,CAAC,CAAC,CAAQ,EAAE,EAAE;YACpB,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;YACtE,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;QAClE,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAEzB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;YACtC,IAAI,EAAE,6DAA6D;SACpE,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG;aACL,aAAa,CAAC,gBAAgB,CAAC;aAC/B,gBAAgB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAE3C,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG;aAC1B,aAAa,CAAC,gBAAgB,CAAC;aAC/B,UAAU,CAAC,aAAa,CAAC,kBAAkB,CAAgB,CAAC;QAC/D,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;QAExD,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { newSpecPage } from '@stencil/core/testing';\nimport { DropdownItem } from '../../dropdown-item/dropdown-item';\nimport { SelectItem } from '../select-item';\n\ndescribe('select-item', () => {\n  it('should throw exception if value is missing', (done) => {\n    newSpecPage({\n      components: [SelectItem],\n      html: '<ix-select-item></ix-select-item>',\n    }).catch((e: Error) => {\n      expect(e.message).toBe('ix-select-item must have a `value` property');\n      done();\n    });\n  });\n\n  it('should pass through click event from dropdown item', async () => {\n    let eventSpy = jest.fn();\n\n    const page = await newSpecPage({\n      components: [DropdownItem, SelectItem],\n      html: '<ix-select-item value=\"test\" label=\"Test\"></ix-select-item>',\n    });\n\n    page.doc\n      .querySelector('ix-select-item')\n      .addEventListener('itemClick', eventSpy);\n\n    const dropdownItem = page.doc\n      .querySelector('ix-select-item')\n      .shadowRoot.querySelector('ix-dropdown-item') as HTMLElement;\n    dropdownItem.shadowRoot.querySelector('button').click();\n\n    expect(eventSpy).toHaveBeenCalled();\n  });\n});\n"]}