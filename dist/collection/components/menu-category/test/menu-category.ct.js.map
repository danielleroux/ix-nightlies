{"version":3,"file":"menu-category.ct.js","sourceRoot":"","sources":["../../../../src/components/menu-category/test/menu-category.ct.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect } from '@playwright/test';\nimport { test } from '@utils/test';\n\ntest('renders', async ({ mount, page }) => {\n  await mount(`\n    <ix-application>\n      <ix-menu>\n        <ix-menu-category label=\"Category label\">\n          <ix-menu-item>Test</ix-menu-item>\n          <ix-menu-item>Test</ix-menu-item>\n        </ix-menu-category>\n      </ix-menu>\n    </ix-application>\n    `);\n  const element = page.locator('ix-menu-category');\n  await expect(element).toHaveClass('hydrated');\n});\n\ntest('should collapse by click', async ({ mount, page }) => {\n  await mount(`\n  <ix-basic-navigation>\n    <ix-menu>\n      <ix-menu-category label=\"Category label\">\n        <ix-menu-item>Test</ix-menu-item>\n        <ix-menu-item>Test 2</ix-menu-item>\n      </ix-menu-category>\n    </ix-menu>\n  </ix-basic-navigation>\n  `);\n  const categoryItem = page.locator('ix-menu-category');\n  const app = page.locator('ix-basic-navigation');\n  const expandMenuButton = page.locator('ix-menu').locator('.burger-menu');\n\n  await app.evaluate(\n    (menu: HTMLIxBasicNavigationElement) => (menu.breakpoints = ['md'])\n  );\n\n  await categoryItem.click();\n\n  const item = page.locator('ix-menu-item').getByText('Test 2');\n  await item.evaluate((item: HTMLIxMenuItemElement) => (item.active = true));\n  await expect(item).toHaveClass(/active/);\n\n  await item.click();\n  await expandMenuButton.click();\n\n  await expect(categoryItem.locator('.menu-items')).toHaveClass(\n    /menu-items--expanded/\n  );\n\n  await categoryItem.locator('.category-parent').click();\n\n  await expect(categoryItem.locator('.menu-items')).not.toHaveClass(\n    /menu-items--expanded/\n  );\n});\n\ntest('should expand items', async ({ mount, page }) => {\n  await mount(`\n  <ix-basic-navigation>\n    <ix-menu>\n      <ix-menu-category label=\"Category label\">\n        <ix-menu-item>Test Item 1</ix-menu-item>\n        <ix-menu-item>Test Item 2</ix-menu-item>\n      </ix-menu-category>\n    </ix-menu>\n  </ix-basic-navigation>\n  `);\n\n  const menu = page.locator('ix-menu');\n  await page\n    .locator('ix-basic-navigation')\n    .evaluate(\n      (menu: HTMLIxBasicNavigationElement) => (menu.breakpoints = ['md'])\n    );\n\n  const menuButton = menu.locator('ix-burger-menu');\n  await menuButton.click();\n  const menuCategory = page.locator('ix-menu-category');\n  await menuCategory.click();\n\n  await expect(menuCategory.locator('.menu-items')).toHaveClass(\n    'menu-items menu-items--expanded'\n  );\n  const dropdown = menuCategory.locator('ix-dropdown');\n  await expect(dropdown).not.toBeVisible();\n});\n\ntest('should show items as dropdown', async ({ mount, page }) => {\n  await mount(`\n  <ix-basic-navigation>\n    <ix-menu>\n      <ix-menu-category label=\"Category label\">\n        <ix-menu-item>Test Item 1</ix-menu-item>\n        <ix-menu-item>Test Item 2</ix-menu-item>\n      </ix-menu-category>\n    </ix-menu>\n  </ix-basic-navigation>\n  `);\n\n  await page.waitForSelector('ix-menu');\n  await page\n    .locator('ix-basic-navigation')\n    .evaluate(\n      (menu: HTMLIxBasicNavigationElement) => (menu.breakpoints = ['md'])\n    );\n\n  const menuCategory = page.locator('ix-menu-category');\n  await menuCategory.click();\n\n  const dropdown = menuCategory.locator('ix-dropdown');\n  await expect(dropdown).toBeVisible();\n  await expect(menuCategory.locator('.menu-items')).toHaveClass(\n    'menu-items menu-items--collapsed'\n  );\n\n  const dropdownHeader = dropdown.locator('ix-dropdown-item');\n  await expect(dropdownHeader).toHaveText('Category label');\n\n  const itemOne = page.locator('ix-menu-item').nth(0);\n  const itemTwo = page.locator('ix-menu-item').nth(1);\n\n  await expect(itemOne).toBeVisible();\n  await expect(itemTwo).toBeVisible();\n});\n\ntest('should collapse category after collapse menu', async ({\n  mount,\n  page,\n}) => {\n  await mount(`\n    <ix-basic-navigation>\n      <ix-menu>\n        <ix-menu-category label=\"Category label\">\n          <ix-menu-item>Test Item 1</ix-menu-item>\n          <ix-menu-item>Test Item 2</ix-menu-item>\n        </ix-menu-category>\n      </ix-menu>\n    </ix-basic-navigation>\n  `);\n\n  await page.waitForSelector('ix-menu');\n  const menu = page.locator('ix-menu');\n  await page\n    .locator('ix-basic-navigation')\n    .evaluate(\n      (menu: HTMLIxBasicNavigationElement) => (menu.breakpoints = ['md'])\n    );\n\n  const menuButton = menu.locator('ix-burger-menu');\n  await menuButton.click();\n\n  const menuCategory = page.locator('ix-menu-category');\n  await menuCategory.click();\n\n  await expect(menuCategory.locator('.menu-items')).toHaveClass(\n    'menu-items menu-items--expanded'\n  );\n\n  await menuButton.click();\n  await expect(menuCategory.locator('.menu-items')).toHaveClass(\n    'menu-items menu-items--collapsed'\n  );\n});\n\ntest('should hide menu-items when collapsed', async ({ mount, page }) => {\n  await mount(`\n    <ix-basic-navigation>\n      <ix-menu>\n        <ix-menu-category label=\"Category label\">\n          <ix-menu-item>Test Item 1</ix-menu-item>\n          <ix-menu-item>Test Item 2</ix-menu-item>\n        </ix-menu-category>\n      </ix-menu>\n    </ix-basic-navigation>\n  `);\n\n  await page.waitForSelector('ix-menu');\n  const menu = page.locator('ix-menu');\n  await page\n    .locator('ix-basic-navigation')\n    .evaluate(\n      (menu: HTMLIxBasicNavigationElement) => (menu.breakpoints = ['md'])\n    );\n\n  const menuButton = menu.locator('ix-burger-menu');\n  await menuButton.click();\n\n  const menuCategory = page.locator('ix-menu-category');\n\n  await expect(menuCategory.locator('.menu-items')).toHaveClass(\n    'menu-items menu-items--collapsed'\n  );\n  await expect(menuCategory.locator('.menu-items')).toBeHidden();\n});\n\ntest('should open category when collapsed initially and active', async ({\n  mount,\n  page,\n}) => {\n  await mount(`\n    <ix-basic-navigation>\n      <ix-menu>\n        <ix-menu-category label=\"Category label\">\n          <ix-menu-item active=\"true\">Test Item 1</ix-menu-item>\n          <ix-menu-item>Test Item 2</ix-menu-item>\n        </ix-menu-category>\n      </ix-menu>\n    </ix-basic-navigation>\n  `);\n\n  await page.waitForSelector('ix-menu');\n  const menu = page.locator('ix-menu');\n  await page\n    .locator('ix-basic-navigation')\n    .evaluate(\n      (menu: HTMLIxBasicNavigationElement) => (menu.breakpoints = ['md'])\n    );\n\n  const menuButton = menu.locator('ix-burger-menu');\n  await menuButton.click();\n\n  const menuCategory = page.locator('ix-menu-category');\n  await expect(menuCategory.locator('.menu-items')).toHaveClass(\n    'menu-items menu-items--expanded'\n  );\n\n  await menuCategory.locator('.category-parent').click();\n  await expect(menuCategory.locator('.menu-items')).toHaveClass(/menu-items/);\n  await menuButton.click();\n  await menuButton.click();\n\n  await expect(menuCategory.locator('.menu-items')).toHaveClass(\n    'menu-items menu-items--expanded'\n  );\n});\n"]}