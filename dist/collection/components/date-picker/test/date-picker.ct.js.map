{"version":3,"file":"date-picker.ct.js","sourceRoot":"","sources":["../../../../src/components/date-picker/test/date-picker.ct.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect, Page } from '@playwright/test';\nimport { test } from '@utils/test';\n\nconst DATE_PICKER_REWORK_SELECTOR = 'ix-date-picker';\nconst getDateObj = async (page: Page) => {\n  return await page.$$eval(DATE_PICKER_REWORK_SELECTOR, (elements) => {\n    return Promise.all(elements.map((elem) => elem.getCurrentDate()));\n  });\n};\n\ntest('renders', async ({ mount, page }) => {\n  await mount(`<ix-date-picker></ix-date-picker>`);\n  const datePicker = page.locator(DATE_PICKER_REWORK_SELECTOR);\n  await expect(datePicker).toHaveClass(/hydrated/);\n});\n\ntest('translation', async ({ mount, page }) => {\n  await mount(`<ix-date-picker from=\"2023/01/01\"></ix-date-picker>`);\n\n  await page.$eval(\n    DATE_PICKER_REWORK_SELECTOR,\n    (el: HTMLIxDatePickerElement) => {\n      el.locale = 'de';\n    }\n  );\n\n  const header = page.getByText('Januar 2023').nth(0);\n  await expect(header).toHaveCount(1);\n});\n\ntest.describe('date picker tests single', () => {\n  test.beforeEach(async ({ mount }) => {\n    await mount(\n      `<ix-date-picker from=\"2023/09/05\" range=\"false\"></ix-date-picker>`\n    );\n  });\n\n  test('date is selected', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    expect((await getDateObj(page))[0]).toEqual({\n      from: '2023/09/05',\n      to: undefined,\n    });\n  });\n\n  test('select different date', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n    await page.getByText(/^19$/).click();\n\n    expect((await getDateObj(page))[0]).toEqual({\n      from: '2023/09/19',\n      to: undefined,\n    });\n  });\n\n  test('select different date in next month', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    await page.locator('ix-icon-button').nth(1).click();\n    await page.getByText(/^31$/).click();\n\n    expect((await getDateObj(page))[0]).toEqual({\n      from: '2023/10/31',\n      to: undefined,\n    });\n  });\n\n  test('select different date in previous month', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    await page.locator('ix-icon-button').nth(0).click();\n    await page\n      .locator('.calendar-item:not(.week-number)')\n      .getByText(/^31$/)\n      .nth(0)\n      .click();\n\n    expect((await getDateObj(page))[0]).toEqual({\n      from: '2023/08/31',\n      to: undefined,\n    });\n  });\n\n  test('select different date from specific month', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    await page\n      .locator('ix-button')\n      .filter({ hasText: /^September 2023$/ })\n      .locator('span')\n      .click();\n\n    await page\n      .locator('div')\n      .filter({ hasText: /^2021$/ })\n      .first()\n      .click();\n\n    await page\n      .locator('div')\n      .filter({ hasText: /^January 2021$/ })\n      .first()\n      .click();\n\n    await page.getByText(/^1$/).nth(0).click();\n\n    expect((await getDateObj(page))[0]).toEqual({\n      from: '2021/01/01',\n      to: undefined,\n    });\n  });\n\n  test('select different date fires dateChange event', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    const eventPromise = page.evaluate(() => {\n      return new Promise((f) => {\n        document.addEventListener('dateChange', (data) => f(data));\n      });\n    });\n\n    await page.getByText(/^19$/).click();\n\n    expect(await eventPromise).toBeTruthy();\n  });\n});\n\ntest.describe('date picker tests range', () => {\n  test.beforeEach(async ({ mount }) => {\n    await mount(\n      `<ix-date-picker from=\"2023/09/05\" to=\"2023/09/10\"></ix-date-picker>`\n    );\n  });\n\n  test('range is selected', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    expect((await getDateObj(page))[0]).toEqual({\n      from: '2023/09/05',\n      to: '2023/09/10',\n    });\n  });\n\n  test('select different range', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    await page.getByText(/^12$/).click();\n    await page.getByText(/^17$/).click();\n\n    expect((await getDateObj(page))[0]).toEqual({\n      from: '2023/09/12',\n      to: '2023/09/17',\n    });\n  });\n\n  test('select range spanning over 2 months', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    await page.getByText(/^28$/).click();\n    await page.locator('ix-icon-button').nth(1).click();\n    await page.getByText(/^5$/).click();\n\n    expect((await getDateObj(page))[0]).toEqual({\n      from: '2023/09/28',\n      to: '2023/10/05',\n    });\n  });\n\n  test('select different range fires dateChange and dateRangeChange event', async ({\n    page,\n  }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    const dateChangeEventPromise = page.evaluate(() => {\n      return new Promise((f) => {\n        document.addEventListener('dateChange', (data) => f(data));\n      });\n    });\n    const dateRangeChangeEventPromise = page.evaluate(() => {\n      return new Promise((f) => {\n        document.addEventListener('dateRangeChange', (data) => f(data));\n      });\n    });\n\n    await page.getByText(/^12$/).click();\n    await page.getByText(/^17$/).click();\n\n    expect(await dateChangeEventPromise).toBeTruthy();\n    expect(await dateRangeChangeEventPromise).toBeTruthy();\n  });\n\n  test('done click fires dateSelect event', async ({ page }) => {\n    await page.waitForSelector('ix-date-time-card');\n\n    const dateSelectEventPromise = page.evaluate(() => {\n      return new Promise((f) => {\n        document.addEventListener('dateSelect', (data) => f(data));\n      });\n    });\n\n    await page.getByText('Done').click();\n\n    expect(await dateSelectEventPromise).toBeTruthy();\n  });\n});\n"]}