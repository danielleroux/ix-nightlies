{"version":3,"file":"select.ct.js","sourceRoot":"","sources":["../../../../../src/components/select/test/select.ct.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect } from '@playwright/test';\nimport { test } from '@utils/test';\n\ntest('renders', async ({ mount, page }) => {\n  await mount(`\n        <ix-select>\n          <ix-select-item value=\"11\" label=\"Item 1\">Test</ix-select-item>\n          <ix-select-item value=\"22\" label=\"Item 2\">Test</ix-select-item>\n        </ix-select>\n    `);\n  const element = page.locator('ix-select');\n  await expect(element).toHaveClass(/hydrated/);\n\n  await page.locator('[data-select-dropdown]').click();\n\n  const dropdown = element.locator('ix-dropdown');\n  await expect(dropdown).toBeVisible();\n\n  await expect(page.getByRole('button', { name: 'Item 1' })).toBeVisible();\n  await expect(page.getByRole('button', { name: 'Item 2' })).toBeVisible();\n});\n\ntest('editable mode', async ({ mount, page }) => {\n  await mount(`\n        <ix-select editable>\n          <ix-select-item value=\"11\" label=\"Item 1\">Test</ix-select-item>\n          <ix-select-item value=\"22\" label=\"Item 2\">Test</ix-select-item>\n        </ix-select>\n    `);\n  const element = page.locator('ix-select');\n  await expect(element).toHaveClass(/hydrated/);\n\n  await page.locator('[data-select-dropdown]').click();\n  await page.getByTestId('input').fill('Not existing');\n\n  const dropdown = element.locator('ix-dropdown');\n  await expect(dropdown).toBeVisible();\n\n  await expect(page.getByRole('button', { name: 'Item 1' })).not.toBeVisible();\n  await expect(page.getByRole('button', { name: 'Item 2' })).not.toBeVisible();\n\n  const add = page.getByRole('button', { name: /Not existing/ });\n  await expect(add).toBeVisible();\n\n  await add.click();\n  await expect(page.getByTestId('input')).toHaveValue(/Not existing/);\n  await page.locator('[data-select-dropdown]').click();\n\n  await expect(page.getByRole('button', { name: 'Item 1' })).toBeVisible();\n  await expect(page.getByRole('button', { name: 'Item 2' })).toBeVisible();\n\n  const addedItem = page\n    .getByRole('listitem')\n    .filter({ hasText: 'Not existing' });\n\n  await expect(addedItem).toBeVisible();\n});\n\ntest('single selection', async ({ mount, page }) => {\n  await mount(`\n        <ix-select>\n          <ix-select-item value=\"11\" label=\"Item 1\">Test</ix-select-item>\n          <ix-select-item value=\"22\" label=\"Item 2\">Test</ix-select-item>\n        </ix-select>\n    `);\n  const element = page.locator('ix-select');\n  await element.evaluate(\n    (select: HTMLIxSelectElement) => (select.value = '22')\n  );\n\n  await page.locator('[data-select-dropdown]').click();\n\n  const dropdown = element.locator('ix-dropdown');\n  await expect(dropdown).toBeVisible();\n\n  await expect(page.getByRole('button', { name: 'Item 1' })).toBeVisible();\n  await expect(\n    page.getByRole('button', { name: 'Item 2' }).locator('ix-icon')\n  ).toBeVisible();\n});\n\ntest('multiple selection', async ({ mount, page }) => {\n  await mount(`\n        <ix-select mode=\"multiple\">\n          <ix-select-item value=\"1\" label=\"Item 1\">Test</ix-select-item>\n          <ix-select-item value=\"2\" label=\"Item 2\">Test</ix-select-item>\n          <ix-select-item value=\"3\" label=\"Item 3\">Test</ix-select-item>\n          <ix-select-item value=\"4\" label=\"Item 4\">Test</ix-select-item>\n        </ix-select>\n    `);\n  const element = page.locator('ix-select');\n  await element.evaluate((select: HTMLIxSelectElement) => (select.value = []));\n  await page.locator('[data-select-dropdown]').click();\n\n  const dropdown = element.locator('ix-dropdown');\n  const chips = element.locator('.chips');\n\n  await expect(dropdown).toBeVisible();\n\n  const item1 = element.locator('ix-select-item').nth(0);\n  const item3 = element.locator('ix-select-item').nth(2);\n  await item1.click();\n  await item3.click();\n\n  await expect(item1.locator('ix-icon')).toBeVisible();\n  await expect(item3.locator('ix-icon')).toBeVisible();\n\n  const chip1 = chips.getByTitle('Item 1');\n  const chip3 = chips.getByTitle('Item 3');\n\n  await expect(chip1).toBeVisible();\n  await expect(chip3).toBeVisible();\n});\n\ntest('filter', async ({ mount, page }) => {\n  await mount(`\n        <ix-select mode=\"multiple\">\n          <ix-select-item value=\"1\" label=\"Item 1\">Test</ix-select-item>\n          <ix-select-item value=\"2\" label=\"Item 2\">Test</ix-select-item>\n          <ix-select-item value=\"abc\" label=\"abc\">Test</ix-select-item>\n          <ix-select-item value=\"4\" label=\"Item 4\">Test</ix-select-item>\n        </ix-select>\n    `);\n  const element = page.locator('ix-select');\n  await element.evaluate((select: HTMLIxSelectElement) => (select.value = []));\n\n  await page.locator('[data-select-dropdown]').click();\n  const dropdown = element.locator('ix-dropdown');\n  await expect(dropdown).toBeVisible();\n\n  await element.locator('input').fill('abc');\n\n  const item1 = page.getByRole('button', { name: 'Item 1' });\n  const item2 = page.getByRole('button', { name: 'Item 2' });\n  const item4 = page.getByRole('button', { name: 'Item 4' });\n  const item_abc = page.getByRole('button', { name: 'abc' });\n\n  await expect(item1).not.toBeVisible();\n  await expect(item2).not.toBeVisible();\n  await expect(item4).not.toBeVisible();\n  await expect(item_abc).toBeVisible();\n});\n\ntest('open filtered dropdown on input', async ({ mount, page }) => {\n  await mount(`\n        <ix-select>\n          <ix-select-item value=\"1\" label=\"Item 1\">Test</ix-select-item>\n          <ix-select-item value=\"2\" label=\"Item 2\">Test</ix-select-item>\n        </ix-select>\n    `);\n  const element = page.locator('ix-select');\n  await element.evaluate((select: HTMLIxSelectElement) => (select.value = []));\n\n  await page.locator('[data-testid=\"input\"]').focus();\n  page.keyboard.down('Escape');\n  const dropdown = element.locator('ix-dropdown');\n  await expect(dropdown).not.toBeVisible();\n\n  page.keyboard.down('1');\n\n  const item1 = page.getByRole('button', { name: 'Item 1' });\n  const item2 = page.getByRole('button', { name: 'Item 2' });\n\n  await expect(item1).toBeVisible();\n  await expect(item2).not.toBeVisible();\n});\n"]}