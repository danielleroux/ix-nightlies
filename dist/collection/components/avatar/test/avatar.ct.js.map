{"version":3,"file":"avatar.ct.js","sourceRoot":"","sources":["../../../../src/components/avatar/test/avatar.ct.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAE9C,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACzC,IAAI,CAAC,0BAA0B,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;QACzD,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,KAAK,CACT;;;;KAID,CACA,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAEzC,MAAM,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,sBAAsB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;QACrD,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,KAAK,CACT;;;;;;;;KAQD,CACA,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACzC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QACrB,MAAM,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAChE,MAAM,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,gBAAgB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;QAC/C,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,KAAK,CACT;;;;;KAKD,CACA,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACzC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QAErB,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC9C,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC/C,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAEzC,MAAM,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QAEzD,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzC,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEtC,MAAM,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,6CAA6C,EAAE,KAAK,EAAE,EACzD,IAAI,EACJ,KAAK,GACN,EAAE,EAAE;QACH,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,KAAK,CACT;;;;;;KAMD,CACA,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACzC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QAErB,MAAM,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,kDAAkD,EAAE,KAAK,EAAE,EAC9D,IAAI,EACJ,KAAK,GACN,EAAE,EAAE;QACH,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACzC,MAAM,KAAK,CACT;;;;;;KAMD,CACA,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACzC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QAErB,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAE9C,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QACzC,MAAM,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAC/D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { expect } from '@playwright/test';\nimport { test, viewPorts } from '@utils/test';\n\ntest.describe('embedded into header', () => {\n  test('show avatar as clickable', async ({ page, mount }) => {\n    await page.setViewportSize(viewPorts.lg);\n    await mount(\n      `\n      <ix-application-header name=\"Test\">\n        <ix-avatar></ix-avatar>\n      </ix-application-header>\n    `\n    );\n\n    const avatar = page.locator('ix-avatar');\n\n    await expect(avatar.locator('button')).toBeVisible();\n  });\n\n  test('show avatar dropdown', async ({ page, mount }) => {\n    await page.setViewportSize(viewPorts.lg);\n    await mount(\n      `\n      <ix-application-header name=\"Test\">\n        <ix-avatar>\n          <ix-dropdown-item label=\"Item 1\"></ix-dropdown-item>\n          <ix-dropdown-item label=\"Item 2\"></ix-dropdown-item>\n          <ix-dropdown-item label=\"Item 3\"></ix-dropdown-item>\n        </ix-avatar>\n      </ix-application-header>\n    `\n    );\n\n    const avatar = page.locator('ix-avatar');\n    await avatar.click();\n    await expect(avatar.locator('ix-dropdown')).toHaveClass(/show/);\n    await expect(avatar.getByText('Item 1')).toBeVisible();\n  });\n\n  test('show user-info', async ({ page, mount }) => {\n    await page.setViewportSize(viewPorts.lg);\n    await mount(\n      `\n      <ix-application-header name=\"Test\">\n        <ix-avatar username=\"foo\" extra=\"bar\">\n        </ix-avatar>\n      </ix-application-header>\n    `\n    );\n\n    const avatar = page.locator('ix-avatar');\n    await avatar.click();\n\n    const userInfo = avatar.locator('.user-info');\n    const username = userInfo.locator('.username');\n    const extra = userInfo.locator('.extra');\n\n    await expect(avatar.locator('.user-info')).toBeVisible();\n\n    await expect(username).toHaveText('foo');\n    await expect(extra).toHaveText('bar');\n\n    await expect(avatar.locator('ix-divider')).not.toBeVisible();\n  });\n\n  test('should show divider if a element is slotted', async ({\n    page,\n    mount,\n  }) => {\n    await page.setViewportSize(viewPorts.lg);\n    await mount(\n      `\n      <ix-application-header name=\"Test\">\n        <ix-avatar username=\"foo\" extra=\"bar\">\n          <ix-dropdown-item>test</ix-dropdown-item>\n        </ix-avatar>\n      </ix-application-header>\n    `\n    );\n\n    const avatar = page.locator('ix-avatar');\n    await avatar.click();\n\n    await expect(avatar.locator('ix-divider')).toBeVisible();\n  });\n\n  test('should hide user info if no username is provided', async ({\n    page,\n    mount,\n  }) => {\n    await page.setViewportSize(viewPorts.lg);\n    await mount(\n      `\n      <ix-application-header name=\"Test\">\n        <ix-avatar>\n          <ix-dropdown-item>Test</ix-dropdown-item>\n        </ix-avatar>\n      </ix-application-header>\n    `\n    );\n\n    const avatar = page.locator('ix-avatar');\n    await avatar.click();\n\n    const userInfo = avatar.locator('.user-info');\n\n    await expect(userInfo).not.toBeVisible();\n    await expect(avatar.locator('ix-divider')).not.toBeVisible();\n  });\n});\n"]}