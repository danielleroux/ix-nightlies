{"version":3,"names":["applicationHeaderCss","IxApplicationHeaderStyle0","ApplicationHeader","componentWillLoad","useContextConsumer","this","hostElement","ApplicationLayoutContext","ctx","host","suppressResponsive","breakpoint","applicationLayoutService","applicationLayoutContext","tryUpdateAppSwitch","menuDisposable","menuController","expandChange","on","show","menuExpanded","modeDisposable","onChange","mode","updateIsSlottedContent","componentDidLoad","attachSiemensLogoIfLoaded","disconnectedCallback","_a","dispose","_b","isLogoSlotted","slotElement","shadowRoot","querySelector","nodes","assignedNodes","flatten","length","window","customElements","whenDefined","logoElement","document","createElement","appendChild","onMenuClick","toggle","resolveContextMenuButton","Promise","resolve","readTask","callbackUpdateAppSwitchModal","appSwitchConfig","showAppSwitch","hasSlottedElements","render","h","Host","key","class","slot","onClick","expanded","icon","ghost","name","Fragment","discoverAllSubmenus","trigger","onSlotchange"],"sources":["src/components/application-header/application-header.scss?tag=ix-application-header&encapsulation=shadow","src/components/application-header/application-header.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n @import 'mixins/shadow-dom/component';\n @import 'mixins/break-points';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  height: 2.75rem;\n  min-height: 2.75rem;\n  padding: 0 1rem 0 0.625rem;\n\n  color: var(--theme-app-header--color);\n  background-color: var(--theme-app-header--background);\n\n  border-bottom: var(--theme-app-header--border-width) solid\n    var(--theme-app-header--border-color);\n\n  z-index: var(--theme-z-index-fixed);\n\n  .app-switch {\n    margin-right: 1rem;\n  }\n\n  .name {\n    overflow: hidden;\n    overflow-wrap: anywhere;\n    text-overflow: ellipsis;\n    text-wrap: nowrap;\n    max-width: 50%;\n    margin-left: 1.5rem;\n    margin-right: 2.5rem;\n    color: var(--theme-app-header--color);\n  }\n\n  .logo {\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    height: 32px;\n    overflow: hidden;\n    line-height: 0rem;\n    color: var(--theme-app-header-logo--color);\n    margin-left: 0.375rem;\n  }\n\n  .content {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    margin-left: auto;\n    margin-right: 0px;\n  }\n\n  .dropdown {\n    overflow: visible;\n  }\n\n  .dropdown-content {\n    padding: 1rem;\n  }\n\n  .context-menu {\n    display: none;\n  }\n\n  .context-menu.context-menu-visible {\n    display: block;\n  }\n\n  @include media-breakpoint-match('sm') {\n    .logo {\n      display: none;\n    }\n  }\n\n  ::slotted(ix-avatar) {\n    margin-left: 1rem;\n  }\n}\n\n:host(.breakpoint-sm) {\n  padding-left: 0.5rem;\n\n  .logo {\n    margin-left: 0.5rem;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  readTask,\n  State,\n} from '@stencil/core';\nimport { showAppSwitch } from '../utils/app-switch';\nimport { applicationLayoutService } from '../utils/application-layout';\nimport {\n  ApplicationLayoutContext,\n  AppSwitchConfiguration,\n} from '../utils/application-layout/context';\nimport { Breakpoint } from '../utils/breakpoints';\nimport { ContextType, useContextConsumer } from '../utils/context';\nimport { menuController } from '../utils/menu-service/menu-service';\nimport { hasSlottedElements } from '../utils/shadow-dom';\nimport { Disposable } from '../utils/typed-event';\n\n/**\n * @slot logo - Location of the logo\n */\n@Component({\n  tag: 'ix-application-header',\n  styleUrl: 'application-header.scss',\n  shadow: true,\n})\nexport class ApplicationHeader {\n  @Element() hostElement!: HTMLIxApplicationHeaderElement;\n\n  /**\n   * Application name\n   */\n  @Prop() name: string;\n\n  @State() breakpoint: Breakpoint = 'lg';\n  @State() menuExpanded = false;\n  @State() suppressResponsive = false;\n\n  @State() hasSlottedElements = false;\n\n  private menuDisposable?: Disposable;\n  private modeDisposable?: Disposable;\n  private callbackUpdateAppSwitchModal?: (\n    config: AppSwitchConfiguration\n  ) => void;\n\n  @State() applicationLayoutContext: ContextType<\n    typeof ApplicationLayoutContext\n  >;\n\n  componentWillLoad() {\n    useContextConsumer(\n      this.hostElement,\n      ApplicationLayoutContext,\n      (ctx) => {\n        if (ctx?.host === 'map-navigation') {\n          this.suppressResponsive = true;\n          this.breakpoint = 'md';\n          return;\n        }\n\n        this.breakpoint = applicationLayoutService.breakpoint;\n        this.applicationLayoutContext = ctx;\n\n        this.tryUpdateAppSwitch();\n      },\n      true\n    );\n\n    this.menuDisposable = menuController.expandChange.on((show) => {\n      this.menuExpanded = show;\n    });\n\n    this.modeDisposable = applicationLayoutService.onChange.on((mode) => {\n      if (this.suppressResponsive) {\n        this.breakpoint = 'md';\n        return;\n      }\n\n      this.breakpoint = mode;\n    });\n\n    this.updateIsSlottedContent();\n  }\n\n  componentDidLoad() {\n    this.attachSiemensLogoIfLoaded();\n  }\n\n  disconnectedCallback() {\n    this.menuDisposable?.dispose();\n    this.modeDisposable?.dispose();\n  }\n\n  private isLogoSlotted() {\n    const slotElement = this.hostElement.shadowRoot.querySelector(\n      'slot[name=\"logo\"]'\n    ) as HTMLSlotElement;\n    const nodes = slotElement.assignedNodes({\n      flatten: true,\n    });\n\n    return nodes.length !== 0;\n  }\n\n  private async attachSiemensLogoIfLoaded() {\n    await window.customElements.whenDefined('ix-siemens-logo');\n    const logoElement = document.createElement('ix-siemens-logo');\n    if (!this.isLogoSlotted()) {\n      this.hostElement.shadowRoot\n        .querySelector('.logo')\n        .appendChild(logoElement);\n    }\n  }\n\n  private async onMenuClick() {\n    menuController.toggle();\n  }\n\n  private resolveContextMenuButton() {\n    return new Promise<HTMLElement>((resolve) =>\n      readTask(() =>\n        resolve(\n          this.hostElement.shadowRoot.querySelector(\n            '[data-context-menu]'\n          ) as HTMLElement\n        )\n      )\n    );\n  }\n\n  private tryUpdateAppSwitch() {\n    if (!this.callbackUpdateAppSwitchModal) {\n      return;\n    }\n\n    this.callbackUpdateAppSwitchModal(\n      this.applicationLayoutContext?.appSwitchConfig\n    );\n  }\n\n  private async showAppSwitch() {\n    this.callbackUpdateAppSwitchModal = await showAppSwitch(\n      this.applicationLayoutContext?.appSwitchConfig\n    );\n  }\n\n  private updateIsSlottedContent() {\n    const slotElement =\n      this.hostElement.shadowRoot.querySelector('.content slot');\n\n    this.hasSlottedElements = hasSlottedElements(slotElement);\n  }\n\n  render() {\n    return (\n      <Host\n        class={{ [`breakpoint-${this.breakpoint}`]: true }}\n        slot=\"application-header\"\n      >\n        {this.breakpoint === 'sm' && this.suppressResponsive === false && (\n          <ix-burger-menu\n            onClick={() => this.onMenuClick()}\n            expanded={this.menuExpanded}\n          ></ix-burger-menu>\n        )}\n        {this.applicationLayoutContext?.appSwitchConfig &&\n          this.breakpoint !== 'sm' &&\n          this.suppressResponsive === false && (\n            <ix-icon-button\n              onClick={() => this.showAppSwitch()}\n              icon=\"apps\"\n              ghost\n              class=\"app-switch\"\n            ></ix-icon-button>\n          )}\n        <div class=\"logo\">\n          <slot name=\"logo\"></slot>\n        </div>\n        <div class=\"name\">{this.name}</div>\n        <div class=\"content\">\n          {this.breakpoint === 'sm' ? (\n            <Fragment>\n              <ix-icon-button\n                class={{\n                  ['context-menu']: true,\n                  ['context-menu-visible']: this.hasSlottedElements,\n                }}\n                data-context-menu\n                icon=\"more-menu\"\n                ghost\n              ></ix-icon-button>\n              <ix-dropdown\n                data-overflow-dropdown\n                class=\"dropdown\"\n                discoverAllSubmenus\n                trigger={this.resolveContextMenuButton()}\n              >\n                <div class=\"dropdown-content\">\n                  <slot\n                    onSlotchange={() => this.updateIsSlottedContent()}\n                  ></slot>\n                </div>\n              </ix-dropdown>\n            </Fragment>\n          ) : (\n            <slot onSlotchange={() => this.updateIsSlottedContent()}></slot>\n          )}\n          <slot name=\"ix-application-header-avatar\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}