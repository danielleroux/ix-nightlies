{"version":3,"names":["iconToggleButtonCss","IxIconToggleButtonStyle0","IconToggleButton","isIllegalToggleButtonConfig","this","variant","outline","ghost","logIllegalConfig","console","warn","onVariantChange","onGhostChange","onOutlineChange","componentDidLoad","dispatchPressedChange","pressedChange","emit","pressed","getIconSizeClass","size","render","baseButtonProps","iconOnly","iconOval","selected","disabled","loading","icon","iconSize","onClick","type","ariaAttributes","a11yBoolean","extraClasses","Object","assign","log","h","Host","key","class","BaseIconButton"],"sources":["src/components/icon-toggle-button/icon-toggle-button.scss?tag=ix-icon-toggle-button&encapsulation=shadow","src/components/icon-toggle-button/icon-toggle-button.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import '../icon-button/icon-button-mixin.scss';\n\n@include base-icon-button;\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport { BaseButtonProps } from '../button/base-button';\nimport { ButtonVariant } from '../button/button';\nimport { BaseIconButton } from '../icon-button/base-icon-button';\nimport { a11yBoolean } from '../utils/a11y';\n\n/**\n * @since 2.0.0\n */\n@Component({\n  tag: 'ix-icon-toggle-button',\n  shadow: true,\n  styleUrl: './icon-toggle-button.scss',\n})\nexport class IconToggleButton {\n  /**\n   * Button variant.\n   * Important: Variant 'primary' can only be combined with either outline or ghost.\n   */\n  @Prop() variant: ButtonVariant = 'secondary';\n\n  /**\n   * Outline button\n   */\n  @Prop() outline = false;\n\n  /**\n   * Button with no background or outline\n   */\n  @Prop() ghost = false;\n\n  /**\n   * Icon name\n   */\n  @Prop() icon: string;\n\n  /**\n   * Show button as pressed\n   */\n  @Prop() pressed = false;\n\n  /**\n   * Size of icon in button\n   */\n  @Prop() size: '24' | '16' | '12' = '24';\n\n  /**\n   * Disable the button\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Loading button\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Pressed change event\n   */\n  @Event() pressedChange: EventEmitter<boolean>;\n\n  @Element() hostElement: HTMLIxIconToggleButtonElement;\n\n  private isIllegalToggleButtonConfig() {\n    return this.variant === 'primary' && (this.outline || this.ghost);\n  }\n\n  private logIllegalConfig() {\n    console.warn(\n      'iX toggle button with illegal configuration detected. Variant \"primary\" can only be combined with \"outline\" or \"ghost\".'\n    );\n  }\n\n  @Watch('variant')\n  onVariantChange() {\n    if (this.isIllegalToggleButtonConfig()) {\n      this.logIllegalConfig();\n    }\n  }\n\n  @Watch('ghost')\n  onGhostChange() {\n    this.onVariantChange();\n  }\n\n  @Watch('outline')\n  onOutlineChange() {\n    this.onVariantChange();\n  }\n\n  componentDidLoad() {\n    this.onVariantChange();\n  }\n\n  private dispatchPressedChange() {\n    this.pressedChange.emit(!this.pressed);\n  }\n\n  private getIconSizeClass() {\n    return {\n      'btn-icon-12': this.size === '12',\n      'btn-icon-16': this.size === '16',\n      'btn-icon-32': this.size === '24',\n    };\n  }\n\n  render() {\n    const baseButtonProps: BaseButtonProps = {\n      variant: this.variant,\n      outline: this.outline,\n      ghost: this.ghost,\n      iconOnly: true,\n      iconOval: false,\n      selected: this.pressed,\n      disabled: this.disabled || this.loading,\n      icon: this.icon,\n      iconSize: this.size,\n      loading: this.loading,\n      onClick: () => this.dispatchPressedChange(),\n      type: 'button',\n      ariaAttributes: {\n        'aria-pressed': a11yBoolean(this.pressed),\n      },\n      extraClasses: {\n        'icon-button': true,\n        ...this.getIconSizeClass(),\n      },\n    };\n    console.log(baseButtonProps, this.disabled, this.loading);\n\n    return (\n      <Host\n        class={{\n          ...this.getIconSizeClass(),\n          disabled: this.disabled || this.loading,\n        }}\n      >\n        <BaseIconButton {...baseButtonProps}></BaseIconButton>\n      </Host>\n    );\n  }\n}\n"],"mappings":"gKAAA,MAAMA,EAAsB,wpgBAC5B,MAAAC,EAAeD,E,MC+BFE,EAAgB,M,mFAKM,Y,aAKf,M,WAKF,M,iCAUE,M,UAKiB,K,cAKC,M,aAKT,K,CASnB,2BAAAC,GACN,OAAOC,KAAKC,UAAY,YAAcD,KAAKE,SAAWF,KAAKG,M,CAGrD,gBAAAC,GACNC,QAAQC,KACN,0H,CAKJ,eAAAC,GACE,GAAIP,KAAKD,8BAA+B,CACtCC,KAAKI,kB,EAKT,aAAAI,GACER,KAAKO,iB,CAIP,eAAAE,GACET,KAAKO,iB,CAGP,gBAAAG,GACEV,KAAKO,iB,CAGC,qBAAAI,GACNX,KAAKY,cAAcC,MAAMb,KAAKc,Q,CAGxB,gBAAAC,GACN,MAAO,CACL,cAAef,KAAKgB,OAAS,KAC7B,cAAehB,KAAKgB,OAAS,KAC7B,cAAehB,KAAKgB,OAAS,K,CAIjC,MAAAC,GACE,MAAMC,EAAmC,CACvCjB,QAASD,KAAKC,QACdC,QAASF,KAAKE,QACdC,MAAOH,KAAKG,MACZgB,SAAU,KACVC,SAAU,MACVC,SAAUrB,KAAKc,QACfQ,SAAUtB,KAAKsB,UAAYtB,KAAKuB,QAChCC,KAAMxB,KAAKwB,KACXC,SAAUzB,KAAKgB,KACfO,QAASvB,KAAKuB,QACdG,QAAS,IAAM1B,KAAKW,wBACpBgB,KAAM,SACNC,eAAgB,CACd,eAAgBC,EAAY7B,KAAKc,UAEnCgB,aAAYC,OAAAC,OAAA,CACV,cAAe,MACZhC,KAAKe,qBAGZV,QAAQ4B,IAAIf,EAAiBlB,KAAKsB,SAAUtB,KAAKuB,SAEjD,OACEW,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAKN,OAAAC,OAAAD,OAAAC,OAAA,GACAhC,KAAKe,oBAAkB,CAC1BO,SAAUtB,KAAKsB,UAAYtB,KAAKuB,WAGlCW,EAACI,EAAcP,OAAAC,OAAA,CAAAI,IAAA,4CAAKlB,I"}