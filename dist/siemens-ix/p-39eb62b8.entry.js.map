{"version":3,"names":["breadcrumbCss","IxBreadcrumbStyle0","sequenceId","createId","prefix","Breadcrumb","this","previousButtonId","previousDropdownId","onNextItemsChange","onChildMutation","onItemClick","item","itemClick","emit","componentDidLoad","mutationObserver","createMutationObserver","observe","hostElement","subtree","childList","componentWillLoad","disconnectedCallback","_a","disconnect","updatedItems","getItems","forEach","bc","index","shouldShowDropdown","nextItems","length","ghost","showChevron","isDropdownTrigger","nextButtonRef","visibleItemCount","visible","items","Array","from","querySelectorAll","render","a11y","a11yHostAttributes","h","Host","key","id","ariaLabelPreviousButton","trigger","previousButtonRef","onShowChanged","detail","isPreviousDropdownExpanded","previousButton","shadowRoot","getElementById","forceUpdate","slice","map","label","innerText","onClick","event","stopPropagation","_b","ref","tabIndex","a11yBoolean","class","_c","_d","e","nextClick"],"sources":["src/components/breadcrumb/breadcrumb.scss?tag=ix-breadcrumb&encapsulation=shadow","src/components/breadcrumb/breadcrumb.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/hover';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  justify-content: flex-start;\n  height: 2.5rem;\n  align-items: center;\n  background-color: transparent;\n  overflow: hidden;\n\n  .previous-button {\n    width: 3rem;\n    min-width: 0px;\n  }\n\n  .crumb-dropdown {\n    overflow: visible;\n  }\n\n  .remove-anchor::after {\n    display: none;\n  }\n\n  .more-text {\n    display: flex;\n\n    .more-text-ellipsis {\n      width: 1rem;\n      display: inline-block;\n      font-weight: $font-weight-bold;\n    }\n\n    ix-icon {\n      // line-height: unset; --> Note: 'line-height' can't be applied due to shadow DOM encapsulation at ix-icon\n      // using padding-top to achieve same position as before\n      padding-top: 2px;\n    }\n  }\n\n  nav,\n  ol,\n  .crumb-items {\n    display: contents;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { a11yBoolean, a11yHostAttributes } from '../utils/a11y';\nimport { createMutationObserver } from '../utils/mutation-observer';\n\nlet sequenceId = 0;\nconst createId = (prefix: string = 'breadcrumb-') => {\n  return `${prefix}-${sequenceId++}`;\n};\n\n@Component({\n  tag: 'ix-breadcrumb',\n  styleUrl: 'breadcrumb.scss',\n  shadow: true,\n})\nexport class Breadcrumb {\n  @Element() hostElement!: HTMLIxBreadcrumbElement;\n\n  /**\n   * Excess items will get hidden inside of dropdown\n   */\n  @Prop() visibleItemCount = 9;\n\n  /**\n   * Items will be accessible through a dropdown\n   */\n  @Prop() nextItems: string[] = [];\n  @Watch('nextItems')\n  onNextItemsChange() {\n    this.onChildMutation();\n  }\n\n  /**\n   * Ghost breadcrumbs will not show solid backgrounds on individual crumbs unless there is a mouse event (e.g. hover)\n   */\n  @Prop() ghost = true;\n\n  /**\n   * Accessibility label for the dropdown button (ellipsis icon) used to access the dropdown list\n   * with conditionally hidden previous items\n   *\n   * @since 2.0.0\n   */\n  @Prop() ariaLabelPreviousButton = 'previous';\n\n  /**\n   * Crumb item clicked event\n   */\n  @Event() itemClick: EventEmitter<string>;\n\n  /**\n   * Next item clicked event\n   */\n  @Event() nextClick: EventEmitter<{ event: UIEvent; item: string }>;\n\n  @State() previousButtonRef: HTMLElement;\n  @State() nextButtonRef: HTMLElement;\n  @State() items: HTMLIxBreadcrumbItemElement[] = [];\n  @State() isPreviousDropdownExpanded = false;\n\n  private mutationObserver: MutationObserver;\n\n  private previousButtonId = createId();\n  private previousDropdownId = createId();\n\n  private onItemClick(item: string) {\n    this.itemClick.emit(item);\n  }\n\n  componentDidLoad() {\n    this.mutationObserver = createMutationObserver(() =>\n      this.onChildMutation()\n    );\n\n    this.mutationObserver.observe(this.hostElement, {\n      subtree: true,\n      childList: true,\n    });\n  }\n\n  componentWillLoad() {\n    this.onChildMutation();\n  }\n\n  disconnectedCallback() {\n    this.mutationObserver?.disconnect();\n  }\n\n  private async onChildMutation() {\n    const updatedItems = this.getItems();\n\n    updatedItems.forEach((bc, index) => {\n      const shouldShowDropdown =\n        this.nextItems.length !== 0 && updatedItems.length - 1 === index;\n\n      bc.ghost = this.ghost;\n      bc.showChevron = updatedItems.length - 1 !== index || shouldShowDropdown;\n      bc.isDropdownTrigger = shouldShowDropdown;\n\n      if (shouldShowDropdown) {\n        this.nextButtonRef = bc;\n      }\n\n      if (updatedItems.length < this.visibleItemCount) {\n        return;\n      }\n\n      bc.visible = index >= updatedItems.length - this.visibleItemCount;\n    });\n\n    this.items = updatedItems;\n  }\n\n  private getItems() {\n    return Array.from(this.hostElement.querySelectorAll('ix-breadcrumb-item'));\n  }\n\n  render() {\n    const a11y = a11yHostAttributes(this.hostElement);\n    return (\n      <Host>\n        <ix-dropdown\n          id={this.previousDropdownId}\n          aria-label={this.ariaLabelPreviousButton}\n          trigger={\n            this.items?.length > this.visibleItemCount\n              ? this.previousButtonRef\n              : null\n          }\n          onShowChanged={({ detail }) => {\n            this.isPreviousDropdownExpanded = detail;\n\n            const previousButton = this.hostElement.shadowRoot.getElementById(\n              this.previousButtonId\n            );\n\n            // Need to force update previous button to change `aria-expanded`\n            if (previousButton) {\n              forceUpdate(\n                this.hostElement.shadowRoot.getElementById(\n                  this.previousButtonId\n                )\n              );\n            }\n          }}\n        >\n          {this.items\n            .slice(0, this.items.length - this.visibleItemCount)\n            .map((item) => {\n              const label = item.label ?? item.innerText;\n\n              return (\n                <ix-dropdown-item\n                  label={label}\n                  onClick={() => {\n                    this.onItemClick(label);\n                  }}\n                  onItemClick={(event) => event.stopPropagation()}\n                ></ix-dropdown-item>\n              );\n            })}\n        </ix-dropdown>\n        {this.items?.length > this.visibleItemCount ? (\n          <ix-breadcrumb-item\n            id={this.previousButtonId}\n            ref={(ref) => (this.previousButtonRef = ref)}\n            label=\"...\"\n            tabIndex={1}\n            onItemClick={(event) => event.stopPropagation()}\n            aria-describedby={this.previousDropdownId}\n            aria-controls={this.previousDropdownId}\n            aria-expanded={a11yBoolean(this.isPreviousDropdownExpanded)}\n            class={'previous-button'}\n          ></ix-breadcrumb-item>\n        ) : null}\n        <nav\n          class=\"crumb-items\"\n          aria-label={a11y['aria-label'] ?? 'breadcrumbs'}\n        >\n          <ol>\n            <slot></slot>\n          </ol>\n        </nav>\n        <ix-dropdown trigger={this.nextButtonRef}>\n          {this.nextItems?.map((item) => (\n            <ix-dropdown-item\n              label={item}\n              onClick={(e) => {\n                this.nextClick.emit({\n                  event: e,\n                  item,\n                });\n              }}\n              onItemClick={(event) => event.stopPropagation()}\n            ></ix-dropdown-item>\n          ))}\n        </ix-dropdown>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}