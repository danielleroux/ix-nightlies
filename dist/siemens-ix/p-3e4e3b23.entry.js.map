{"version":3,"names":["workflowStepCss","IxWorkflowStepStyle0","WorkflowStep","selectedHandler","selectedStyle","this","selected","status","iconName","iconColor","disabled","watchPropHandler","componentDidLoad","customIconSlot","hostElement","querySelector","onStepClick","clickable","selectedChanged","emit","render","icons","h","Fragment","color","name","class","size","Host","key","onClick","tabIndex","step","vertical","line","position"],"sources":["src/components/workflow-step/workflow-step.scss?tag=ix-workflow-step&encapsulation=shadow","src/components/workflow-step/workflow-step.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  .step {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: var(--theme-workflow-step--background);\n    border-radius: var(--theme-workflow--border-radius);\n    width: auto;\n    padding: 1.125rem 0 $small-space 0;\n    height: 4rem;\n    width: 12.75rem;\n\n    .wrapper {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n\n      .line {\n        width: 100%;\n        height: 0.125rem;\n        background-color: var(--theme-workflow-step-icon-default--color);\n\n        &.first,\n        &.last {\n          width: 50%;\n          margin: 0 0 0 auto;\n        }\n\n        &.last {\n          margin: 0 auto 0 0;\n        }\n\n        &.single {\n          width: 0;\n        }\n\n        &.selected {\n          background-color: var(\n            --theme-workflow-step-icon-default--color--selected\n          );\n        }\n\n        &.done {\n          background-color: var(--theme-workflow-step-icon-done--color);\n\n          &.selected {\n            background-color: var(\n              --theme-workflow-step-icon-done--color--selected\n            );\n          }\n        }\n\n        &.warning {\n          background-color: var(--theme-color-warning);\n        }\n\n        &.success {\n          background-color: var(--theme-color-success);\n        }\n\n        &.error {\n          background-color: var(--theme-color-alarm);\n        }\n      }\n\n      .iconWrapper {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: absolute;\n\n        .absolute {\n          position: absolute;\n        }\n      }\n    }\n\n    .text {\n      margin-top: $default-space;\n      width: auto;\n      padding: 0 $small-space;\n    }\n\n    &.vertical {\n      flex-direction: row;\n      padding: 0;\n\n      .wrapper {\n        width: auto;\n        padding-left: 1.125rem;\n        height: 4rem;\n\n        .line {\n          width: 0.125rem;\n          height: 100%;\n\n          &.first,\n          &.last {\n            height: 50%;\n            margin: auto 0 0 0;\n          }\n\n          &.last {\n            margin: 0 0 auto 0;\n          }\n\n          &.single {\n            width: 0;\n          }\n        }\n      }\n\n      .text {\n        margin-top: 0;\n        margin-left: $default-space;\n        padding: 0;\n      }\n    }\n\n    &.clickable {\n      &:hover {\n        background-color: var(--theme-workflow-step--background--hover);\n      }\n\n      &:active {\n        background-color: var(--theme-workflow-step--background--active);\n      }\n    }\n\n    &:focus-visible {\n      outline: 1px solid var(--focus--border-color);\n      border-radius: 0;\n    }\n\n    &.selected {\n      background-color: var(--theme-workflow-step--background--selected);\n    }\n\n    &.disabled {\n      background-color: var(--theme-workflow-step--background--disabled);\n\n      .line {\n        background-color: var(\n          --theme-workflow-step-icon-default--color--disabled\n        ) !important;\n      }\n\n      .text {\n        color: var(--theme-workflow-step--color--disabled);\n      }\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\n@Component({\n  tag: 'ix-workflow-step',\n  styleUrl: 'workflow-step.scss',\n  shadow: true,\n})\nexport class WorkflowStep {\n  @Element() hostElement: HTMLIxWorkflowStepElement;\n\n  /**\n   * Select orientation\n   */\n  @Prop() vertical: boolean = false;\n\n  /**\n   * Set disabled\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Set status\n   */\n  @Prop() status: 'open' | 'success' | 'done' | 'warning' | 'error' = 'open';\n\n  /**\n   * Activate navigation click\n   */\n  @Prop() clickable: boolean = false;\n\n  /**\n   * Set selected\n   */\n  @Prop() selected: boolean = false;\n\n  /**\n   * Activate navigation click\n   *\n   * @internal\n   */\n  @Prop() position: 'first' | 'last' | 'single' | 'undefined' = 'undefined';\n\n  @State() iconName: 'circle' | 'circle-dot' | 'success' | 'warning' | 'error' =\n    'circle';\n\n  @State() iconColor: string = 'workflow-step-icon-default--color';\n\n  /**\n   * @internal\n   */\n  @Event() selectedChanged: EventEmitter<HTMLIxWorkflowStepElement>;\n\n  private customIconSlot: boolean;\n\n  @Watch('selected')\n  selectedHandler() {\n    const selectedStyle = this.selected ? '--selected' : '';\n\n    if (this.status === 'open') {\n      this.iconName = this.selected ? 'circle-dot' : 'circle';\n      this.iconColor = `workflow-step-icon-default--color${selectedStyle}`;\n    }\n\n    if (this.status === 'done' && !this.disabled) {\n      this.iconColor = `workflow-step-icon-done--color${selectedStyle}`;\n    }\n  }\n\n  @Watch('disabled')\n  @Watch('status')\n  watchPropHandler() {\n    switch (this.status) {\n      case 'open':\n        this.iconName = 'circle';\n        this.iconColor = 'workflow-step-icon-default--color';\n        break;\n      case 'success':\n        this.iconName = 'success';\n        this.iconColor = 'color-success';\n        break;\n      case 'done':\n        this.iconName = 'success';\n        this.iconColor = 'workflow-step-icon-done--color';\n        break;\n      case 'warning':\n        this.iconName = 'warning';\n        this.iconColor = 'color-warning';\n        break;\n      case 'error':\n        this.iconName = 'error';\n        this.iconColor = 'color-alarm';\n        break;\n\n      default:\n        this.iconName = 'circle';\n        break;\n    }\n\n    if (this.disabled) {\n      this.iconColor = 'workflow-step-icon-success--color--disabled';\n    }\n  }\n\n  componentDidLoad() {\n    this.watchPropHandler();\n    this.selectedHandler();\n\n    this.customIconSlot = !!this.hostElement.querySelector(\n      '[slot=\"custom-icon\"]'\n    );\n  }\n\n  onStepClick() {\n    if (!this.disabled && this.clickable) {\n      this.selectedChanged.emit(this.hostElement);\n    }\n  }\n\n  render() {\n    const icons = !this.customIconSlot ? (\n      <Fragment>\n        <ix-icon\n          color=\"color-1\"\n          name={\n            this.iconName === 'warning' ? 'triangle-filled' : 'circle-filled'\n          }\n          class=\"absolute\"\n          size=\"24\"\n        ></ix-icon>\n        <ix-icon\n          color={this.iconColor}\n          name={this.iconName}\n          class=\"absolute\"\n          size=\"24\"\n        ></ix-icon>\n      </Fragment>\n    ) : null;\n\n    return (\n      <Host onClick={() => this.onStepClick()}>\n        <div\n          tabIndex={0}\n          class={{\n            step: true,\n            selected: this.selected,\n            vertical: this.vertical,\n            disabled: this.disabled,\n            clickable: this.clickable && !this.disabled,\n          }}\n        >\n          <div class=\"wrapper\">\n            <div\n              class={{\n                line: true,\n                selected: this.selected,\n                [this.status]: true,\n                [this.position]: true,\n              }}\n            ></div>\n            <div class=\"iconWrapper\">\n              {icons}\n              <slot name=\"custom-icon\"></slot>\n            </div>\n          </div>\n          <div class=\"text\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"uEAAA,MAAMA,EAAkB,+kGACxB,MAAAC,EAAeD,E,MC0BFE,EAAY,M,wFAMK,M,cAKA,M,YAKwC,O,eAKvC,M,cAKD,M,cAOkC,Y,cAG5D,S,eAE2B,mC,CAU7B,eAAAC,GACE,MAAMC,EAAgBC,KAAKC,SAAW,aAAe,GAErD,GAAID,KAAKE,SAAW,OAAQ,CAC1BF,KAAKG,SAAWH,KAAKC,SAAW,aAAe,SAC/CD,KAAKI,UAAY,oCAAoCL,G,CAGvD,GAAIC,KAAKE,SAAW,SAAWF,KAAKK,SAAU,CAC5CL,KAAKI,UAAY,iCAAiCL,G,EAMtD,gBAAAO,GACE,OAAQN,KAAKE,QACX,IAAK,OACHF,KAAKG,SAAW,SAChBH,KAAKI,UAAY,oCACjB,MACF,IAAK,UACHJ,KAAKG,SAAW,UAChBH,KAAKI,UAAY,gBACjB,MACF,IAAK,OACHJ,KAAKG,SAAW,UAChBH,KAAKI,UAAY,iCACjB,MACF,IAAK,UACHJ,KAAKG,SAAW,UAChBH,KAAKI,UAAY,gBACjB,MACF,IAAK,QACHJ,KAAKG,SAAW,QAChBH,KAAKI,UAAY,cACjB,MAEF,QACEJ,KAAKG,SAAW,SAChB,MAGJ,GAAIH,KAAKK,SAAU,CACjBL,KAAKI,UAAY,6C,EAIrB,gBAAAG,GACEP,KAAKM,mBACLN,KAAKF,kBAELE,KAAKQ,iBAAmBR,KAAKS,YAAYC,cACvC,uB,CAIJ,WAAAC,GACE,IAAKX,KAAKK,UAAYL,KAAKY,UAAW,CACpCZ,KAAKa,gBAAgBC,KAAKd,KAAKS,Y,EAInC,MAAAM,GACE,MAAMC,GAAShB,KAAKQ,eAClBS,EAACC,EAAQ,KACPD,EAAA,WACEE,MAAM,UACNC,KACEpB,KAAKG,WAAa,UAAY,kBAAoB,gBAEpDkB,MAAM,WACNC,KAAK,OAEPL,EAAA,WACEE,MAAOnB,KAAKI,UACZgB,KAAMpB,KAAKG,SACXkB,MAAM,WACNC,KAAK,QAGP,KAEJ,OACEL,EAACM,EAAI,CAAAC,IAAA,2CAACC,QAAS,IAAMzB,KAAKW,eACxBM,EAAA,OAAAO,IAAA,2CACEE,SAAU,EACVL,MAAO,CACLM,KAAM,KACN1B,SAAUD,KAAKC,SACf2B,SAAU5B,KAAK4B,SACfvB,SAAUL,KAAKK,SACfO,UAAWZ,KAAKY,YAAcZ,KAAKK,WAGrCY,EAAA,OAAAO,IAAA,2CAAKH,MAAM,WACTJ,EAAA,OAAAO,IAAA,2CACEH,MAAO,CACLQ,KAAM,KACN5B,SAAUD,KAAKC,SACf,CAACD,KAAKE,QAAS,KACf,CAACF,KAAK8B,UAAW,QAGrBb,EAAA,OAAAO,IAAA,2CAAKH,MAAM,eACRL,EACDC,EAAA,QAAAO,IAAA,2CAAMJ,KAAK,kBAGfH,EAAA,OAAAO,IAAA,2CAAKH,MAAM,QACTJ,EAAA,QAAAO,IAAA,+C"}