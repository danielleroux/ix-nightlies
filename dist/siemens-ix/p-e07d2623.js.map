{"version":3,"names":["menuSettingsCss","IxMenuSettingsStyle0","MenuSettings","updateTab","label","setTab","this","componentWillLoad","initialize","componentDidLoad","forceUpdate","el","render","h","MenuTabs","key","context","getItems","Array","from","querySelectorAll","activeTabLabel","items","forEach","i","style","display","length","item","addEventListener","e","detail","oldLabel","newLabel","getTabItems","map","selected","onClick","Host","slot","class","show","ghost","size","icon","close","emit","name","nativeEvent"],"sources":["src/components/menu-settings/menu-settings.scss?tag=ix-menu-settings&encapsulation=shadow","src/components/menu-settings/menu-settings.tsx","src/components/utils/menu-tabs/menu-tabs-utils.ts","src/components/utils/menu-tabs/menu-tabs-fc.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/fonts';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: block;\n  background-color: var(--theme-nav-overlay--background);\n  padding: $medium-space $default-space $default-space $x-large-space;\n  flex-grow: 1;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  .settings-header {\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    align-items: center;\n    height: $x-large-space;\n    margin-bottom: $small-space;\n\n    h2 {\n      color: var(--theme-nav-overlay-header--color);\n      margin-bottom: 1rem;\n    }\n  }\n\n  ix-tabs {\n    margin-bottom: 1.5rem;\n  }\n\n  .settings-tabs {\n    margin-bottom: $large-space;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { MenuTabs } from '../utils/menu-tabs/menu-tabs-fc';\nimport {\n  CustomCloseEvent,\n  initialize,\n  setTab,\n} from '../utils/menu-tabs/menu-tabs-utils';\n\n@Component({\n  tag: 'ix-menu-settings',\n  styleUrl: 'menu-settings.scss',\n  shadow: true,\n})\nexport class MenuSettings {\n  @Element() el!: HTMLIxMenuSettingsElement;\n\n  /**\n   * Active tab\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable\n  @Prop({ mutable: true }) activeTabLabel: string;\n\n  /**\n   * Label of first tab\n   */\n  @Prop() label = 'Settings';\n\n  /**\n   * Internal\n   */\n  @Prop() show = false;\n\n  /**\n   * Popover closed\n   */\n  @Event() close: EventEmitter<CustomCloseEvent>;\n\n  @State() items: HTMLIxMenuSettingsItemElement[];\n\n  @Watch('activeTabLabel')\n  updateTab(label: string) {\n    setTab(this, label);\n  }\n\n  componentWillLoad() {\n    initialize(this);\n  }\n\n  componentDidLoad() {\n    forceUpdate(this.el);\n  }\n\n  render() {\n    return <MenuTabs context={this} />;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { MenuAbout } from '../../menu-about/menu-about';\nimport { MenuSettings } from '../../menu-settings/menu-settings';\n\nfunction getItems(\n  context: MenuSettings | MenuAbout\n): HTMLIxMenuSettingsItemElement[] | HTMLIxMenuAboutItemElement[] {\n  return Array.from(\n    context.el.querySelectorAll(\n      context instanceof MenuSettings\n        ? 'ix-menu-settings-item'\n        : 'ix-menu-about-item'\n    )\n  );\n}\n\nexport function setTab(context: MenuSettings | MenuAbout, label: string) {\n  context.activeTabLabel = label;\n  context.items.forEach((i) => {\n    i.style.display = 'none';\n    if (i.label === context.activeTabLabel) {\n      i.style.display = 'block';\n    }\n  });\n}\n\nexport function initialize(context: MenuSettings | MenuAbout) {\n  context.items = getItems(context);\n\n  if (context.items.length) {\n    setTab(context, context.activeTabLabel || context.items[0].label);\n  }\n\n  context.items.forEach((item) => {\n    item.addEventListener('labelChange', (e: CustomEvent) => {\n      context.items = getItems(context);\n\n      if (e.detail.oldLabel === context.activeTabLabel) {\n        context.activeTabLabel = e.detail.newLabel;\n      }\n    });\n  });\n}\n\nexport interface CustomLabelChangeEvent {\n  name: string;\n  oldLabel: string;\n  newLabel: string;\n}\n\nexport interface CustomCloseEvent {\n  nativeEvent: MouseEvent;\n  name: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { FunctionalComponent, h, Host } from '@stencil/core';\nimport { setTab } from './menu-tabs-utils';\nimport { MenuAbout } from '../../menu-about/menu-about';\nimport { MenuSettings } from '../../menu-settings/menu-settings';\n\ninterface MenuTabsProps {\n  context: MenuSettings | MenuAbout;\n}\n\nconst getTabItems = (context: MenuSettings | MenuAbout) => {\n  return context.items.map(({ label }) => {\n    return (\n      <ix-tab-item\n        selected={label === context.activeTabLabel}\n        onClick={() => setTab(context, label)}\n      >\n        {label}\n      </ix-tab-item>\n    );\n  });\n};\n\nexport const MenuTabs: FunctionalComponent<MenuTabsProps> = ({ context }) => (\n  <Host\n    slot={\n      context instanceof MenuSettings ? 'ix-menu-settings' : 'ix-menu-about'\n    }\n    class={{\n      show: context.show,\n    }}\n  >\n    <div\n      class={\n        context instanceof MenuSettings ? 'settings-header' : 'about-header'\n      }\n    >\n      <h2 class=\"text-h2\">{context.label}</h2>\n      <ix-icon-button\n        ghost\n        size=\"24\"\n        icon={'close'}\n        onClick={(e) =>\n          context.close.emit({\n            name:\n              context instanceof MenuSettings\n                ? 'ix-menu-settings'\n                : 'ix-menu-about',\n            nativeEvent: e,\n          })\n        }\n      ></ix-icon-button>\n    </div>\n    <ix-tabs>{getTabItems(context)}</ix-tabs>\n    <slot></slot>\n  </Host>\n);\n"],"mappings":"uEAAA,MAAMA,EAAkB,25HACxB,MAAAC,EAAeD,E,MC+BFE,EAAY,M,+FAYP,W,UAKD,M,qBAUf,SAAAC,CAAUC,GACRC,EAAOC,KAAMF,E,CAGf,iBAAAG,GACEC,EAAWF,K,CAGb,gBAAAG,GACEC,EAAYJ,KAAKK,G,CAGnB,MAAAC,GACE,OAAOC,EAACC,EAAQ,CAAAC,IAAA,2CAACC,QAASV,M,gGC5D9B,SAASW,EACPD,GAEA,OAAOE,MAAMC,KACXH,EAAQL,GAAGS,iBACTJ,aAAmBd,EACf,wBACA,sBAGV,C,SAEgBG,EAAOW,EAAmCZ,GACxDY,EAAQK,eAAiBjB,EACzBY,EAAQM,MAAMC,SAASC,IACrBA,EAAEC,MAAMC,QAAU,OAClB,GAAIF,EAAEpB,QAAUY,EAAQK,eAAgB,CACtCG,EAAEC,MAAMC,QAAU,O,IAGxB,C,SAEgBlB,EAAWQ,GACzBA,EAAQM,MAAQL,EAASD,GAEzB,GAAIA,EAAQM,MAAMK,OAAQ,CACxBtB,EAAOW,EAASA,EAAQK,gBAAkBL,EAAQM,MAAM,GAAGlB,M,CAG7DY,EAAQM,MAAMC,SAASK,IACrBA,EAAKC,iBAAiB,eAAgBC,IACpCd,EAAQM,MAAQL,EAASD,GAEzB,GAAIc,EAAEC,OAAOC,WAAahB,EAAQK,eAAgB,CAChDL,EAAQK,eAAiBS,EAAEC,OAAOE,Q,IAEpC,GAEN,CChCA,MAAMC,EAAelB,GACZA,EAAQM,MAAMa,KAAI,EAAG/B,WAExBS,EAAA,eACEuB,SAAUhC,IAAUY,EAAQK,eAC5BgB,QAAS,IAAMhC,EAAOW,EAASZ,IAE9BA,K,MAMIU,EAA+C,EAAGE,aAC7DH,EAACyB,EAAI,CACHC,KACEvB,aAAmBd,EAAe,mBAAqB,gBAEzDsC,MAAO,CACLC,KAAMzB,EAAQyB,OAGhB5B,EAAA,OACE2B,MACExB,aAAmBd,EAAe,kBAAoB,gBAGxDW,EAAA,MAAI2B,MAAM,WAAWxB,EAAQZ,OAC7BS,EAAA,kBACE6B,MAAK,KACLC,KAAK,KACLC,KAAM,QACNP,QAAUP,GACRd,EAAQ6B,MAAMC,KAAK,CACjBC,KACE/B,aAAmBd,EACf,mBACA,gBACN8C,YAAalB,OAKrBjB,EAAA,eAAUqB,EAAYlB,IACtBH,EAAA,qB"}