{"version":3,"names":["uploadCss","IxUploadStyle0","Upload","inputElement","this","hostElement","shadowRoot","querySelector","constructor","hostRef","registerInstance","filesChanged","createEvent","accept","undefined","multiple","multiline","disabled","state","UploadFileState","SELECT_FILE","selectFileText","loadingText","uploadFailedText","uploadSuccessText","i18nUploadFile","i18nUploadDisabled","isFileOver","fileDropped","evt","preventDefault","file","dataTransfer","files","filesToUpload","convertToFileArray","emit","fileOver","event","LOADING","dropEffect","items","length","stopPropagation","effectAllowed","fileLeave","fileChangeEvent","target","type","filesFromEvent","FileList","Array","from","renderUploadState","h","class","variant","UPLOAD_FAILED","name","UPLOAD_SUCCESSED","setFilesToUpload","obj","render","Host","key","checking","onDrop","e","onDragOver","onDragLeave","draggable","id","onChange","tabindex","outline","onClick","click"],"sources":["src/components/upload/upload.scss?tag=ix-upload&encapsulation=shadow","src/components/upload/upload.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/shadow-dom/component';\n@import 'mixins/text-truncation';\n\n:host {\n  @include ix-component;\n  display: block;\n  min-height: 4rem;\n  height: 4rem;\n\n  .file-upload-area {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    overflow: hidden;\n\n    height: 100%;\n    width: 100%;\n\n    padding: $default-space;\n\n    border: 1px dashed var(--theme-upload--border-color);\n    border-radius: var(--theme-upload--border-radius);\n    color: var(--theme-upload-text--color);\n\n    &.multiline {\n      max-height: unset;\n      height: auto;\n\n      .glyph {\n        align-self: flex-start;\n        margin-block-start: 3px;\n      }\n\n      > div {\n        align-self: flex-start;\n      }\n    }\n\n    &:not(.multiline) {\n      .state,\n      .upload-text {\n        @include ellipsis;\n      }\n    }\n\n    &:not(.disabled).file-over {\n      border-color: var(--theme-upload--border-color--dragover);\n      border-style: solid;\n    }\n\n    &.checking {\n      color: var(--theme-upload-text--color--checking);\n      border-style: solid;\n    }\n\n    &.disabled {\n      border-style: solid;\n      color: var(--theme-upload-text--color--disabled);\n    }\n\n    ix-button {\n      margin-inline-start: $default-space;\n    }\n\n    .upload-browser {\n      border: 0;\n      clip: rect(0 0 0 0);\n      height: 1px;\n      margin: -1px;\n      overflow: hidden;\n      padding: 0;\n      position: absolute;\n      width: 1px;\n    }\n\n    .loader {\n      margin: 2.187rem auto;\n      font-size: 0.937rem;\n      width: $default-space;\n      height: $default-space;\n      border-radius: 50%;\n      position: relative;\n      text-indent: -9999em;\n      animation: optimise-loading 1.1s infinite ease;\n      transform: translateZ(0);\n    }\n\n    .upload-filename {\n      margin-bottom: $default-space;\n    }\n\n    .state {\n      display: flex;\n      align-items: center;\n\n      > ix-spinner {\n        margin-inline-end: $small-space;\n        height: $large-space;\n        width: $large-space;\n      }\n\n      > ix-icon {\n        margin-inline-end: $small-space;\n\n        &.icon-error {\n          color: var(--theme-color-alarm);\n        }\n\n        &.icon-success {\n          color: var(--theme-color-success);\n        }\n      }\n    }\n  }\n}\n\n:host(.disabled) {\n  pointer-events: none;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { UploadFileState } from './upload-file-state';\n\n@Component({\n  tag: 'ix-upload',\n  styleUrl: 'upload.scss',\n  shadow: true,\n})\nexport class Upload {\n  /**\n   * The accept attribute specifies the types of files that the server accepts (that can be submitted through a file upload).\n   * [accept]{@link \"https://www.w3schools.com/tags/att_input_accept.asp\"}\n   */\n  @Prop() accept: string;\n\n  /**\n   * If multiple is true the user can drop or select multiple files\n   */\n  @Prop() multiple = false;\n\n  /**\n   * Whether the text should wrap to more than one line\n   */\n  @Prop() multiline = false;\n\n  /**\n   * Disable all input events\n   */\n  @Prop() disabled = false;\n\n  /**\n   * After a file is uploaded you can set the upload component to a defined state\n   */\n  @Prop() state: UploadFileState = UploadFileState.SELECT_FILE;\n\n  /**\n   * Will be used by state = UploadFileState.SELECT_FILE\n   */\n  @Prop() selectFileText = '+ Drag files here or…';\n\n  /**\n   * Will be used by state = UploadFileState.LOADING\n   */\n  @Prop() loadingText = 'Checking files…';\n\n  /**\n   * Will be used by state = UploadFileState.UPLOAD_FAILED\n   */\n  @Prop() uploadFailedText = 'Upload failed. Please try again.';\n\n  /**\n   * Will be used by state = UploadFileState.UPLOAD_SUCCESSED\n   */\n  @Prop() uploadSuccessText = 'Upload successful';\n\n  /**\n   * Label for upload file button\n   */\n  @Prop() i18nUploadFile = 'Upload file…';\n\n  /**\n   * Text for disabled state\n   */\n  @Prop() i18nUploadDisabled = 'File upload currently not possible.';\n\n  /**\n   * You get an array of Files after drop-action or browse action is finished\n   */\n  @Event() filesChanged: EventEmitter<Array<File>>;\n\n  @Element() hostElement!: HTMLIxUploadElement;\n\n  get inputElement(): HTMLInputElement {\n    return this.hostElement.shadowRoot.querySelector('#upload-browser');\n  }\n\n  @State() isFileOver = false;\n\n  private filesToUpload: Array<File>;\n\n  constructor() {}\n\n  private fileDropped(evt: DragEvent) {\n    evt.preventDefault();\n    if (this.disabled) {\n      return;\n    }\n\n    const file: File | FileList = evt.dataTransfer.files;\n    this.isFileOver = false;\n\n    this.filesToUpload = this.convertToFileArray(file);\n    this.filesChanged.emit(this.filesToUpload);\n  }\n\n  private fileOver(event: DragEvent) {\n    if (this.state !== UploadFileState.LOADING) {\n      event.preventDefault();\n      event.dataTransfer.dropEffect = 'move';\n    }\n\n    if (!this.multiple && event.dataTransfer.items.length > 1) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.dataTransfer.effectAllowed = 'none';\n      event.dataTransfer.dropEffect = 'none';\n    } else {\n      this.isFileOver = true;\n    }\n  }\n\n  private fileLeave() {\n    this.isFileOver = false;\n  }\n\n  private fileChangeEvent(event: any) {\n    if (this.disabled) {\n      return;\n    }\n    this.filesToUpload = this.convertToFileArray(event.target.files);\n\n    this.filesChanged.emit(this.filesToUpload);\n\n    // Workaround for bug in native input element, that prevents the user from uploading\n    // a file with the same name as the most recent one, but with changed content.\n    this.inputElement.type = '';\n    this.inputElement.type = 'file';\n  }\n\n  private convertToFileArray(filesFromEvent: FileList | File): File[] {\n    let files = [];\n    if (filesFromEvent instanceof FileList) {\n      files = Array.from(filesFromEvent);\n    } else {\n      files = [filesFromEvent];\n    }\n    return files;\n  }\n\n  private renderUploadState() {\n    if (this.disabled) {\n      return (\n        <span class=\"state\">\n          <span class=\"upload-text\">{this.i18nUploadDisabled}</span>\n        </span>\n      );\n    }\n\n    switch (this.state) {\n      case UploadFileState.SELECT_FILE:\n        return (\n          <span class=\"state\">\n            <span class=\"upload-text\">{this.selectFileText}</span>\n          </span>\n        );\n      case UploadFileState.LOADING:\n        return (\n          <span class=\"state\">\n            <ix-spinner variant=\"primary\"></ix-spinner>\n            <span class=\"upload-text\">{this.loadingText}</span>\n          </span>\n        );\n      case UploadFileState.UPLOAD_FAILED:\n        return (\n          <span class=\"state\">\n            <ix-icon name=\"error\" class=\"icon-error\"></ix-icon>\n            <span class=\"upload-text\">{this.uploadFailedText}</span>\n          </span>\n        );\n      case UploadFileState.UPLOAD_SUCCESSED:\n        return (\n          <span class=\"state\">\n            <ix-icon name=\"success\" class=\"icon-success\"></ix-icon>\n            <span class=\"upload-text\">{this.uploadSuccessText}</span>\n          </span>\n        );\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Set files\n   * @param obj\n   */\n  @Method()\n  async setFilesToUpload(obj: any) {\n    this.filesToUpload = obj;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            'file-upload-area': true,\n            'file-over':\n              this.state !== UploadFileState.LOADING && this.isFileOver,\n            checking: this.state === UploadFileState.LOADING,\n            disabled: this.disabled,\n            multiline: this.multiline,\n          }}\n          onDrop={(e) => {\n            if (this.state !== UploadFileState.LOADING) {\n              this.fileDropped(e);\n            }\n          }}\n          onDragOver={(e) => this.fileOver(e)}\n          onDragLeave={() => this.fileLeave()}\n          draggable={!this.disabled}\n        >\n          {this.renderUploadState()}\n          <div>\n            <input\n              multiple={this.multiple}\n              type=\"file\"\n              class=\"upload-browser\"\n              id=\"upload-browser\"\n              onChange={(e) => {\n                this.fileChangeEvent(e);\n              }}\n              accept={this.accept}\n            />\n            <ix-button\n              tabindex=\"-1\"\n              outline\n              onClick={() => this.inputElement.click()}\n              disabled={this.disabled || this.state === UploadFileState.LOADING}\n            >\n              {this.i18nUploadFile}\n            </ix-button>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}