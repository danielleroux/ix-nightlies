{"version":3,"names":["tooltipCss","IxTooltipStyle0","numberToPixel","value","Tooltip","this","onEnterElementBind","onTooltipShow","bind","onLeaveElementBind","onTooltipHide","tooltipCloseTimeInMS","arrowElement","hostElement","shadowRoot","querySelector","destroyAutoUpdate","disposeAutoUpdate","undefined","e","showTooltip","target","hideTooltip","anchorElement","clearTimeout","hideTooltipTimeout","computeTooltipPosition","visible","setTimeout","computeArrowPosition","placement","middlewareData","x","y","arrow","startsWith","left","top","right","Promise","resolve","autoUpdate","async","computeResponse","computePosition","strategy","middleware","shift","offset","element","flip","fallbackStrategy","padding","arrowPosition","Object","assign","style","ancestorResize","ancestorScroll","elementResize","animationFrame","clearHideTimeout","interactive","queryAnchorElements","Array","from","document","querySelectorAll","for","registerTriggerListener","triggerElementList","disposeListener","forEach","addEventListener","removeEventListener","registerTooltipListener","onKeydown","event","code","componentWillLoad","componentDidLoad","observer","MutationObserver","observe","body","attributes","attributeFilter","childList","subtree","disconnectedCallback","_a","disconnect","render","tooltipContentClass","h","Host","key","class","role","name","variant","titleContent","__decorate","OnListener","self"],"sources":["src/components/tooltip/tooltip.scss?tag=ix-tooltip&encapsulation=shadow","src/components/tooltip/tooltip.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n  position: fixed;\n  left: 0px;\n  top: 0px;\n  z-index: var(--theme-z-index-tooltip);\n\n  max-width: 18.25rem;\n\n  opacity: 0;\n  visibility: collapse !important;\n  overflow-wrap: break-word;\n\n  border-radius: 0.25rem;\n  background-color: var(--theme-tootlip--background);\n  padding: 0.375rem 0.75rem 0.375rem 0.875rem;\n\n  box-shadow: var(--theme-shadow-4);\n\n  .tooltip-title {\n    display: flex;\n    align-items: center;\n\n    ::slotted(ix-icon) {\n      margin-right: 0.35rem;\n    }\n  }\n}\n\n:host(.visible) {\n  opacity: 1;\n  visibility: visible !important;\n}\n\n:host(.visible) {\n  .arrow,\n  .arrow::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    background: inherit;\n  }\n\n  .arrow {\n    visibility: hidden;\n  }\n\n  .arrow::before {\n    visibility: visible;\n    content: '';\n    transform: rotate(45deg);\n    background-color: var(--theme-tootlip--background);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {\n  arrow,\n  autoUpdate,\n  computePosition,\n  ComputePositionReturn,\n  flip,\n  offset,\n  shift,\n} from '@floating-ui/dom';\nimport {\n  Component,\n  Element,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { OnListener } from '../utils/listener';\n\ntype ArrowPosition = {\n  top?: string;\n  left?: string;\n  right?: string;\n};\n\nconst numberToPixel = (value: number) => (value != null ? `${value}px` : '');\n\n/**\n * @slot title-icon - Icon of tooltip title\n * @slot title-content - Content of tooltip title\n *\n * @since 1.4.0\n */\n@Component({\n  tag: 'ix-tooltip',\n  styleUrl: 'tooltip.scss',\n  shadow: true,\n})\nexport class Tooltip {\n  /**\n   * CSS selector for hover trigger element e.g. `for=\"[data-my-custom-select]\"`\n   */\n  @Prop() for: string;\n\n  /**\n   * Title of the tooltip\n   */\n  @Prop() titleContent: string;\n\n  /**\n   * Define if the user can access the tooltip via mouse.\n   */\n  @Prop() interactive = false;\n\n  /**\n   * Initial placement of the tooltip. If the placement don\"t have enough space,\n   * the tooltip will placed on another location.\n   *\n   * @since 1.5.0\n   */\n  @Prop() placement: 'top' | 'right' | 'bottom' | 'left' = 'top';\n\n  /** @internal */\n  @Prop() animationFrame = false;\n\n  @State() visible = false;\n\n  @Element() hostElement: HTMLIxTooltipElement;\n\n  private observer: MutationObserver;\n  private hideTooltipTimeout: NodeJS.Timeout;\n  private onEnterElementBind = this.onTooltipShow.bind(this);\n  private onLeaveElementBind = this.onTooltipHide.bind(this);\n  private disposeAutoUpdate?: () => void;\n  private tooltipCloseTimeInMS = 50;\n\n  private disposeListener: Function;\n\n  private get arrowElement() {\n    return this.hostElement.shadowRoot.querySelector('.arrow') as HTMLElement;\n  }\n\n  private destroyAutoUpdate() {\n    if (this.disposeAutoUpdate !== undefined) {\n      this.disposeAutoUpdate();\n    }\n  }\n\n  private onTooltipShow(e: Event) {\n    this.showTooltip(e.target as Element);\n  }\n\n  private onTooltipHide() {\n    this.hideTooltip();\n  }\n\n  /** @internal */\n  @Method()\n  async showTooltip(anchorElement: any) {\n    clearTimeout(this.hideTooltipTimeout);\n    await this.computeTooltipPosition(anchorElement);\n    this.visible = true;\n  }\n\n  /** @internal */\n  @Method()\n  async hideTooltip() {\n    this.hideTooltipTimeout = setTimeout(() => {\n      this.visible = false;\n    }, this.tooltipCloseTimeInMS);\n    this.destroyAutoUpdate();\n  }\n\n  private computeArrowPosition({\n    placement,\n    middlewareData,\n  }: ComputePositionReturn): ArrowPosition {\n    let { x, y } = middlewareData.arrow;\n\n    if (placement.startsWith('top')) {\n      return {\n        left: numberToPixel(x),\n        top: numberToPixel(y),\n      };\n    }\n\n    if (placement.startsWith('right')) {\n      return {\n        left: numberToPixel(-4),\n        top: numberToPixel(y),\n      };\n    }\n\n    if (placement.startsWith('bottom')) {\n      return {\n        left: numberToPixel(x),\n        top: numberToPixel(-4),\n      };\n    }\n\n    if (placement.startsWith('left')) {\n      return {\n        right: numberToPixel(-4),\n        top: numberToPixel(y),\n      };\n    }\n  }\n\n  private async computeTooltipPosition(target: Element) {\n    if (!target) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      this.disposeAutoUpdate = autoUpdate(\n        target,\n        this.hostElement,\n        async () => {\n          setTimeout(async () => {\n            const computeResponse = await computePosition(\n              target,\n              this.hostElement,\n              {\n                strategy: 'fixed',\n                placement: this.placement,\n                middleware: [\n                  shift(),\n                  offset(8),\n                  arrow({\n                    element: this.arrowElement,\n                  }),\n                  flip({\n                    fallbackStrategy: 'initialPlacement',\n                    padding: 10,\n                  }),\n                ],\n              }\n            );\n\n            if (computeResponse.middlewareData.arrow) {\n              const arrowPosition = this.computeArrowPosition(computeResponse);\n              Object.assign(this.arrowElement.style, arrowPosition);\n            }\n\n            const { x, y } = computeResponse;\n            Object.assign(this.hostElement.style, {\n              left: x !== null ? `${x}px` : '',\n              top: y !== null ? `${y}px` : '',\n            });\n\n            resolve();\n          });\n        },\n        {\n          ancestorResize: true,\n          ancestorScroll: true,\n          elementResize: true,\n          animationFrame: this.animationFrame,\n        }\n      );\n    });\n  }\n\n  private clearHideTimeout() {\n    if (this.interactive) {\n      clearTimeout(this.hideTooltipTimeout);\n    }\n  }\n\n  private queryAnchorElements() {\n    return Array.from(document.querySelectorAll(this.for));\n  }\n\n  private registerTriggerListener() {\n    const triggerElementList = this.queryAnchorElements();\n\n    if (this.disposeListener) {\n      this.disposeListener();\n    }\n\n    triggerElementList.forEach((element) => {\n      element.addEventListener('mouseenter', this.onEnterElementBind);\n      element.addEventListener('mouseleave', this.onLeaveElementBind);\n      element.addEventListener('focusin', this.onEnterElementBind);\n      element.addEventListener('focusout', this.onLeaveElementBind);\n\n      this.disposeListener = () => {\n        element.removeEventListener('mouseenter', this.onEnterElementBind);\n        element.removeEventListener('mouseleave', this.onLeaveElementBind);\n        element.removeEventListener('focusin', this.onEnterElementBind);\n        element.removeEventListener('focusout', this.onLeaveElementBind);\n      };\n    });\n  }\n\n  private registerTooltipListener() {\n    const { hostElement } = this;\n    hostElement.addEventListener('mouseenter', () => this.clearHideTimeout());\n    hostElement.addEventListener('focusin', () => this.clearHideTimeout());\n    hostElement.addEventListener('mouseleave', () => this.onTooltipHide());\n    hostElement.addEventListener('focusout', () => this.onTooltipHide());\n  }\n\n  @OnListener<Tooltip>('keydown', (self) => self.visible)\n  async onKeydown(event: KeyboardEvent) {\n    if (event.code === 'Escape') {\n      this.onTooltipHide();\n    }\n  }\n\n  componentWillLoad() {\n    this.registerTriggerListener();\n  }\n\n  componentDidLoad() {\n    if (this.interactive) {\n      this.tooltipCloseTimeInMS = 150;\n    }\n\n    this.observer = new MutationObserver(() => {\n      this.registerTriggerListener();\n    });\n\n    this.observer.observe(document.body, {\n      attributes: true,\n      attributeFilter: ['data-ix-tooltip'],\n      childList: true,\n      subtree: true,\n    });\n\n    this.registerTooltipListener();\n  }\n\n  disconnectedCallback() {\n    this.observer?.disconnect();\n    this.destroyAutoUpdate();\n  }\n\n  render() {\n    const tooltipContentClass = {\n      'tooltip-content': true,\n    };\n\n    return (\n      <Host\n        class={{\n          visible: this.visible,\n        }}\n        role=\"tooltip\"\n      >\n        <div class={'tooltip-title'}>\n          <slot name=\"title-icon\"></slot>\n          <ix-typography variant=\"default-title\">\n            {this.titleContent}\n            <slot name=\"title-content\"></slot>\n          </ix-typography>\n        </div>\n        <div class={tooltipContentClass}>\n          <slot></slot>\n        </div>\n        <div class=\"arrow\"></div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}