{"version":3,"names":["defaultOptions","target","defaultEnabled","createListener","event","options","opts","Object","assign","callback","onEvent","resultObject","on","onEventCallback","isEnabled","enable","state","addEventListener","removeEventListener","destroy","OnListener","fnExp","proto","methodName","componentWillLoad","componentWillRender","disconnectedCallback","host","getElement","this","_a","call","listener","method","bind"],"sources":["src/components/utils/listener.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getElement } from '@stencil/core';\n\nexport type ListenerOptions = {\n  target?: 'window';\n  defaultEnabled?: boolean;\n};\n\nconst defaultOptions: ListenerOptions = {\n  target: 'window',\n  defaultEnabled: true,\n};\n\nexport function createListener(event: string, options: ListenerOptions = {}) {\n  const opts = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  let callback: any;\n  const onEvent = (event: Event) => {\n    callback(event);\n  };\n\n  const resultObject = {\n    on: (onEventCallback: any) => {\n      callback = onEventCallback;\n    },\n\n    isEnabled: opts.defaultEnabled,\n\n    enable: (state: boolean) => {\n      resultObject.isEnabled = state;\n\n      if (state) {\n        addEventListener(event, onEvent);\n      } else {\n        removeEventListener(event, onEvent);\n      }\n    },\n\n    destroy: () => {\n      resultObject.enable(false);\n    },\n  };\n\n  resultObject.enable(opts.defaultEnabled);\n  return resultObject;\n}\n\nexport function OnListener<T>(event: string, fnExp?: (self: T) => boolean) {\n  return (proto: any, methodName: string) => {\n    const { componentWillLoad, componentWillRender, disconnectedCallback } =\n      proto;\n\n    if (fnExp) {\n      proto.componentWillRender = function () {\n        const host = getElement(this);\n        host[`__ix__${methodName}`]?.enable(fnExp(this));\n        return componentWillRender && componentWillRender.call(this);\n      };\n    }\n\n    proto.componentWillLoad = function () {\n      const listener = createListener(event);\n      const host = getElement(this);\n      const method = this[methodName];\n\n      host[`__ix__${methodName}`] = listener;\n\n      listener.on(method.bind(this));\n      return componentWillLoad && componentWillLoad.call(this);\n    };\n\n    proto.disconnectedCallback = function () {\n      const host = getElement(this);\n\n      if (host && host[`__ix__${methodName}`]) {\n        host[`__ix__${methodName}`]?.destroy();\n        host[`__ix__${methodName}`] = null;\n      }\n\n      return disconnectedCallback && disconnectedCallback.call(this);\n    };\n  };\n}\n"],"mappings":"oCAgBA,MAAMA,EAAkC,CACtCC,OAAQ,SACRC,eAAgB,M,SAGFC,EAAeC,EAAeC,EAA2B,IACvE,MAAMC,EAAIC,OAAAC,OAAAD,OAAAC,OAAA,GACLR,GACAK,GAGL,IAAII,EACJ,MAAMC,EAAWN,IACfK,EAASL,EAAM,EAGjB,MAAMO,EAAe,CACnBC,GAAKC,IACHJ,EAAWI,CAAe,EAG5BC,UAAWR,EAAKJ,eAEhBa,OAASC,IACPL,EAAaG,UAAYE,EAEzB,GAAIA,EAAO,CACTC,iBAAiBb,EAAOM,E,KACnB,CACLQ,oBAAoBd,EAAOM,E,GAI/BS,QAAS,KACPR,EAAaI,OAAO,MAAM,GAI9BJ,EAAaI,OAAOT,EAAKJ,gBACzB,OAAOS,CACT,C,SAEgBS,EAAchB,EAAeiB,GAC3C,MAAO,CAACC,EAAYC,KAClB,MAAMC,kBAAEA,EAAiBC,oBAAEA,EAAmBC,qBAAEA,GAC9CJ,EAEF,GAAID,EAAO,CACTC,EAAMG,oBAAsB,W,MAC1B,MAAME,EAAOC,EAAWC,OACxBC,EAAAH,EAAK,SAASJ,QAAa,MAAAO,SAAA,SAAAA,EAAEf,OAAOM,EAAMQ,OAC1C,OAAOJ,GAAuBA,EAAoBM,KAAKF,K,EAI3DP,EAAME,kBAAoB,WACxB,MAAMQ,EAAW7B,EAAeC,GAChC,MAAMuB,EAAOC,EAAWC,MACxB,MAAMI,EAASJ,KAAKN,GAEpBI,EAAK,SAASJ,KAAgBS,EAE9BA,EAASpB,GAAGqB,EAAOC,KAAKL,OACxB,OAAOL,GAAqBA,EAAkBO,KAAKF,K,EAGrDP,EAAMI,qBAAuB,W,MAC3B,MAAMC,EAAOC,EAAWC,MAExB,GAAIF,GAAQA,EAAK,SAASJ,KAAe,EACvCO,EAAAH,EAAK,SAASJ,QAAa,MAAAO,SAAA,SAAAA,EAAEX,UAC7BQ,EAAK,SAASJ,KAAgB,I,CAGhC,OAAOG,GAAwBA,EAAqBK,KAAKF,K,CAC1D,CAEL,Q"}