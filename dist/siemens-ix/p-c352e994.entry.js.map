{"version":3,"names":["applicationCss","IxApplicationStyle0","Application","forceLayoutChange","newMode","applicationLayoutService","enableBreakpointDetection","disableBreakpointDetection","setBreakpoint","onBreakpointsChange","breakpoints","setBreakpoints","menu","this","hostElement","querySelector","applicationSidebarSlot","shadowRoot","onContentClick","menuController","isPinned","_a","toggleMenu","componentWillLoad","contextProvider","useContextProvider","ApplicationLayoutContext","hideHeader","host","sidebar","applicationSidebarSlotted","appSwitchConfig","modeDisposable","onChange","on","mode","breakpoint","forceBreakpoint","changeTheme","disconnectedCallback","dispose","theme","themeSystemAppearance","themeSwitcher","setVariant","hasVariantSuffix","setTheme","onApplicationSidebarChange","emit","render","h","Host","key","class","name","slotted","onClick","onSlotchange","hasSlottedElements"],"sources":["src/components/application/application.scss?tag=ix-application&encapsulation=shadow","src/components/application/application.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  flex-direction: column;\n\n  ix-application-header {\n    z-index: calc(var(--theme-z-index-sticky) + 1);\n  }\n\n  .logo-wrapper {\n    display: contents;\n  }\n\n  .application {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n  }\n\n  main {\n    display: block;\n    position: relative;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n  }\n}\n\n:host(.breakpoint-md) {\n  --ix-application-menu-margin-left: 3.25rem;\n\n  aside.slotted {\n    margin-left: var(--ix-application-menu-margin-left);\n  }\n\n  aside.slotted + main {\n    margin-left: 0;\n  }\n\n  aside:not(.slotted) + main {\n    margin-left: var(--ix-application-menu-margin-left);\n  }\n}\n\n:host(.breakpoint-lg) {\n  --ix-application-menu-margin-left: 0;\n}\n\n:host(.breakpoint-sm) {\n  --ix-application-menu-margin-left: 0;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';\nimport {\n  ApplicationLayoutContext,\n  AppSwitchConfiguration,\n} from '../utils/application-layout/context';\nimport { applicationLayoutService } from '../utils/application-layout/service';\nimport { Breakpoint } from '../utils/breakpoints';\nimport { ContextProvider, useContextProvider } from '../utils/context';\nimport { menuController } from '../utils/menu-service/menu-service';\nimport { hasSlottedElements } from '../utils/shadow-dom';\nimport { IxTheme, themeSwitcher } from '../utils/theme-switcher';\nimport { Disposable } from '../utils/typed-event';\n\n/**\n * @since 2.1.0\n */\n@Component({\n  tag: 'ix-application',\n  styleUrl: 'application.scss',\n  shadow: true,\n})\nexport class Application {\n  @Element() hostElement: HTMLIxApplicationElement;\n\n  /**\n   * Application theme\n   */\n  @Prop() theme: IxTheme;\n\n  /**\n   * Use the system appearance dark or light\n   */\n  @Prop() themeSystemAppearance = false;\n\n  /**\n   * Change the responsive layout of the menu structure\n   */\n  @Prop() forceBreakpoint: Breakpoint | undefined;\n  forceLayoutChange(newMode: Breakpoint | undefined) {\n    if (!newMode) {\n      applicationLayoutService.enableBreakpointDetection();\n      return;\n    }\n\n    applicationLayoutService.disableBreakpointDetection();\n    applicationLayoutService.setBreakpoint(newMode);\n  }\n\n  /**\n   * Supported layouts\n   */\n  @Prop() breakpoints: Breakpoint[] = ['sm', 'md', 'lg'];\n  @Watch('breakpoints')\n  onBreakpointsChange(breakpoints: Breakpoint[]) {\n    applicationLayoutService.setBreakpoints(breakpoints);\n  }\n\n  /**\n   * Define application switch configuration\n   */\n  @Prop() appSwitchConfig: AppSwitchConfiguration;\n\n  @State() breakpoint: Breakpoint = 'lg';\n  @State() applicationSidebarSlotted = false;\n\n  private contextProvider: ContextProvider<typeof ApplicationLayoutContext>;\n\n  get menu(): HTMLIxMenuElement | null {\n    return this.hostElement.querySelector('ix-menu');\n  }\n\n  get applicationSidebarSlot() {\n    return this.hostElement.shadowRoot.querySelector(\n      '.application-sidebar slot'\n    ) as HTMLSlotElement;\n  }\n\n  private modeDisposable: Disposable;\n\n  private onContentClick() {\n    if (menuController.isPinned) {\n      return;\n    }\n    this.menu?.toggleMenu(false);\n  }\n\n  componentWillLoad() {\n    applicationLayoutService.setBreakpoints(this.breakpoints);\n\n    this.contextProvider = useContextProvider(\n      this.hostElement,\n      ApplicationLayoutContext,\n      {\n        hideHeader: false,\n        host: 'basic-navigation',\n        sidebar: this.applicationSidebarSlotted,\n        appSwitchConfig: this.appSwitchConfig,\n      }\n    );\n\n    this.modeDisposable = applicationLayoutService.onChange.on((mode) => {\n      this.breakpoint = mode;\n    });\n    this.breakpoint = applicationLayoutService.breakpoint;\n\n    if (this.forceBreakpoint) {\n      this.forceLayoutChange(this.forceBreakpoint);\n    }\n\n    this.changeTheme();\n  }\n\n  disconnectedCallback() {\n    this.modeDisposable?.dispose();\n  }\n\n  @Watch('theme')\n  @Watch('themeSystemAppearance')\n  private changeTheme() {\n    if (!this.theme) {\n      if (this.themeSystemAppearance) {\n        themeSwitcher.setVariant();\n      }\n\n      return;\n    }\n\n    if (themeSwitcher.hasVariantSuffix(this.theme)) {\n      themeSwitcher.setTheme(`theme-${this.theme}`);\n      return;\n    }\n\n    themeSwitcher.setTheme(\n      `theme-${this.theme}-dark`,\n      this.themeSystemAppearance\n    );\n  }\n\n  @Watch('appSwitchConfig')\n  @Watch('applicationSidebarSlotted')\n  onApplicationSidebarChange() {\n    this.contextProvider.emit({\n      hideHeader: false,\n      host: 'basic-navigation',\n      sidebar: this.applicationSidebarSlotted,\n      appSwitchConfig: this.appSwitchConfig,\n    });\n  }\n\n  render() {\n    return (\n      <Host\n        data-role=\"\"\n        class={{\n          [`breakpoint-${this.breakpoint}`]: true,\n        }}\n      >\n        <slot name=\"application-header\"></slot>\n        <div class=\"application\">\n          <slot name=\"menu\"></slot>\n          <aside\n            class={{\n              'application-sidebar': true,\n              slotted: this.applicationSidebarSlotted,\n            }}\n            onClick={() => this.onContentClick()}\n          >\n            <slot\n              name=\"application-sidebar\"\n              onSlotchange={() =>\n                (this.applicationSidebarSlotted = hasSlottedElements(\n                  this.applicationSidebarSlot\n                ))\n              }\n            ></slot>\n          </aside>\n          <main class=\"content\" onClick={() => this.onContentClick()}>\n            <slot></slot>\n          </main>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"+RAAA,MAAMA,EAAiB,k4CACvB,MAAAC,EAAeD,E,MC6BFE,EAAW,M,yEAWU,M,gDAmBI,CAAC,KAAM,KAAM,M,+CAWf,K,+BACG,K,CAzBrC,iBAAAC,CAAkBC,GAChB,IAAKA,EAAS,CACZC,EAAyBC,4BACzB,M,CAGFD,EAAyBE,6BACzBF,EAAyBG,cAAcJ,E,CAQzC,mBAAAK,CAAoBC,GAClBL,EAAyBM,eAAeD,E,CAa1C,QAAIE,GACF,OAAOC,KAAKC,YAAYC,cAAc,U,CAGxC,0BAAIC,GACF,OAAOH,KAAKC,YAAYG,WAAWF,cACjC,4B,CAMI,cAAAG,G,MACN,GAAIC,EAAeC,SAAU,CAC3B,M,EAEFC,EAAAR,KAAKD,QAAI,MAAAS,SAAA,SAAAA,EAAEC,WAAW,M,CAGxB,iBAAAC,GACElB,EAAyBM,eAAeE,KAAKH,aAE7CG,KAAKW,gBAAkBC,EACrBZ,KAAKC,YACLY,EACA,CACEC,WAAY,MACZC,KAAM,mBACNC,QAAShB,KAAKiB,0BACdC,gBAAiBlB,KAAKkB,kBAI1BlB,KAAKmB,eAAiB3B,EAAyB4B,SAASC,IAAIC,IAC1DtB,KAAKuB,WAAaD,CAAI,IAExBtB,KAAKuB,WAAa/B,EAAyB+B,WAE3C,GAAIvB,KAAKwB,gBAAiB,CACxBxB,KAAKV,kBAAkBU,KAAKwB,gB,CAG9BxB,KAAKyB,a,CAGP,oBAAAC,G,OACElB,EAAAR,KAAKmB,kBAAc,MAAAX,SAAA,SAAAA,EAAEmB,S,CAKf,WAAAF,GACN,IAAKzB,KAAK4B,MAAO,CACf,GAAI5B,KAAK6B,sBAAuB,CAC9BC,EAAcC,Y,CAGhB,M,CAGF,GAAID,EAAcE,iBAAiBhC,KAAK4B,OAAQ,CAC9CE,EAAcG,SAAS,SAASjC,KAAK4B,SACrC,M,CAGFE,EAAcG,SACZ,SAASjC,KAAK4B,aACd5B,KAAK6B,sB,CAMT,0BAAAK,GACElC,KAAKW,gBAAgBwB,KAAK,CACxBrB,WAAY,MACZC,KAAM,mBACNC,QAAShB,KAAKiB,0BACdC,gBAAiBlB,KAAKkB,iB,CAI1B,MAAAkB,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,uDACO,GACVC,MAAO,CACL,CAAC,cAAcxC,KAAKuB,cAAe,OAGrCc,EAAA,QAAAE,IAAA,2CAAME,KAAK,uBACXJ,EAAA,OAAAE,IAAA,2CAAKC,MAAM,eACTH,EAAA,QAAAE,IAAA,2CAAME,KAAK,SACXJ,EAAA,SAAAE,IAAA,2CACEC,MAAO,CACL,sBAAuB,KACvBE,QAAS1C,KAAKiB,2BAEhB0B,QAAS,IAAM3C,KAAKK,kBAEpBgC,EAAA,QAAAE,IAAA,2CACEE,KAAK,sBACLG,aAAc,IACX5C,KAAKiB,0BAA4B4B,EAChC7C,KAAKG,2BAKbkC,EAAA,QAAAE,IAAA,2CAAMC,MAAM,UAAUG,QAAS,IAAM3C,KAAKK,kBACxCgC,EAAA,QAAAE,IAAA,+C"}