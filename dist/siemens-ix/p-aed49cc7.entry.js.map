{"version":3,"names":["eventListCss","IxEventListStyle0","EventList","this","mutationObserver","createMutationObserver","onMutation","bind","watchChevron","chevron","handleChevron","componentDidLoad","animated","triggerFadeIn","Number","isNaN","itemHeight","height","convertToRemString","hostElement","querySelectorAll","forEach","item","setCustomHeight","observe","childList","subtree","mutationRecords","triggerFadeOut","then","filter","mutation","type","addedNodes","itemHtml","style","setProperty","Promise","resolve","keyframes","opacity","easing","listElement","shadowRoot","querySelector","animate","duration","fadeOutDuration","finished","listItems","e","i","delay","offset","fadeInDuration","options","iterations","setAttribute","undefined","removeAttribute","render","h","Host","key","class","compact"],"sources":["src/components/event-list/event-list.scss?tag=ix-event-list&encapsulation=shadow","src/components/event-list/event-list.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: block;\n  position: relative;\n\n  ul {\n    list-style: none;\n    padding: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n}\n\n:host(.item-size-l) {\n  --event-list-item-height: 6.5rem;\n  --event-list-item-content-white-space: normal;\n}\n\n:host(.compact) {\n  --event-list-item-border-radius: 0;\n  --event-list-item-margin-bottom: 0;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport { createMutationObserver } from '../utils/mutation-observer';\nimport { convertToRemString } from '../utils/rwd.util';\n\n@Component({\n  tag: 'ix-event-list',\n  styleUrl: 'event-list.scss',\n  shadow: true,\n})\nexport class EventList {\n  private readonly mutationObserver = createMutationObserver(\n    this.onMutation.bind(this)\n  );\n\n  private static readonly fadeOutDuration = 50;\n  private static readonly fadeInDuration = 150;\n\n  @Element() hostElement!: HTMLIxEventListElement;\n\n  /**\n   * Determines the height of list items.\n   * This can either be one of two predefined sizes ('S' or 'L') or an absolute pixel value.\n   * In case a number is supplied it will get converted to rem internally.\n   * Defaults to 'S'.\n   */\n  @Prop() itemHeight: 'S' | 'L' | number = 'S';\n\n  /**\n   * Make event-list items more compact\n   */\n  @Prop() compact = false;\n\n  /**\n   * Animate state change transitions. Defaults to 'true'.\n   */\n  @Prop() animated = true;\n\n  /**\n   * Display a chevron icon in list items. Defaults to 'false'\n   */\n  @Prop() chevron: boolean;\n\n  @Watch('chevron')\n  watchChevron(chevron: boolean | undefined) {\n    this.handleChevron(chevron);\n  }\n\n  componentDidLoad() {\n    if (this.animated) {\n      this.triggerFadeIn();\n    }\n\n    if (!Number.isNaN(Number(this.itemHeight))) {\n      const height = convertToRemString(this.itemHeight as number);\n      this.hostElement\n        .querySelectorAll('ix-event-list-item')\n        .forEach((item) => {\n          this.setCustomHeight(item as HTMLElement, height);\n        });\n    }\n\n    this.handleChevron(this.chevron);\n\n    this.mutationObserver.observe(this.hostElement, {\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  private onMutation(mutationRecords: Array<MutationRecord>) {\n    this.triggerFadeOut().then(() => {\n      if (typeof this.itemHeight === 'number') {\n        const height = convertToRemString(this.itemHeight);\n\n        mutationRecords\n          .filter((mutation) => mutation.type === 'childList')\n          .forEach((mutation) =>\n            mutation.addedNodes.forEach((item) => {\n              const itemHtml = item as HTMLElement;\n\n              this.setCustomHeight(itemHtml, height);\n            })\n          );\n      }\n\n      this.handleChevron(this.chevron);\n\n      this.triggerFadeIn();\n    });\n  }\n\n  private setCustomHeight(item: HTMLElement, height: string) {\n    item.style.setProperty('--event-list-item-height', height);\n  }\n\n  private triggerFadeOut(): Promise<any> {\n    if (!this.animated) {\n      return Promise.resolve();\n    }\n\n    const keyframes = [\n      {\n        opacity: 1,\n        easing: 'ease-in',\n      },\n      { opacity: 0 },\n    ];\n    const listElement = this.hostElement.shadowRoot.querySelector('ul');\n    return listElement.animate(keyframes, {\n      duration: EventList.fadeOutDuration,\n    }).finished;\n  }\n\n  private triggerFadeIn() {\n    if (!this.animated) {\n      return;\n    }\n\n    const listItems = this.hostElement.querySelectorAll('ix-event-list-item');\n    listItems.forEach((e, i) => {\n      const delay = i * 80;\n      const offset = delay / (delay + EventList.fadeInDuration);\n      const keyframes = [\n        { opacity: 0 },\n        { opacity: 0, easing: 'ease-out', offset },\n        { opacity: 1 },\n      ];\n      const options = {\n        duration: EventList.fadeInDuration + delay,\n        iterations: 1,\n      };\n      e.animate(keyframes, options);\n    });\n  }\n\n  private handleChevron(chevron: boolean | undefined): void {\n    const listItems = this.hostElement.querySelectorAll('ix-event-list-item');\n\n    listItems.forEach((e) => {\n      if (chevron) {\n        e.setAttribute('chevron', 'true');\n      } else if (chevron !== undefined) {\n        e.removeAttribute('chevron');\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          'item-size-s': this.itemHeight === 'S',\n          'item-size-l': this.itemHeight === 'L',\n          compact: this.compact,\n        }}\n      >\n        <ul>\n          <slot></slot>\n        </ul>\n      </Host>\n    );\n  }\n}\n"],"mappings":"iIAAA,MAAMA,EAAe,03BACrB,MAAAC,EAAeD,E,MCiBFE,EAAS,M,yBACHC,KAAAC,iBAAmBC,EAClCF,KAAKG,WAAWC,KAAKJ,O,gBAckB,I,aAKvB,M,cAKC,K,uBAQnB,YAAAK,CAAaC,GACXN,KAAKO,cAAcD,E,CAGrB,gBAAAE,GACE,GAAIR,KAAKS,SAAU,CACjBT,KAAKU,e,CAGP,IAAKC,OAAOC,MAAMD,OAAOX,KAAKa,aAAc,CAC1C,MAAMC,EAASC,EAAmBf,KAAKa,YACvCb,KAAKgB,YACFC,iBAAiB,sBACjBC,SAASC,IACRnB,KAAKoB,gBAAgBD,EAAqBL,EAAO,G,CAIvDd,KAAKO,cAAcP,KAAKM,SAExBN,KAAKC,iBAAiBoB,QAAQrB,KAAKgB,YAAa,CAC9CM,UAAW,KACXC,QAAS,M,CAIL,UAAApB,CAAWqB,GACjBxB,KAAKyB,iBAAiBC,MAAK,KACzB,UAAW1B,KAAKa,aAAe,SAAU,CACvC,MAAMC,EAASC,EAAmBf,KAAKa,YAEvCW,EACGG,QAAQC,GAAaA,EAASC,OAAS,cACvCX,SAASU,GACRA,EAASE,WAAWZ,SAASC,IAC3B,MAAMY,EAAWZ,EAEjBnB,KAAKoB,gBAAgBW,EAAUjB,EAAO,K,CAK9Cd,KAAKO,cAAcP,KAAKM,SAExBN,KAAKU,eAAe,G,CAIhB,eAAAU,CAAgBD,EAAmBL,GACzCK,EAAKa,MAAMC,YAAY,2BAA4BnB,E,CAG7C,cAAAW,GACN,IAAKzB,KAAKS,SAAU,CAClB,OAAOyB,QAAQC,S,CAGjB,MAAMC,EAAY,CAChB,CACEC,QAAS,EACTC,OAAQ,WAEV,CAAED,QAAS,IAEb,MAAME,EAAcvC,KAAKgB,YAAYwB,WAAWC,cAAc,MAC9D,OAAOF,EAAYG,QAAQN,EAAW,CACpCO,SAAU5C,EAAU6C,kBACnBC,Q,CAGG,aAAAnC,GACN,IAAKV,KAAKS,SAAU,CAClB,M,CAGF,MAAMqC,EAAY9C,KAAKgB,YAAYC,iBAAiB,sBACpD6B,EAAU5B,SAAQ,CAAC6B,EAAGC,KACpB,MAAMC,EAAQD,EAAI,GAClB,MAAME,EAASD,GAASA,EAAQlD,EAAUoD,gBAC1C,MAAMf,EAAY,CAChB,CAAEC,QAAS,GACX,CAAEA,QAAS,EAAGC,OAAQ,WAAYY,UAClC,CAAEb,QAAS,IAEb,MAAMe,EAAU,CACdT,SAAU5C,EAAUoD,eAAiBF,EACrCI,WAAY,GAEdN,EAAEL,QAAQN,EAAWgB,EAAQ,G,CAIzB,aAAA7C,CAAcD,GACpB,MAAMwC,EAAY9C,KAAKgB,YAAYC,iBAAiB,sBAEpD6B,EAAU5B,SAAS6B,IACjB,GAAIzC,EAAS,CACXyC,EAAEO,aAAa,UAAW,O,MACrB,GAAIhD,IAAYiD,UAAW,CAChCR,EAAES,gBAAgB,U,KAKxB,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACL,cAAe7D,KAAKa,aAAe,IACnC,cAAeb,KAAKa,aAAe,IACnCiD,QAAS9D,KAAK8D,UAGhBJ,EAAA,MAAAE,IAAA,4CACEF,EAAA,QAAAE,IAAA,8C,2FA/IgB7D,EAAA6C,gBAAkB,GAClB7C,EAAAoD,eAAiB,I"}