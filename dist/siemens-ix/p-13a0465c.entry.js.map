{"version":3,"names":["splitButtonCss","IxSplitButtonStyle0","SplitButton","linkTriggerRef","this","triggerElement","dropdownElement","trigger","componentDidLoad","render","buttonAttributes","variant","outline","ghost","disabled","class","h","Host","key","label","Object","assign","icon","onClick","e","buttonClick","emit","ref","r","splitIcon"],"sources":["src/components/split-button/split-button.scss?tag=ix-split-button&encapsulation=shadow","src/components/split-button/split-button.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n@import 'legacy/components/button-group';\n\n:host {\n  @include ix-component;\n  display: inline-block;\n\n  .btn-group {\n    position: relative;\n    display: inline-flex;\n    vertical-align: middle;\n    width: 100%;\n\n    > ix-button:nth-child(1) {\n      width: calc(100% - 2rem);\n    }\n\n    > ix-button:nth-child(2) {\n      width: 2rem;\n    }\n  }\n\n  .middle-gap {\n    gap: 0.125rem;\n  }\n\n  .left-button-border {\n    border-top-width: 0.125rem;\n    border-right-width: 0;\n    border-left-width: 0.125rem;\n    border-bottom-width: 0.125rem;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { ButtonVariant } from '../button/button';\nimport { AlignedPlacement } from '../dropdown/placement';\n\nexport type SplitButtonVariant = ButtonVariant;\n\n@Component({\n  tag: 'ix-split-button',\n  styleUrl: 'split-button.scss',\n  shadow: true,\n})\nexport class SplitButton {\n  @Element() hostElement!: HTMLIxSplitButtonElement;\n\n  /**\n   * Color variant of button\n   */\n  @Prop() variant: SplitButtonVariant = 'primary';\n\n  /**\n   * Button outline variant\n   */\n  @Prop() outline = false;\n\n  /**\n   * Button invisible\n   */\n  @Prop() ghost = false;\n\n  /**\n   * Button label\n   */\n  @Prop() label: string;\n\n  /**\n   * Button icon\n   */\n  @Prop() icon = '';\n\n  /**\n   * Icon of the button on the right\n   */\n  @Prop() splitIcon = 'context-menu';\n\n  /**\n   * Disabled\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Placement of the dropdown\n   */\n  @Prop() placement: AlignedPlacement = 'bottom-start';\n\n  @State() toggle = false;\n\n  /**\n   * Button clicked\n   */\n  @Event() buttonClick: EventEmitter<MouseEvent>;\n\n  private triggerElement: HTMLElement;\n  private dropdownElement: HTMLIxDropdownElement;\n\n  private linkTriggerRef() {\n    if (this.triggerElement && this.dropdownElement) {\n      this.dropdownElement.trigger = this.triggerElement;\n    }\n  }\n\n  componentDidLoad() {\n    this.linkTriggerRef();\n  }\n\n  render() {\n    const buttonAttributes = {\n      variant: this.variant,\n      outline: this.outline,\n      ghost: this.ghost,\n      disabled: this.disabled,\n      class: {\n        'left-button-border': !this.outline,\n      },\n    };\n    return (\n      <Host>\n        <div class={{ 'btn-group': true, 'middle-gap': !this.outline }}>\n          {this.label ? (\n            <ix-button\n              {...buttonAttributes}\n              icon={this.icon}\n              onClick={(e) => this.buttonClick.emit(e)}\n            >\n              {this.label}\n            </ix-button>\n          ) : (\n            <ix-icon-button\n              {...buttonAttributes}\n              icon={this.icon}\n              onClick={(e) => this.buttonClick.emit(e)}\n            ></ix-icon-button>\n          )}\n          <ix-icon-button\n            {...buttonAttributes}\n            ref={(r) => (this.triggerElement = r)}\n            class={'anchor'}\n            icon={this.splitIcon}\n          ></ix-icon-button>\n        </div>\n\n        <ix-dropdown ref={(r) => (this.dropdownElement = r)}>\n          <slot></slot>\n        </ix-dropdown>\n      </Host>\n    );\n  }\n}\n"],"mappings":"gEAAA,MAAMA,EAAiB,qxCACvB,MAAAC,EAAeD,E,MC4BFE,EAAW,M,+EAMgB,U,aAKpB,M,WAKF,M,+BAUD,G,eAKK,e,cAKD,M,eAKmB,e,YAEpB,K,CAUV,cAAAC,GACN,GAAIC,KAAKC,gBAAkBD,KAAKE,gBAAiB,CAC/CF,KAAKE,gBAAgBC,QAAUH,KAAKC,c,EAIxC,gBAAAG,GACEJ,KAAKD,gB,CAGP,MAAAM,GACE,MAAMC,EAAmB,CACvBC,QAASP,KAAKO,QACdC,QAASR,KAAKQ,QACdC,MAAOT,KAAKS,MACZC,SAAUV,KAAKU,SACfC,MAAO,CACL,sBAAuBX,KAAKQ,UAGhC,OACEI,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CAAKH,MAAO,CAAE,YAAa,KAAM,cAAeX,KAAKQ,UAClDR,KAAKe,MACJH,EAAA,YAAAI,OAAAC,OAAA,GACMX,EAAgB,CACpBY,KAAMlB,KAAKkB,KACXC,QAAUC,GAAMpB,KAAKqB,YAAYC,KAAKF,KAErCpB,KAAKe,OAGRH,EAAA,iBAAAI,OAAAC,OAAA,GACMX,EAAgB,CACpBY,KAAMlB,KAAKkB,KACXC,QAAUC,GAAMpB,KAAKqB,YAAYC,KAAKF,MAG1CR,EAAA,iBAAAI,OAAAC,OAAA,CAAAH,IAAA,4CACMR,EAAgB,CACpBiB,IAAMC,GAAOxB,KAAKC,eAAiBuB,EACnCb,MAAO,SACPO,KAAMlB,KAAKyB,cAIfb,EAAA,eAAAE,IAAA,2CAAaS,IAAMC,GAAOxB,KAAKE,gBAAkBsB,GAC/CZ,EAAA,QAAAE,IAAA,8C"}