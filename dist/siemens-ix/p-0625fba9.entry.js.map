{"version":3,"names":["mapNavigationCss","IxMapNavigationStyle0","MapNavigation","menu","this","hostElement","querySelector","menuOverlay","mapNavMenu","shadowRoot","sidebar","overlay","componentDidRender","appendMenu","closeOverlay","componentWillLoad","useContextProvider","ApplicationLayoutContext","hideHeader","host","addEventListener","event","state","detail","toggleSidebar","enableMapExpand","show","undefined","isSidebarOpen","openSidebar","closeSidebar","navigationToggled","emit","toggleMapExpand","anime","targets","duration","defaultTime","marginLeft","opacity","easing","complete","classList","add","begin","remove","openOverlay","name","component","icon","color","slowTime","backdropFilter","translateX","overlayInstance","document","createElement","setAttribute","appendChild","_a","firstChild","checkHasContentHeader","e","nodes","currentTarget","assignedNodes","flatten","hasContentHeader","length","render","h","Host","key","class","applicationName","slot","navigationTitle","hideContextMenu","ghost","size","variant","onClick","_","contextMenuClick","empty","onSlotchange"],"sources":["src/components/map-navigation/map-navigation.scss?tag=ix-map-navigation&encapsulation=shadow","src/components/map-navigation/map-navigation.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/mixins/fonts';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  $appHeaderHeight: 3.5rem;\n  $appHeaderGradientHeight: 4rem;\n  $navHeaderHeight: 11.5rem;\n  $sidebarWidth: 29.75rem;\n\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  .map-nav {\n    display: flex;\n    margin-left: 3.25rem;\n    position: relative;\n    height: 100%;\n    flex-grow: 1;\n    overflow: hidden;\n  }\n\n  .map-nav-sidebar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: $sidebarWidth;\n    max-width: $sidebarWidth;\n    min-width: $sidebarWidth;\n    height: 100%;\n    left: 4rem;\n    background-color: var(--theme-map-navigation--background);\n    border-inline-end: 0.125rem solid\n      var(--theme-map-navigation-separator--background);\n    z-index: 99;\n  }\n\n  .map-nav-sidebar-content {\n    align-items: center;\n    position: relative;\n    overflow: auto;\n    height: 100%;\n    width: 100%;\n\n    .map-nav-sidebar-static-content {\n      @include text-h2;\n      display: flex;\n      justify-content: space-between;\n      margin-top: 0.437rem;\n      margin-bottom: 0.812rem;\n      margin-left: $default-space;\n      margin-right: $default-space;\n    }\n  }\n\n  .map-nav-header {\n    display: flex;\n    position: relative;\n    align-items: center;\n    height: $appHeaderHeight;\n    min-height: $appHeaderHeight;\n    width: 100%;\n\n    .map-nav-header-brand {\n      background-color: var(--theme-map-navigation-background);\n      display: flex;\n      align-items: center;\n      height: 100%;\n      width: 100%;\n      padding: 0 $default-space;\n\n      --theme-app-header--color: var(--theme-map-navigation-header--color);\n      --theme-app-header-logo--color: var(--theme-map-navigation-logo--color);\n\n      button {\n        margin-left: $default-space;\n      }\n    }\n  }\n\n  .map-nav-header-content {\n    display: flex;\n    height: $appHeaderHeight;\n    align-items: center;\n    overflow: hidden;\n    padding: 0 $default-space;\n\n    &.empty {\n      height: 0;\n    }\n  }\n\n  .map-nav-title {\n    @include text-h2();\n\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  .content {\n    display: block;\n    flex-grow: 1;\n    position: relative;\n    height: 100%;\n    overflow: hidden;\n    z-index: calc(var(--theme-z-index-sticky) - 1);\n  }\n\n  ::slotted(ix-menu) {\n    position: absolute;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\nimport anime from 'animejs';\nimport { ApplicationLayoutContext } from '../utils/application-layout/context';\nimport { useContextProvider } from '../utils/context';\n\n@Component({\n  tag: 'ix-map-navigation',\n  styleUrl: 'map-navigation.scss',\n  shadow: true,\n})\nexport class MapNavigation {\n  private static readonly defaultTime = 150;\n  private static readonly slowTime = 500;\n\n  @Element() hostElement: HTMLIxMapNavigationElement;\n\n  /**\n   * Application name\n   */\n  @Prop() applicationName: string;\n\n  /**\n   * Navigation title\n   */\n  @Prop() navigationTitle: string;\n\n  /**\n   * Hide the sidebar context menu button when set to true\n   */\n  @Prop() hideContextMenu = true;\n\n  /**\n   * Navigation toggled\n   */\n  @Event() navigationToggled: EventEmitter<boolean>;\n\n  /**\n   * Context menu clicked\n   */\n  @Event() contextMenuClick: EventEmitter<void>;\n\n  @State() isSidebarOpen = true;\n  @State() hasContentHeader = false;\n\n  get menu() {\n    return this.hostElement.querySelector('ix-menu');\n  }\n\n  get menuOverlay() {\n    return this.hostElement.querySelector('ix-menu-overlay');\n  }\n\n  get mapNavMenu() {\n    return this.hostElement.shadowRoot.querySelector('.map-nav-menu');\n  }\n\n  get sidebar() {\n    return this.hostElement.shadowRoot.querySelector('.map-nav-sidebar');\n  }\n\n  get overlay() {\n    return this.hostElement.shadowRoot.querySelector('#overlay');\n  }\n\n  componentDidRender() {\n    this.appendMenu();\n    this.closeOverlay();\n  }\n\n  componentWillLoad() {\n    useContextProvider(this.hostElement, ApplicationLayoutContext, {\n      hideHeader: false,\n      host: 'map-navigation',\n    });\n  }\n\n  private appendMenu() {\n    this.menu.addEventListener(\n      'mapExpandChange',\n      (event: CustomEvent<boolean>) => {\n        const state = !event.detail;\n        this.toggleSidebar(state);\n      }\n    );\n    this.menu.enableMapExpand = true;\n  }\n\n  /**\n   * Change the visibility of the sidebar\n   *\n   * @param show new visibility state\n   * @since 1.6.0\n   */\n  @Method()\n  async toggleSidebar(show?: boolean) {\n    if (show !== undefined) {\n      this.isSidebarOpen = show;\n    } else {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    }\n\n    if (this.isSidebarOpen) {\n      this.openSidebar();\n    } else {\n      this.closeSidebar();\n    }\n\n    this.navigationToggled.emit(this.isSidebarOpen);\n    this.menu.toggleMapExpand(this.isSidebarOpen);\n  }\n\n  private closeSidebar() {\n    anime({\n      targets: this.sidebar,\n      duration: MapNavigation.defaultTime,\n      marginLeft: [0, '-29.75rem'],\n      opacity: [1, 0],\n      easing: 'easeInSine',\n      complete: () => {\n        this.sidebar.classList.add('d-none');\n      },\n    });\n  }\n\n  private openSidebar() {\n    anime({\n      targets: this.sidebar,\n      duration: MapNavigation.defaultTime,\n      marginLeft: ['-29.75rem', 0],\n      opacity: [0, 1],\n      easing: 'easeOutSine',\n      begin: () => {\n        this.sidebar.classList.remove('d-none');\n      },\n    });\n  }\n\n  /**\n   * Open a overlay inside content area\n   * @deprecated Will be removed in 2.0.0. Use slot based approach\n   *\n   * @param name\n   * @param component\n   * @param icon\n   * @param color\n   */\n  @Method()\n  async openOverlay(\n    name: string,\n    component: HTMLElement,\n    icon?: string,\n    color?: string\n  ) {\n    anime({\n      targets: this.overlay,\n      duration: MapNavigation.slowTime,\n      backdropFilter: [0, 'blur(1rem)'],\n      translateX: ['-4rem', 0],\n      opacity: [0, 1],\n      easing: 'easeOutSine',\n      begin: () => {\n        this.overlay.classList.remove('d-none');\n      },\n    });\n\n    const overlayInstance = document.createElement('ix-map-navigation-overlay');\n    overlayInstance.setAttribute('color', color);\n    overlayInstance.setAttribute('name', name);\n    overlayInstance.setAttribute('icon', icon);\n    overlayInstance.setAttribute('slot', 'overlay');\n    overlayInstance.addEventListener('closeClick', () => this.closeOverlay());\n    overlayInstance.appendChild(component);\n    this.hostElement.appendChild(overlayInstance);\n  }\n\n  /**\n   * Close current shown overlay\n   * @deprecated Will be removed in 2.0.0. Use slot based approach\n   */\n  @Method()\n  async closeOverlay() {\n    anime({\n      targets: this.overlay,\n      duration: MapNavigation.slowTime,\n      backdropFilter: ['blur(1rem)', 0],\n      translateX: [0, '-4rem'],\n      opacity: [1, 0],\n      easing: 'easeInSine',\n      complete: () => {\n        if (!this.overlay) {\n          return;\n        }\n        this.overlay.firstChild?.remove();\n        this.overlay.classList.add('d-none');\n      },\n    });\n  }\n\n  private checkHasContentHeader(e: Event) {\n    const nodes = (e.currentTarget as HTMLSlotElement).assignedNodes({\n      flatten: true,\n    });\n\n    this.hasContentHeader = nodes?.length !== 0;\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot name=\"menu\"></slot>\n        <div class=\"map-nav\">\n          <div class=\"map-nav-sidebar\">\n            <div class=\"map-nav-header\">\n              <ix-application-header\n                name={this.applicationName}\n                class=\"map-nav-header-brand\"\n              >\n                <slot slot=\"logo\" name=\"logo\"></slot>\n              </ix-application-header>\n            </div>\n            <div class=\"map-nav-sidebar-content\">\n              <div class=\"map-nav-sidebar-static-content\">\n                <div class=\"map-nav-title\">{this.navigationTitle}</div>\n                {this.hideContextMenu ? (\n                  ''\n                ) : (\n                  <ix-icon-button\n                    icon={'context-menu'}\n                    ghost\n                    size=\"24\"\n                    variant=\"secondary\"\n                    onClick={(_) => this.contextMenuClick.emit()}\n                  ></ix-icon-button>\n                )}\n              </div>\n              <div class=\"map-nav-sidebar-user-content\">\n                <slot name=\"sidebar-content\"></slot>\n              </div>\n            </div>\n          </div>\n          <div class=\"content\">\n            <div\n              class={{\n                'map-nav-header-content': true,\n                'bg-2': true,\n                empty: !this.hasContentHeader,\n              }}\n            >\n              <slot\n                name=\"content-header\"\n                onSlotchange={(e) => this.checkHasContentHeader(e)}\n              ></slot>\n            </div>\n            <main>\n              <slot></slot>\n              <slot name=\"overlay\"></slot>\n            </main>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}