{"version":3,"names":["validationTooltipCss","IxValidationTooltipStyle0","ValidationTooltip","this","onSubmitBind","onSubmit","bind","onInputFocusBind","onInputFocus","arrow","hostElement","shadowRoot","querySelector","inputElement","formElement","_a","form","tooltipElement","destroyAutoUpdate","style","display","autoUpdateCleanup","applyTooltipPosition","positionConfig","strategy","middleware","inline","shift","offset","mainAxis","suppressAutomaticPlacement","push","flip","fallbackStrategy","placement","autoUpdate","async","element","computeResponse","computePosition","middlewareData","x","y","arrowPosition","Object","assign","left","top","tooltipPosition","ancestorResize","ancestorScroll","elementResize","componentDidLoad","Error","addEventListener","observer","MutationObserver","classList","contains","isInputValid","validationChanged","observe","childList","subtree","attributes","attributeFilter","validity","valid","disconnectedCallback","disconnect","_b","removeEventListener","_c","render","h","Host","key","role","position","transform","Math","round","class","message","name","id"],"sources":["src/components/validation-tooltip/validation-tooltip.scss?tag=ix-validation-tooltip&encapsulation=shadow","src/components/validation-tooltip/validation-tooltip.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/fonts';\n\n:host {\n  display: inline-block;\n  position: relative;\n  $padding: 5px;\n  width: 100%;\n\n  .validation-tooltip {\n    background-color: var(--theme-tootlip--background);\n    color: var(--theme-tooltip--color);\n    padding: $padding 10px;\n    border-radius: 4px;\n    font-size: 13px;\n    border: 1px solid var(--theme-tooltip--border-color);\n    box-shadow: 0 0 2px 0 rgba(0, 0, 40, 0.1), 0 4px 8px 0 rgba(0, 0, 40, 0.1),\n      0 12px 18px 0 rgba(0, 0, 40, 0.1);\n\n    #arrow,\n    #arrow::before {\n      position: absolute;\n      width: 8px;\n      height: 8px;\n      background: inherit;\n    }\n\n    #arrow {\n      visibility: hidden;\n    }\n\n    #arrow::before {\n      visibility: visible;\n      content: '';\n      transform: rotate(45deg);\n      background-color: var(--theme-tootlip--background);\n    }\n  }\n\n  .validation-tooltip > #arrow {\n    bottom: -5px;\n\n    &::before {\n      border-right: 1px solid var(--theme-tooltip--border-color);\n      border-bottom: 1px solid var(--theme-tooltip--border-color);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {\n  arrow,\n  autoUpdate,\n  computePosition,\n  ComputePositionConfig,\n  flip,\n  inline,\n  offset,\n  shift,\n} from '@floating-ui/dom';\nimport { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { Side } from '../dropdown/placement';\n\ntype Position = { x: number; y: number };\n\n/**\n * @slot tooltip-message - Custom tooltip message with html support\n */\n@Component({\n  tag: 'ix-validation-tooltip',\n  styleUrl: 'validation-tooltip.scss',\n  shadow: true,\n})\nexport class ValidationTooltip {\n  @Element() hostElement: HTMLIxValidationTooltipElement;\n\n  /**\n   * Message of the tooltip\n   */\n  @Prop() message: string;\n\n  /**\n   * Placement of the tooltip\n   */\n  @Prop() placement: Side = 'top';\n\n  /**\n   * Suppress the automatic placement of the dropdown.\n   *\n   * @since 2.0.0\n   */\n  @Prop() suppressAutomaticPlacement = false;\n\n  @State() isInputValid = true;\n  @State() tooltipPosition: Position;\n  @State() arrowPosition: Position;\n\n  private onSubmitBind = this.onSubmit.bind(this);\n  private onInputFocusBind = this.onInputFocus.bind(this);\n  private autoUpdateCleanup: () => void;\n  private observer: MutationObserver;\n\n  get arrow() {\n    return this.hostElement.shadowRoot.querySelector('#arrow') as HTMLElement;\n  }\n\n  get inputElement() {\n    return this.hostElement.querySelector('input');\n  }\n\n  get formElement() {\n    return this.inputElement?.form;\n  }\n\n  get tooltipElement(): HTMLElement {\n    return this.hostElement.shadowRoot.querySelector('.validation-tooltip');\n  }\n\n  private destroyAutoUpdate() {\n    if (this.tooltipElement) {\n      this.tooltipElement.style.display = 'none';\n    }\n\n    if (this.autoUpdateCleanup) {\n      this.autoUpdateCleanup();\n    }\n  }\n\n  private applyTooltipPosition() {\n    this.tooltipElement.style.display = 'block';\n\n    let positionConfig: Partial<ComputePositionConfig> = {\n      strategy: 'fixed',\n      middleware: [\n        inline(),\n        shift(),\n        offset({\n          mainAxis: 8,\n        }),\n      ],\n    };\n\n    if (!this.suppressAutomaticPlacement) {\n      positionConfig.middleware.push(\n        flip({ fallbackStrategy: 'initialPlacement' })\n      );\n    }\n    positionConfig.placement = this.placement;\n\n    this.autoUpdateCleanup = autoUpdate(\n      this.inputElement,\n      this.tooltipElement,\n      async () => {\n        positionConfig.middleware = [\n          ...positionConfig.middleware,\n          arrow({\n            element: this.arrow,\n          }),\n        ];\n        const computeResponse = await computePosition(\n          this.inputElement,\n          this.tooltipElement,\n          positionConfig\n        );\n\n        if (computeResponse.middlewareData.arrow) {\n          const { x, y } = computeResponse.middlewareData.arrow;\n          this.arrowPosition = {\n            x,\n            y,\n          };\n          Object.assign(this.arrow.style, {\n            left: x != null ? `${x}px` : '',\n            top: y != null ? `${y}px` : '',\n          });\n        }\n\n        this.tooltipPosition = {\n          x: computeResponse.x,\n          y: computeResponse.y,\n        };\n      },\n      {\n        ancestorResize: true,\n        ancestorScroll: true,\n        elementResize: true,\n      }\n    );\n  }\n\n  componentDidLoad() {\n    if (!this.inputElement) {\n      throw Error(\n        'Validation tooltip is only working with an direct input child.'\n      );\n    }\n\n    if (!this.formElement) {\n      throw Error('Validation tooltip is only working with an form element.');\n    }\n\n    this.formElement.addEventListener('submit', this.onSubmitBind);\n    this.inputElement.addEventListener('focus', this.onInputFocusBind);\n\n    this.observer = new MutationObserver(() => {\n      if (this.inputElement.classList.contains('is-invalid')) {\n        this.isInputValid = false;\n        this.validationChanged();\n      }\n    });\n\n    this.observer.observe(this.inputElement, {\n      childList: false,\n      subtree: false,\n      attributes: true,\n      attributeFilter: ['class'],\n    });\n  }\n\n  private onInputFocus() {\n    this.isInputValid = true;\n  }\n\n  private onSubmit() {\n    if (this.formElement.classList.contains('needs-validation')) {\n      this.isInputValid = this.inputElement.validity.valid;\n    }\n  }\n\n  disconnectedCallback() {\n    this.observer?.disconnect();\n    this.destroyAutoUpdate();\n\n    this.formElement?.removeEventListener('submit', this.onSubmitBind);\n    this.inputElement?.removeEventListener('focus', this.onInputFocusBind);\n  }\n\n  @Watch('isInputValid')\n  validationChanged() {\n    if (!this.isInputValid) {\n      this.applyTooltipPosition();\n    } else {\n      this.destroyAutoUpdate();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <div\n          role=\"tooltip\"\n          style={{\n            display: 'none',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            transform: `translate(${Math.round(\n              this.tooltipPosition?.x || 0\n            )}px,${Math.round(this.tooltipPosition?.y || 0)}px)`,\n          }}\n          class=\"validation-tooltip text-default\"\n        >\n          {this.message}\n          <slot name=\"tooltip-message\"></slot>\n          <div id=\"arrow\"></div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}