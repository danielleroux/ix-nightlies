{"version":3,"names":["paneLayoutCss","IxPaneLayoutStyle0","Panes","this","panes","currentPanes","hostElement","querySelectorAll","componentWillLoad","paneElements","length","observer","MutationObserver","mutations","_a","addedNodes","item","nodeName","_b","removedNodes","observe","childList","isMobile","matchBreakpoint","applicationLayoutService","onChange","on","componentDidLoad","setPanes","disconnectedCallback","disconnect","setPaneVariant","pane","ignoreLayoutSettings","variant","setPaneBorder","borderless","hasVisibleLeftPane","find","slot","hideOnCollapse","layout","composition","setPaneZIndex","isTop","isBottom","isLeft","isRight","zIndex","style","toString","forEach","push","floating","closeFloatingPanes","expanded","configurePanes","topCount","bottomCount","leftCount","rightCount","undefined","forceUpdate","onSlotChanged","onCollapsibleChanged","event","detail","currentSlot","onVariantChanged","onPaneElementsChange","onVariableChange","onBorderChange","onLayoutChange","onMobileChange","hasPadding","hasPaddingMobile","slotExists","isFloating","render","h","Host","key","class","row","name","col","onClick","minHeight","display"],"sources":["src/components/pane-layout/pane-layout.scss?tag=ix-pane-layout&encapsulation=shadow","src/components/pane-layout/pane-layout.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/hover';\n@import 'mixins/shadow-dom/component';\n\n@mixin set-padding($composition) {\n  @if $composition {\n    padding-#{$composition}: 2.5rem;\n  }\n}\n\n@mixin set-absolute($composition) {\n  @if $composition {\n    position: absolute;\n    #{$composition}: 0;\n  }\n}\n\n:host {\n  @include ix-component;\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  .side-panes-wrapper {\n    height: 100%;\n    width: 100%;\n  }\n\n  .row {\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    position: relative;\n  }\n\n  .col {\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: relative;\n  }\n\n  .content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n  }\n\n  .absolute-top {\n    width: 100%;\n    @include set-absolute(top);\n  }\n\n  .absolute-bottom {\n    width: 100%;\n    @include set-absolute(bottom);\n  }\n\n  .absolute-left {\n    height: 100%;\n    @include set-absolute(left);\n  }\n\n  .absolute-right {\n    height: 100%;\n    @include set-absolute(right);\n  }\n\n  .padding-top {\n    @include set-padding(top);\n  }\n\n  .padding-bottom {\n    @include set-padding(bottom);\n  }\n\n  .padding-left {\n    @include set-padding(left);\n  }\n\n  .padding-right {\n    @include set-padding(right);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  forceUpdate,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { Composition } from '../pane/pane';\nimport { applicationLayoutService } from '../utils/application-layout';\nimport { matchBreakpoint } from '../utils/breakpoints';\n\n/**\n * @since 2.1.0\n */\n@Component({\n  tag: 'ix-pane-layout',\n  styleUrl: 'pane-layout.scss',\n  shadow: true,\n})\nexport class Panes {\n  @Element() hostElement: HTMLIxPaneLayoutElement;\n\n  /**\n   * Choose the layout of the panes.\n   * When set to 'full-vertical' the vertical panes (left, right) will get the full height.\n   * When set to 'full-horizontal' the horizontal panes (top, bottom) will get the full width.\n   */\n  @Prop() layout: 'full-vertical' | 'full-horizontal' = 'full-vertical';\n\n  /**\n   * Set the default variant for all panes in the layout\n   */\n  @Prop() variant: 'floating' | 'inline' = 'inline';\n\n  /**\n   * Set the default border state for all panes in the layout\n   */\n  @Prop() borderless: boolean = false;\n\n  @State() private isMobile = false;\n  @State() private paneElements = 0;\n\n  private panes: Array<{\n    slot: string;\n    hideOnCollapse: boolean;\n    floating: boolean;\n  }> = [];\n\n  private observer: MutationObserver;\n\n  get currentPanes() {\n    return this.hostElement.querySelectorAll('ix-pane');\n  }\n\n  componentWillLoad() {\n    this.paneElements = this.currentPanes.length;\n\n    this.observer = new MutationObserver((mutations) => {\n      if (mutations[0].addedNodes.item(0)?.nodeName === 'IX-PANE') {\n        this.paneElements += 1;\n      } else if (mutations[0].removedNodes.item(0)?.nodeName === 'IX-PANE') {\n        this.paneElements -= 1;\n      }\n    });\n    this.observer.observe(this.hostElement, {\n      childList: true,\n    });\n\n    this.isMobile = matchBreakpoint('sm');\n    applicationLayoutService.onChange.on(() => {\n      this.isMobile = matchBreakpoint('sm');\n    });\n  }\n\n  componentDidLoad() {\n    this.setPanes(this.currentPanes);\n  }\n\n  disconnectedCallback() {\n    this.observer?.disconnect();\n  }\n\n  private setPaneVariant(pane: HTMLIxPaneElement) {\n    if (!pane.ignoreLayoutSettings) {\n      pane.variant = this.variant;\n    }\n  }\n\n  private setPaneBorder(pane: HTMLIxPaneElement) {\n    if (!pane.ignoreLayoutSettings) {\n      if (this.borderless) {\n        pane.borderless = true;\n      } else {\n        const hasVisibleLeftPane = !!this.panes.find(\n          (pane) => pane.slot === 'left' && !pane.hideOnCollapse\n        );\n        if (\n          pane.variant === 'floating' &&\n          this.layout === 'full-vertical' &&\n          hasVisibleLeftPane &&\n          (pane.composition === 'top' || pane.composition === 'bottom')\n        ) {\n          pane.borderless = true;\n        } else {\n          pane.borderless = false;\n        }\n      }\n    }\n  }\n\n  private setPaneZIndex(pane: HTMLIxPaneElement) {\n    const isTop = pane.slot === 'top';\n    const isBottom = pane.slot === 'bottom';\n    const isLeft = pane.slot === 'left';\n    const isRight = pane.slot === 'right';\n\n    let zIndex = 1;\n    if (this.isMobile) {\n      if (isBottom || isTop) {\n        zIndex = 3;\n      }\n    } else {\n      if (this.layout === 'full-vertical') {\n        if (isLeft || isRight) {\n          zIndex = 3;\n        }\n      } else {\n        if (isBottom || isTop) {\n          zIndex = 3;\n        }\n      }\n    }\n    pane.style.zIndex = zIndex.toString();\n  }\n\n  private setPanes(panes: NodeListOf<HTMLIxPaneElement>) {\n    this.panes = [];\n    panes.forEach((pane) => {\n      this.panes.push({\n        slot: pane.slot,\n        hideOnCollapse: pane.hideOnCollapse,\n        floating: pane.variant === 'floating',\n      });\n    });\n  }\n\n  private closeFloatingPanes() {\n    this.currentPanes.forEach((pane) => {\n      if (pane.expanded && pane.variant === 'floating') {\n        pane.expanded = false;\n      }\n    });\n  }\n\n  private configurePanes() {\n    let topCount = 0;\n    let bottomCount = 0;\n    let leftCount = 0;\n    let rightCount = 0;\n\n    this.currentPanes.forEach((pane) => {\n      const isTop = pane.slot === 'top';\n      const isBottom = pane.slot === 'bottom';\n      const isLeft = pane.slot === 'left';\n      const isRight = pane.slot === 'right';\n\n      if (isLeft) {\n        if (leftCount) {\n          pane.slot = undefined;\n          return;\n        }\n        leftCount++;\n      } else if (isRight) {\n        if (rightCount) {\n          pane.slot = undefined;\n          return;\n        }\n        rightCount++;\n      } else if (isTop) {\n        if (topCount) {\n          pane.slot = undefined;\n          return;\n        }\n        topCount++;\n      } else if (isBottom) {\n        if (bottomCount) {\n          pane.slot = undefined;\n          return;\n        }\n        bottomCount++;\n      } else {\n        pane.slot = undefined;\n        return;\n      }\n\n      this.setPaneVariant(pane);\n      this.setPaneBorder(pane);\n      this.setPaneZIndex(pane);\n    });\n\n    this.setPanes(this.currentPanes);\n    forceUpdate(this.hostElement);\n  }\n\n  @Listen('slotChanged')\n  onSlotChanged() {\n    this.configurePanes();\n  }\n\n  @Listen('hideOnCollapseChanged')\n  onCollapsibleChanged(event: CustomEvent) {\n    const { slot, hideOnCollapse } = event.detail;\n\n    this.panes.forEach((currentSlot) => {\n      if (currentSlot.slot === slot) {\n        currentSlot.hideOnCollapse = hideOnCollapse;\n      }\n    });\n\n    forceUpdate(this.hostElement);\n  }\n\n  @Listen('variantChanged')\n  onVariantChanged(event: CustomEvent) {\n    const { slot, variant } = event.detail;\n\n    this.panes.forEach((currentSlot) => {\n      if (currentSlot.slot === slot) {\n        currentSlot.floating = variant === 'floating';\n      }\n    });\n\n    forceUpdate(this.hostElement);\n  }\n\n  @Watch('paneElements')\n  onPaneElementsChange() {\n    this.configurePanes();\n  }\n\n  @Watch('variant')\n  onVariableChange() {\n    this.currentPanes.forEach((pane) => {\n      this.setPaneVariant(pane);\n      this.setPaneBorder(pane);\n    });\n\n    this.setPanes(this.currentPanes);\n    forceUpdate(this.hostElement);\n  }\n\n  @Watch('borderless')\n  onBorderChange() {\n    this.currentPanes.forEach((pane) => {\n      this.setPaneBorder(pane);\n    });\n  }\n\n  @Watch('layout')\n  onLayoutChange() {\n    this.currentPanes.forEach((pane) => {\n      this.setPaneBorder(pane);\n      this.setPaneZIndex(pane);\n    });\n  }\n\n  @Watch('isMobile')\n  onMobileChange() {\n    this.currentPanes.forEach((pane) => {\n      this.setPaneZIndex(pane);\n    });\n  }\n\n  private hasPadding(composition: Composition) {\n    const pane = this.panes.find((pane) => pane.slot === composition);\n    return pane ? !pane.hideOnCollapse && pane.floating : false;\n  }\n\n  private hasPaddingMobile(composition: Composition) {\n    const pane = this.panes.find((pane) => pane.slot === composition);\n    return pane && !pane.hideOnCollapse;\n  }\n\n  private slotExists(composition: Composition) {\n    const pane = this.panes.find((pane) => pane.slot === composition);\n    return !!pane;\n  }\n\n  private isFloating(composition: Composition) {\n    const pane = this.panes.find((pane) => pane.slot === composition);\n    return pane ? pane.floating : false;\n  }\n\n  render() {\n    return (\n      <Host>\n        {!this.isMobile ? (\n          this.layout == 'full-vertical' ? (\n            <div class=\"side-panes-wrapper\">\n              <div\n                class={{\n                  row: true,\n                  'padding-left': this.hasPadding('left'),\n                  'padding-right': this.hasPadding('right'),\n                }}\n              >\n                <div\n                  key=\"left\"\n                  class={{ 'absolute-left': this.isFloating('left') }}\n                >\n                  <slot name=\"left\"></slot>\n                </div>\n                <div\n                  class={{\n                    col: true,\n                    'padding-top': this.hasPadding('top'),\n                    'padding-bottom': this.hasPadding('bottom'),\n                  }}\n                >\n                  <div\n                    key=\"top\"\n                    class={{ 'absolute-top': this.isFloating('top') }}\n                  >\n                    <slot name=\"top\"></slot>\n                  </div>\n                  <div\n                    key=\"content\"\n                    class=\"content\"\n                    onClick={() => this.closeFloatingPanes()}\n                  >\n                    <slot name=\"content\"></slot>\n                  </div>\n                  <div\n                    key=\"bottom\"\n                    class={{ 'absolute-bottom': this.isFloating('bottom') }}\n                  >\n                    <slot name=\"bottom\"></slot>\n                  </div>\n                </div>\n                <div\n                  key=\"right\"\n                  class={{ 'absolute-right': this.isFloating('right') }}\n                >\n                  <slot name=\"right\"></slot>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div class=\"side-panes-wrapper\">\n              <div\n                class={{\n                  col: true,\n                  'padding-top': this.hasPadding('top'),\n                  'padding-bottom': this.hasPadding('bottom'),\n                }}\n              >\n                <div\n                  key=\"top\"\n                  class={{ 'absolute-top': this.isFloating('top') }}\n                >\n                  <slot name=\"top\"></slot>\n                </div>\n                <div\n                  class={{\n                    row: true,\n                    'padding-left': this.hasPadding('left'),\n                    'padding-right': this.hasPadding('right'),\n                  }}\n                >\n                  <div\n                    key=\"left\"\n                    class={{ 'absolute-left': this.isFloating('left') }}\n                  >\n                    <slot name=\"left\"></slot>\n                  </div>\n                  <div\n                    key=\"content\"\n                    class=\"content\"\n                    onClick={() => this.closeFloatingPanes()}\n                  >\n                    <slot name=\"content\"></slot>\n                  </div>\n                  <div\n                    key=\"right\"\n                    class={{ 'absolute-right': this.isFloating('right') }}\n                  >\n                    <slot name=\"right\"></slot>\n                  </div>\n                </div>\n                <div\n                  key=\"bottom\"\n                  class={{ 'absolute-bottom': this.isFloating('bottom') }}\n                >\n                  <slot name=\"bottom\"></slot>\n                </div>\n              </div>\n            </div>\n          )\n        ) : (\n          <div class=\"col\">\n            <div\n              key=\"top\"\n              style={{\n                minHeight: this.hasPaddingMobile('top') ? '48px' : '0',\n                display: this.slotExists('top') ? 'block' : 'none',\n              }}\n            >\n              <slot name=\"top\"></slot>\n            </div>\n            <div\n              key=\"left\"\n              style={{\n                minHeight: this.hasPaddingMobile('left') ? '48px' : '0',\n                display: this.slotExists('left') ? 'block' : 'none',\n              }}\n            >\n              <slot name=\"left\"></slot>\n            </div>\n            <div\n              key=\"content\"\n              class=\"content\"\n              onClick={() => this.closeFloatingPanes()}\n            >\n              <slot name=\"content\"></slot>\n            </div>\n            <div\n              key=\"right\"\n              style={{\n                minHeight: this.hasPaddingMobile('right') ? '48px' : '0',\n                display: this.slotExists('right') ? 'block' : 'none',\n              }}\n            >\n              <slot name=\"right\"></slot>\n            </div>\n            <div\n              key=\"bottom\"\n              style={{\n                minHeight: this.hasPaddingMobile('bottom') ? '48px' : '0',\n                display: this.slotExists('bottom') ? 'block' : 'none',\n              }}\n            >\n              <slot name=\"bottom\"></slot>\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"gKAAA,MAAMA,EAAgB,q5CACtB,MAAAC,EAAeD,E,MC+BFE,EAAK,M,yBAuBRC,KAAAC,MAIH,G,YAnBiD,gB,aAKb,S,gBAKX,M,cAEF,M,kBACI,C,CAUhC,gBAAIC,GACF,OAAOF,KAAKG,YAAYC,iBAAiB,U,CAG3C,iBAAAC,GACEL,KAAKM,aAAeN,KAAKE,aAAaK,OAEtCP,KAAKQ,SAAW,IAAIC,kBAAkBC,I,QACpC,KAAIC,EAAAD,EAAU,GAAGE,WAAWC,KAAK,MAAE,MAAAF,SAAA,SAAAA,EAAEG,YAAa,UAAW,CAC3Dd,KAAKM,cAAgB,C,MAChB,KAAIS,EAAAL,EAAU,GAAGM,aAAaH,KAAK,MAAE,MAAAE,SAAA,SAAAA,EAAED,YAAa,UAAW,CACpEd,KAAKM,cAAgB,C,KAGzBN,KAAKQ,SAASS,QAAQjB,KAAKG,YAAa,CACtCe,UAAW,OAGblB,KAAKmB,SAAWC,EAAgB,MAChCC,EAAyBC,SAASC,IAAG,KACnCvB,KAAKmB,SAAWC,EAAgB,KAAK,G,CAIzC,gBAAAI,GACExB,KAAKyB,SAASzB,KAAKE,a,CAGrB,oBAAAwB,G,OACEf,EAAAX,KAAKQ,YAAQ,MAAAG,SAAA,SAAAA,EAAEgB,Y,CAGT,cAAAC,CAAeC,GACrB,IAAKA,EAAKC,qBAAsB,CAC9BD,EAAKE,QAAU/B,KAAK+B,O,EAIhB,aAAAC,CAAcH,GACpB,IAAKA,EAAKC,qBAAsB,CAC9B,GAAI9B,KAAKiC,WAAY,CACnBJ,EAAKI,WAAa,I,KACb,CACL,MAAMC,IAAuBlC,KAAKC,MAAMkC,MACrCN,GAASA,EAAKO,OAAS,SAAWP,EAAKQ,iBAE1C,GACER,EAAKE,UAAY,YACjB/B,KAAKsC,SAAW,iBAChBJ,IACCL,EAAKU,cAAgB,OAASV,EAAKU,cAAgB,UACpD,CACAV,EAAKI,WAAa,I,KACb,CACLJ,EAAKI,WAAa,K,IAMlB,aAAAO,CAAcX,GACpB,MAAMY,EAAQZ,EAAKO,OAAS,MAC5B,MAAMM,EAAWb,EAAKO,OAAS,SAC/B,MAAMO,EAASd,EAAKO,OAAS,OAC7B,MAAMQ,EAAUf,EAAKO,OAAS,QAE9B,IAAIS,EAAS,EACb,GAAI7C,KAAKmB,SAAU,CACjB,GAAIuB,GAAYD,EAAO,CACrBI,EAAS,C,MAEN,CACL,GAAI7C,KAAKsC,SAAW,gBAAiB,CACnC,GAAIK,GAAUC,EAAS,CACrBC,EAAS,C,MAEN,CACL,GAAIH,GAAYD,EAAO,CACrBI,EAAS,C,GAIfhB,EAAKiB,MAAMD,OAASA,EAAOE,U,CAGrB,QAAAtB,CAASxB,GACfD,KAAKC,MAAQ,GACbA,EAAM+C,SAASnB,IACb7B,KAAKC,MAAMgD,KAAK,CACdb,KAAMP,EAAKO,KACXC,eAAgBR,EAAKQ,eACrBa,SAAUrB,EAAKE,UAAY,YAC3B,G,CAIE,kBAAAoB,GACNnD,KAAKE,aAAa8C,SAASnB,IACzB,GAAIA,EAAKuB,UAAYvB,EAAKE,UAAY,WAAY,CAChDF,EAAKuB,SAAW,K,KAKd,cAAAC,GACN,IAAIC,EAAW,EACf,IAAIC,EAAc,EAClB,IAAIC,EAAY,EAChB,IAAIC,EAAa,EAEjBzD,KAAKE,aAAa8C,SAASnB,IACzB,MAAMY,EAAQZ,EAAKO,OAAS,MAC5B,MAAMM,EAAWb,EAAKO,OAAS,SAC/B,MAAMO,EAASd,EAAKO,OAAS,OAC7B,MAAMQ,EAAUf,EAAKO,OAAS,QAE9B,GAAIO,EAAQ,CACV,GAAIa,EAAW,CACb3B,EAAKO,KAAOsB,UACZ,M,CAEFF,G,MACK,GAAIZ,EAAS,CAClB,GAAIa,EAAY,CACd5B,EAAKO,KAAOsB,UACZ,M,CAEFD,G,MACK,GAAIhB,EAAO,CAChB,GAAIa,EAAU,CACZzB,EAAKO,KAAOsB,UACZ,M,CAEFJ,G,MACK,GAAIZ,EAAU,CACnB,GAAIa,EAAa,CACf1B,EAAKO,KAAOsB,UACZ,M,CAEFH,G,KACK,CACL1B,EAAKO,KAAOsB,UACZ,M,CAGF1D,KAAK4B,eAAeC,GACpB7B,KAAKgC,cAAcH,GACnB7B,KAAKwC,cAAcX,EAAK,IAG1B7B,KAAKyB,SAASzB,KAAKE,cACnByD,EAAY3D,KAAKG,Y,CAInB,aAAAyD,GACE5D,KAAKqD,gB,CAIP,oBAAAQ,CAAqBC,GACnB,MAAM1B,KAAEA,EAAIC,eAAEA,GAAmByB,EAAMC,OAEvC/D,KAAKC,MAAM+C,SAASgB,IAClB,GAAIA,EAAY5B,OAASA,EAAM,CAC7B4B,EAAY3B,eAAiBA,C,KAIjCsB,EAAY3D,KAAKG,Y,CAInB,gBAAA8D,CAAiBH,GACf,MAAM1B,KAAEA,EAAIL,QAAEA,GAAY+B,EAAMC,OAEhC/D,KAAKC,MAAM+C,SAASgB,IAClB,GAAIA,EAAY5B,OAASA,EAAM,CAC7B4B,EAAYd,SAAWnB,IAAY,U,KAIvC4B,EAAY3D,KAAKG,Y,CAInB,oBAAA+D,GACElE,KAAKqD,gB,CAIP,gBAAAc,GACEnE,KAAKE,aAAa8C,SAASnB,IACzB7B,KAAK4B,eAAeC,GACpB7B,KAAKgC,cAAcH,EAAK,IAG1B7B,KAAKyB,SAASzB,KAAKE,cACnByD,EAAY3D,KAAKG,Y,CAInB,cAAAiE,GACEpE,KAAKE,aAAa8C,SAASnB,IACzB7B,KAAKgC,cAAcH,EAAK,G,CAK5B,cAAAwC,GACErE,KAAKE,aAAa8C,SAASnB,IACzB7B,KAAKgC,cAAcH,GACnB7B,KAAKwC,cAAcX,EAAK,G,CAK5B,cAAAyC,GACEtE,KAAKE,aAAa8C,SAASnB,IACzB7B,KAAKwC,cAAcX,EAAK,G,CAIpB,UAAA0C,CAAWhC,GACjB,MAAMV,EAAO7B,KAAKC,MAAMkC,MAAMN,GAASA,EAAKO,OAASG,IACrD,OAAOV,GAAQA,EAAKQ,gBAAkBR,EAAKqB,SAAW,K,CAGhD,gBAAAsB,CAAiBjC,GACvB,MAAMV,EAAO7B,KAAKC,MAAMkC,MAAMN,GAASA,EAAKO,OAASG,IACrD,OAAOV,IAASA,EAAKQ,c,CAGf,UAAAoC,CAAWlC,GACjB,MAAMV,EAAO7B,KAAKC,MAAMkC,MAAMN,GAASA,EAAKO,OAASG,IACrD,QAASV,C,CAGH,UAAA6C,CAAWnC,GACjB,MAAMV,EAAO7B,KAAKC,MAAMkC,MAAMN,GAASA,EAAKO,OAASG,IACrD,OAAOV,EAAOA,EAAKqB,SAAW,K,CAGhC,MAAAyB,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,6CACD9E,KAAKmB,SACLnB,KAAKsC,QAAU,gBACbsC,EAAA,OAAKG,MAAM,sBACTH,EAAA,OACEG,MAAO,CACLC,IAAK,KACL,eAAgBhF,KAAKuE,WAAW,QAChC,gBAAiBvE,KAAKuE,WAAW,WAGnCK,EAAA,OACEE,IAAI,OACJC,MAAO,CAAE,gBAAiB/E,KAAK0E,WAAW,UAE1CE,EAAA,QAAMK,KAAK,UAEbL,EAAA,OACEG,MAAO,CACLG,IAAK,KACL,cAAelF,KAAKuE,WAAW,OAC/B,iBAAkBvE,KAAKuE,WAAW,YAGpCK,EAAA,OACEE,IAAI,MACJC,MAAO,CAAE,eAAgB/E,KAAK0E,WAAW,SAEzCE,EAAA,QAAMK,KAAK,SAEbL,EAAA,OACEE,IAAI,UACJC,MAAM,UACNI,QAAS,IAAMnF,KAAKmD,sBAEpByB,EAAA,QAAMK,KAAK,aAEbL,EAAA,OACEE,IAAI,SACJC,MAAO,CAAE,kBAAmB/E,KAAK0E,WAAW,YAE5CE,EAAA,QAAMK,KAAK,aAGfL,EAAA,OACEE,IAAI,QACJC,MAAO,CAAE,iBAAkB/E,KAAK0E,WAAW,WAE3CE,EAAA,QAAMK,KAAK,aAKjBL,EAAA,OAAKG,MAAM,sBACTH,EAAA,OACEG,MAAO,CACLG,IAAK,KACL,cAAelF,KAAKuE,WAAW,OAC/B,iBAAkBvE,KAAKuE,WAAW,YAGpCK,EAAA,OACEE,IAAI,MACJC,MAAO,CAAE,eAAgB/E,KAAK0E,WAAW,SAEzCE,EAAA,QAAMK,KAAK,SAEbL,EAAA,OACEG,MAAO,CACLC,IAAK,KACL,eAAgBhF,KAAKuE,WAAW,QAChC,gBAAiBvE,KAAKuE,WAAW,WAGnCK,EAAA,OACEE,IAAI,OACJC,MAAO,CAAE,gBAAiB/E,KAAK0E,WAAW,UAE1CE,EAAA,QAAMK,KAAK,UAEbL,EAAA,OACEE,IAAI,UACJC,MAAM,UACNI,QAAS,IAAMnF,KAAKmD,sBAEpByB,EAAA,QAAMK,KAAK,aAEbL,EAAA,OACEE,IAAI,QACJC,MAAO,CAAE,iBAAkB/E,KAAK0E,WAAW,WAE3CE,EAAA,QAAMK,KAAK,YAGfL,EAAA,OACEE,IAAI,SACJC,MAAO,CAAE,kBAAmB/E,KAAK0E,WAAW,YAE5CE,EAAA,QAAMK,KAAK,cAMnBL,EAAA,OAAKG,MAAM,OACTH,EAAA,OACEE,IAAI,MACJhC,MAAO,CACLsC,UAAWpF,KAAKwE,iBAAiB,OAAS,OAAS,IACnDa,QAASrF,KAAKyE,WAAW,OAAS,QAAU,SAG9CG,EAAA,QAAMK,KAAK,SAEbL,EAAA,OACEE,IAAI,OACJhC,MAAO,CACLsC,UAAWpF,KAAKwE,iBAAiB,QAAU,OAAS,IACpDa,QAASrF,KAAKyE,WAAW,QAAU,QAAU,SAG/CG,EAAA,QAAMK,KAAK,UAEbL,EAAA,OACEE,IAAI,UACJC,MAAM,UACNI,QAAS,IAAMnF,KAAKmD,sBAEpByB,EAAA,QAAMK,KAAK,aAEbL,EAAA,OACEE,IAAI,QACJhC,MAAO,CACLsC,UAAWpF,KAAKwE,iBAAiB,SAAW,OAAS,IACrDa,QAASrF,KAAKyE,WAAW,SAAW,QAAU,SAGhDG,EAAA,QAAMK,KAAK,WAEbL,EAAA,OACEE,IAAI,SACJhC,MAAO,CACLsC,UAAWpF,KAAKwE,iBAAiB,UAAY,OAAS,IACtDa,QAASrF,KAAKyE,WAAW,UAAY,QAAU,SAGjDG,EAAA,QAAMK,KAAK,a"}