{"version":3,"names":["flipTileCss","IxFlipTileStyle0","FlipTile","this","ANIMATION_DURATION","componentDidLoad","observer","createMutationObserver","updateContentItems","observe","hostElement","childList","componentWillLoad","updateContentVisibility","index","disconnectedCallback","disconnect","contentItems","Array","from","querySelectorAll","indexVisible","forEach","content","contentVisible","toggleIndex","doFlipAnimation","isFlipAnimationActive","setTimeout","length","render","h","Host","key","style","height","width","class","info","state","FlipTileState","Info","warning","Warning","alarm","Alarm","primary","Primary","name","icon","variant","ghost","onClick","footer"],"sources":["src/components/flip-tile/flip-tile.scss?tag=ix-flip-tile&encapsulation=shadow","src/components/flip-tile/flip-tile.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/animations';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n@import 'legacy/fonts';\n\n@include keyframes(flip-animation) {\n  0% {\n    transform: rotateY(0);\n  }\n  50% {\n    transform: rotateY(90deg);\n  }\n  51% {\n    transform: rotateY(270deg);\n  }\n  100% {\n    transform: rotateY(360deg);\n  }\n}\n\n:host {\n  @include ix-component;\n  display: flex;\n  flex-direction: column;\n  perspective: 1000px;\n\n  .flip-tile-header {\n    display: flex;\n    align-items: center;\n    height: $large-control-height;\n    padding: 0 $small-space 0 $default-space;\n\n    .header-slot-container {\n      @include ellipsis;\n      flex-grow: 1;\n      min-width: 0;\n    }\n  }\n\n  .content-container {\n    flex-grow: 1;\n    margin: $default-space;\n  }\n\n  .flip-tile-container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    background-color: var(--theme-blind-base--background);\n    border: solid 1px var(--theme-blind-base--border-color);\n    border-radius: var(--theme-flip-tile--border-radius)\n      var(--theme-flip-tile--border-radius) 0 0;\n    transform-style: preserve-3d;\n\n    &.flip-animation-active {\n      @include animation(flip-animation, 2 * $default-time, ease-in-out);\n    }\n\n    .footer {\n      display: flex;\n      height: 3rem;\n      align-items: center;\n      justify-content: center;\n      padding: 0 $small-space;\n      color: var(--theme-flip-footer--color);\n      background-color: var(--theme-blind-base--background);\n\n      :first-child {\n        @include ellipsis;\n        height: 100%;\n      }\n    }\n\n    ::slotted(*) {\n      @include ellipsis;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      min-width: 0;\n    }\n\n    &.primary {\n      border-color: var(--theme-color-primary);\n\n      .footer {\n        background-color: var(--theme-color-primary);\n        color: var(--theme-color-primary--contrast);\n      }\n    }\n\n    &.info {\n      border-color: var(--theme-color-info);\n\n      .footer {\n        background-color: var(--theme-color-info);\n        color: var(--theme-color-info--contrast);\n      }\n    }\n\n    &.warning {\n      border-color: var(--theme-color-warning);\n\n      .footer {\n        background-color: var(--theme-color-warning);\n        color: var(--theme-color-warning--contrast);\n      }\n    }\n\n    &.alarm {\n      border-color: var(--theme-color-alarm);\n\n      .footer {\n        background-color: var(--theme-color-alarm);\n        color: var(--theme-color-alarm--contrast);\n      }\n    }\n  }\n\n  &:hover .flip-tile-container .footer ix-icon {\n    color: var(--theme-color-std-text);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop, State } from '@stencil/core';\nimport { createMutationObserver } from '../utils/mutation-observer';\nimport { FlipTileState } from './flip-tile-state';\n\n@Component({\n  tag: 'ix-flip-tile',\n  styleUrl: 'flip-tile.scss',\n  shadow: true,\n})\nexport class FlipTile {\n  @Element() hostElement!: HTMLIxFlipTileElement;\n\n  /**\n   * Variation of the Flip\n   */\n  @Prop() state: FlipTileState;\n\n  /**\n   * Height interpreted as REM\n   * @since 1.5.0\n   */\n  @Prop() height: number | 'auto' = 15.125;\n\n  /**\n   * Width interpreted as REM\n   * @since 1.5.0\n   */\n  @Prop() width: number | 'auto' = 16;\n\n  @State() index = 0;\n  @State() isFlipAnimationActive: boolean;\n\n  private readonly ANIMATION_DURATION = 150;\n  private contentItems: Array<HTMLIxFlipTileContentElement>;\n\n  private observer: MutationObserver;\n\n  componentDidLoad() {\n    this.observer = createMutationObserver(() => this.updateContentItems());\n    this.observer.observe(this.hostElement, {\n      childList: true,\n    });\n  }\n\n  componentWillLoad() {\n    this.updateContentItems();\n    this.updateContentVisibility(this.index);\n  }\n\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  private updateContentItems() {\n    this.contentItems = Array.from(\n      this.hostElement.querySelectorAll('ix-flip-tile-content')\n    );\n  }\n\n  private updateContentVisibility(indexVisible: number) {\n    this.contentItems.forEach(\n      (content, index) => (content.contentVisible = index === indexVisible)\n    );\n  }\n\n  private toggleIndex() {\n    this.doFlipAnimation();\n  }\n\n  private doFlipAnimation() {\n    this.isFlipAnimationActive = true;\n\n    setTimeout(() => {\n      this.updateContentVisibility(this.index);\n\n      if (this.index >= this.contentItems.length - 1) {\n        this.index = 0;\n      } else {\n        this.index++;\n      }\n\n      this.updateContentVisibility(this.index);\n    }, this.ANIMATION_DURATION);\n\n    setTimeout(() => {\n      this.isFlipAnimationActive = false;\n    }, 2 * this.ANIMATION_DURATION);\n  }\n\n  render() {\n    return (\n      <Host\n        style={{\n          height: `${this.height}${this.height === 'auto' ? '' : 'rem'}`,\n          'min-height': `${this.height}${this.height === 'auto' ? '' : 'rem'}`,\n          'max-height': `${this.height}${this.height === 'auto' ? '' : 'rem'}`,\n          width: `${this.width}${this.width === 'auto' ? '' : 'rem'}`,\n          'min-width': `${this.width}${this.width === 'auto' ? '' : 'rem'}`,\n          'max-width': `${this.width}${this.width === 'auto' ? '' : 'rem'}`,\n        }}\n      >\n        <div\n          class={{\n            'flip-tile-container': true,\n            info: this.state === FlipTileState.Info,\n            warning: this.state === FlipTileState.Warning,\n            alarm: this.state === FlipTileState.Alarm,\n            primary: this.state === FlipTileState.Primary,\n            'flip-animation-active': this.isFlipAnimationActive,\n          }}\n        >\n          <div class=\"flip-tile-header\">\n            <div class=\"header-slot-container text-l-title\">\n              <slot name=\"header\"></slot>\n            </div>\n            <ix-icon-button\n              icon={'eye'}\n              variant=\"primary\"\n              ghost\n              onClick={() => this.toggleIndex()}\n            ></ix-icon-button>\n          </div>\n\n          <div class=\"content-container\">\n            <slot></slot>\n          </div>\n          <div\n            class={{\n              footer: true,\n              'contrast-light': this.state === FlipTileState.Warning,\n              'contrast-dark':\n                this.state === FlipTileState.Info ||\n                this.state === FlipTileState.Alarm,\n            }}\n          >\n            <slot name=\"footer\"></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"iIAAA,MAAMA,EAAc,6oLACpB,MAAAC,EAAeD,E,MCiBFE,EAAQ,M,yBAuBFC,KAAAC,mBAAqB,I,iCAXJ,O,WAMD,G,WAEhB,E,qCAQjB,gBAAAC,GACEF,KAAKG,SAAWC,GAAuB,IAAMJ,KAAKK,uBAClDL,KAAKG,SAASG,QAAQN,KAAKO,YAAa,CACtCC,UAAW,M,CAIf,iBAAAC,GACET,KAAKK,qBACLL,KAAKU,wBAAwBV,KAAKW,M,CAGpC,oBAAAC,GACE,GAAIZ,KAAKG,SAAU,CACjBH,KAAKG,SAASU,Y,EAIV,kBAAAR,GACNL,KAAKc,aAAeC,MAAMC,KACxBhB,KAAKO,YAAYU,iBAAiB,wB,CAI9B,uBAAAP,CAAwBQ,GAC9BlB,KAAKc,aAAaK,SAChB,CAACC,EAAST,IAAWS,EAAQC,eAAiBV,IAAUO,G,CAIpD,WAAAI,GACNtB,KAAKuB,iB,CAGC,eAAAA,GACNvB,KAAKwB,sBAAwB,KAE7BC,YAAW,KACTzB,KAAKU,wBAAwBV,KAAKW,OAElC,GAAIX,KAAKW,OAASX,KAAKc,aAAaY,OAAS,EAAG,CAC9C1B,KAAKW,MAAQ,C,KACR,CACLX,KAAKW,O,CAGPX,KAAKU,wBAAwBV,KAAKW,MAAM,GACvCX,KAAKC,oBAERwB,YAAW,KACTzB,KAAKwB,sBAAwB,KAAK,GACjC,EAAIxB,KAAKC,mB,CAGd,MAAA0B,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACLC,OAAQ,GAAGhC,KAAKgC,SAAShC,KAAKgC,SAAW,OAAS,GAAK,QACvD,aAAc,GAAGhC,KAAKgC,SAAShC,KAAKgC,SAAW,OAAS,GAAK,QAC7D,aAAc,GAAGhC,KAAKgC,SAAShC,KAAKgC,SAAW,OAAS,GAAK,QAC7DC,MAAO,GAAGjC,KAAKiC,QAAQjC,KAAKiC,QAAU,OAAS,GAAK,QACpD,YAAa,GAAGjC,KAAKiC,QAAQjC,KAAKiC,QAAU,OAAS,GAAK,QAC1D,YAAa,GAAGjC,KAAKiC,QAAQjC,KAAKiC,QAAU,OAAS,GAAK,UAG5DL,EAAA,OAAAE,IAAA,2CACEI,MAAO,CACL,sBAAuB,KACvBC,KAAMnC,KAAKoC,QAAUC,EAAcC,KACnCC,QAASvC,KAAKoC,QAAUC,EAAcG,QACtCC,MAAOzC,KAAKoC,QAAUC,EAAcK,MACpCC,QAAS3C,KAAKoC,QAAUC,EAAcO,QACtC,wBAAyB5C,KAAKwB,wBAGhCI,EAAA,OAAAE,IAAA,2CAAKI,MAAM,oBACTN,EAAA,OAAAE,IAAA,2CAAKI,MAAM,sCACTN,EAAA,QAAAE,IAAA,2CAAMe,KAAK,YAEbjB,EAAA,kBAAAE,IAAA,2CACEgB,KAAM,MACNC,QAAQ,UACRC,MAAK,KACLC,QAAS,IAAMjD,KAAKsB,iBAIxBM,EAAA,OAAAE,IAAA,2CAAKI,MAAM,qBACTN,EAAA,QAAAE,IAAA,8CAEFF,EAAA,OAAAE,IAAA,2CACEI,MAAO,CACLgB,OAAQ,KACR,iBAAkBlD,KAAKoC,QAAUC,EAAcG,QAC/C,gBACExC,KAAKoC,QAAUC,EAAcC,MAC7BtC,KAAKoC,QAAUC,EAAcK,QAGjCd,EAAA,QAAAE,IAAA,2CAAMe,KAAK,a"}