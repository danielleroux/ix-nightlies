import{T as t}from"./p-c4749812.js";class e{get themeChanged(){return this._themeChanged}hasVariantSuffix(t){return t.endsWith(this.suffixDark)||t.endsWith(this.suffixLight)}isThemeClass(t){return t.startsWith(this.prefixTheme)&&this.hasVariantSuffix(t)}setTheme(t,e=false){if(!this.isThemeClass(t)&&e===false){throw Error(`Provided theme name ${t} does not match our naming conventions. (theme-<name>-(dark,light))`)}if(e){const e=i();this.replaceBodyThemeClass(t);this.setVariant(e);return}this.replaceBodyThemeClass(t)}replaceBodyThemeClass(t){const e=[];document.body.classList.forEach((t=>{if(this.isThemeClass(t)){e.push(t)}}));document.body.classList.remove(...e);document.body.classList.add(t)}toggleMode(){const t=[];document.body.classList.forEach((e=>{if(this.isThemeClass(e)){t.push(e)}}));if(t.length===0){document.body.classList.add(this.getOppositeMode(this.defaultTheme));return}t.forEach((t=>{document.body.classList.replace(t,this.getOppositeMode(t))}))}getCurrentTheme(){var t;return(t=Array.from(document.body.classList).find((t=>this.isThemeClass(t))))!==null&&t!==void 0?t:`theme-${window.getComputedStyle(document.body).getPropertyValue("--ix-theme-name")}`}setVariant(t=i()){const e=this.getCurrentTheme();document.body.classList.remove(e);if(e.endsWith(this.suffixDark)){document.body.classList.add(e.replace(/-dark$/g,`-${t}`))}if(e.endsWith(this.suffixLight)){document.body.classList.add(e.replace(/-light$/g,`-${t}`))}}getOppositeMode(t){if(t.endsWith(this.suffixDark)){return t.replace(/-dark$/g,this.suffixLight)}if(t.endsWith(this.suffixLight)){return t.replace(/-light$/g,this.suffixDark)}}handleMutations(t){return t.forEach((t=>{const{target:e}=t;e.classList.forEach((e=>{var i;if(this.isThemeClass(e)&&!((i=t.oldValue)===null||i===void 0?void 0:i.includes(e))){this._themeChanged.emit(e)}}))}))}registerMutationObserver(){if(typeof window==="undefined"){return}if(!("MutationObserver"in window)){console.warn("ThemeSwitcher not supported by your browser. Missing MutationObserver API");return}this.mutationObserver=new MutationObserver((t=>{this.handleMutations(t)}));this.mutationObserver.observe(document.body,{attributeFilter:["class"],attributeOldValue:true})}constructor(){this.prefixTheme="theme-";this.suffixLight="-light";this.suffixDark="-dark";this.defaultTheme="theme-classic-dark";this._themeChanged=new t;this.registerMutationObserver()}}const i=()=>{const t=window.matchMedia("(prefers-color-scheme: dark)");if(t.matches){return"dark"}return"light"};const s=new e;export{i as g,s as t};
//# sourceMappingURL=p-1da901d5.js.map